package object.p2pipcam.client;

import java.util.Date;

import object.p2pipcam.nativecaller.NativeCaller;
import object.p2pipcam.utils.DatabaseUtil;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.provider.ContactsContract.Contacts.Data;
import android.util.Log;
import android.view.KeyEvent;
import android.view.Window;
import android.view.WindowManager;

public class StartActivity extends Activity {	
	private static final String LOG_TAG = "StartActivity" ;		
	
	private Handler mHandler = new Handler(){
		public void handleMessage(Message msg) {
			Intent in = new Intent(StartActivity.this, IpcamClientActivity.class);
			startActivity(in);
			finish();
		}
	};
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.d(LOG_TAG, "StartActivity onCreate") ;
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,  WindowManager.LayoutParams.FLAG_FULLSCREEN); 
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        requestWindowFeature(Window.FEATURE_NO_TITLE);        
        setContentView(R.layout.start);          
        new Thread(new Runnable(){
			@Override
			public void run() {
				// TODO Auto-generated method stub
				try{
//					Thread.sleep(2000);
//					Log.d(LOG_TAG, "PPPPInitial begin...");
					NativeCaller.PPPPInitial();
//					Log.d(LOG_TAG, "PPPPInitial PPPPNetworkDetect...begin");
					
					long lStartTime = new Date().getTime();
					Log.d(LOG_TAG, "lStartTime: " + lStartTime);
					int nRes = NativeCaller.PPPPNetworkDetect();
					long lEndTime = new Date().getTime();
					Log.d(LOG_TAG, "lEndTime: " + lEndTime);
					if(lEndTime - lStartTime <= 1000){
						Thread.sleep(1000);
					}
//					Log.d(LOG_TAG, "PPPPInitial PPPPNetworkDetect...end nRes:" + nRes);
					Message msg = new Message();
					mHandler.sendMessage(msg);
				}catch(Exception e){
					
				}
			}        	
        }).start();      
    }
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		// TODO Auto-generated method stub
		if(keyCode == KeyEvent.KEYCODE_BACK)
			return true;

		return super.onKeyDown(keyCode, event);
	}
    
    
	
}