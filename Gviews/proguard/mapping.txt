android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> registerContentObserver
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.MenuCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int mSeenPositionMin -> mSeenPositionMin
    int mSeenPositionMax -> mSeenPositionMax
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat from(android.content.Context) -> from
    boolean isFinished() -> isFinished
    int getDuration() -> getDuration
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity() -> getCurrVelocity
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(android.widget.Scroller) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.ant.liao.GifAction -> com.ant.liao.a:
    void parseOk(boolean,int) -> a
com.ant.liao.GifDecoder -> com.ant.liao.b:
    java.io.InputStream in -> c
    int status -> d
    int width -> a
    int height -> b
    boolean gctFlag -> e
    int gctSize -> f
    int loopCount -> g
    int[] gct -> h
    int[] lct -> i
    int[] act -> j
    int bgIndex -> k
    int bgColor -> l
    int lastBgColor -> m
    int pixelAspect -> n
    boolean lctFlag -> o
    boolean interlace -> p
    int lctSize -> q
    int ix -> r
    int iy -> s
    int iw -> t
    int ih -> u
    int lrx -> v
    int lry -> w
    int lrw -> x
    int lrh -> y
    android.graphics.Bitmap image -> z
    android.graphics.Bitmap lastImage -> A
    com.ant.liao.GifFrame currentFrame -> B
    boolean isShow -> C
    byte[] block -> D
    int blockSize -> E
    int dispose -> F
    int lastDispose -> G
    boolean transparency -> H
    int delay -> I
    int transIndex -> J
    short[] prefix -> K
    byte[] suffix -> L
    byte[] pixelStack -> M
    byte[] pixels -> N
    com.ant.liao.GifFrame gifFrame -> O
    int frameCount -> P
    com.ant.liao.GifAction action -> Q
    byte[] gifData -> R
    void run() -> run
    int getFrameCount() -> a
    android.graphics.Bitmap getImage() -> b
    void setPixels() -> d
    android.graphics.Bitmap getFrameImage(int) -> a
    com.ant.liao.GifFrame getFrame(int) -> b
    com.ant.liao.GifFrame next() -> c
    int readByte() -> e
    int readStream() -> f
    void decodeImageData() -> g
    boolean err() -> h
    void init() -> i
    int read() -> j
    int readBlock() -> k
    int[] readColorTable(int) -> c
    void readContents() -> l
    void readGraphicControlExt() -> m
    void readHeader() -> n
    void readImage() -> o
    void readLSD() -> p
    void readNetscapeExt() -> q
    int readShort() -> r
    void resetFrame() -> s
    void skip() -> t
com.ant.liao.GifFrame -> com.ant.liao.c:
    android.graphics.Bitmap image -> a
    int delay -> b
    com.ant.liao.GifFrame nextFrame -> c
com.ant.liao.GifView -> com.ant.liao.GifView:
    com.ant.liao.GifDecoder gifDecoder -> a
    android.graphics.Bitmap currentImage -> b
    boolean isRun -> c
    boolean pause -> d
    int showWidth -> e
    int showHeight -> f
    android.graphics.Rect rect -> g
    com.ant.liao.GifView$DrawThread drawThread -> h
    com.ant.liao.GifView$GifImageType animationType -> i
    android.os.Handler redrawHandler -> j
    int[] $SWITCH_TABLE$com$ant$liao$GifView$GifImageType -> k
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void parseOk(boolean,int) -> a
    void reDraw() -> b
    com.ant.liao.GifDecoder access$0(com.ant.liao.GifView) -> a
    boolean access$1(com.ant.liao.GifView) -> b
    boolean access$2(com.ant.liao.GifView) -> c
    void access$3(com.ant.liao.GifView,android.graphics.Bitmap) -> a
    android.os.Handler access$4(com.ant.liao.GifView) -> d
    int[] $SWITCH_TABLE$com$ant$liao$GifView$GifImageType() -> a
com.ant.liao.GifView$1 -> com.ant.liao.d:
    com.ant.liao.GifView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.ant.liao.GifView$DrawThread -> com.ant.liao.e:
    com.ant.liao.GifView this$0 -> a
    void run() -> run
com.ant.liao.GifView$GifImageType -> com.ant.liao.f:
    com.ant.liao.GifView$GifImageType WAIT_FINISH -> a
    com.ant.liao.GifView$GifImageType SYNC_DECODER -> b
    com.ant.liao.GifView$GifImageType COVER -> c
    int nativeInt -> d
    com.ant.liao.GifView$GifImageType[] ENUM$VALUES -> e
    com.ant.liao.GifView$GifImageType[] values() -> values
    com.ant.liao.GifView$GifImageType valueOf(java.lang.String) -> valueOf
com.cj.Receiver.AlarmRecordReceiver -> com.cj.Receiver.AlarmRecordReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.util.Date Str2Date(java.lang.String,java.lang.String) -> a
    com.homecoolink.data.AlarmRecord insertAlarmRecord(java.lang.String,int,int,int,java.lang.String) -> a
    void doRemoteList() -> a
    void access$0(com.cj.Receiver.AlarmRecordReceiver) -> a
com.cj.Receiver.AlarmRecordReceiver$1 -> com.cj.Receiver.a:
    com.cj.Receiver.AlarmRecordReceiver this$0 -> a
    void run() -> run
com.cj.Receiver.AlarmRecordReceiver$GetRemoteDataTask -> com.cj.Receiver.b:
    com.cj.Receiver.AlarmRecordReceiver this$0 -> a
    java.lang.String[] doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.cj.utils.AlwaysMarqueeTextView -> com.cj.utils.AlwaysMarqueeTextView:
    boolean isFocused() -> isFocused
com.cj.utils.NetManager -> com.cj.utils.a:
    java.lang.String CURRENT_SERVER -> a
    java.lang.String GetPhoneCode_URL -> b
    java.lang.String CheckPhoneCode_URL -> c
    java.lang.String UpdatePwd_URL -> d
    java.lang.String SendEmail_URL -> e
    android.content.Context context -> f
    org.json.JSONObject GetCheckCodeByPhone(java.lang.String) -> a
    org.json.JSONObject GetCheckCodeByEmail(java.lang.String) -> b
    org.json.JSONObject CheckCodePhoneCode(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    org.json.JSONObject UpdatePassWord(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String doPost(java.util.List,java.lang.String) -> a
com.cj.utils.PwdErrorUtil -> com.cj.utils.b:
    android.content.Context context -> a
    void PwdError(java.lang.String,com.cj.utils.PwdErrorUtil$DialogHandler) -> a
    void PwdError(java.lang.String) -> a
com.cj.utils.PwdErrorUtil$1 -> com.cj.utils.c:
    com.cj.utils.PwdErrorUtil this$0 -> a
    android.content.Intent val$modify -> b
    com.cj.utils.PwdErrorUtil$DialogHandler val$handler -> c
    void onClick() -> a
com.cj.utils.PwdErrorUtil$2 -> com.cj.utils.d:
    com.cj.utils.PwdErrorUtil this$0 -> a
    com.cj.utils.PwdErrorUtil$DialogHandler val$handler -> b
    void onClick() -> a
com.cj.utils.PwdErrorUtil$3 -> com.cj.utils.e:
    com.cj.utils.PwdErrorUtil this$0 -> a
    android.content.Intent val$modify -> b
    com.cj.utils.PwdErrorUtil$DialogHandler val$handler -> c
    void onClick() -> a
com.cj.utils.PwdErrorUtil$4 -> com.cj.utils.f:
    com.cj.utils.PwdErrorUtil this$0 -> a
    com.cj.utils.PwdErrorUtil$DialogHandler val$handler -> b
    void onClick() -> a
com.cj.utils.PwdErrorUtil$5 -> com.cj.utils.g:
    com.cj.utils.PwdErrorUtil this$0 -> a
    void onClose() -> a
com.cj.utils.PwdErrorUtil$DialogHandler -> com.cj.utils.h:
    void onClose() -> a
com.google.zxing.BarcodeFormat -> com.a.a.a:
    java.util.Hashtable VALUES -> p
    com.google.zxing.BarcodeFormat QR_CODE -> a
    com.google.zxing.BarcodeFormat DATA_MATRIX -> b
    com.google.zxing.BarcodeFormat UPC_E -> c
    com.google.zxing.BarcodeFormat UPC_A -> d
    com.google.zxing.BarcodeFormat EAN_8 -> e
    com.google.zxing.BarcodeFormat EAN_13 -> f
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> g
    com.google.zxing.BarcodeFormat CODE_128 -> h
    com.google.zxing.BarcodeFormat CODE_39 -> i
    com.google.zxing.BarcodeFormat CODE_93 -> j
    com.google.zxing.BarcodeFormat CODABAR -> k
    com.google.zxing.BarcodeFormat ITF -> l
    com.google.zxing.BarcodeFormat RSS14 -> m
    com.google.zxing.BarcodeFormat PDF417 -> n
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> o
    java.lang.String name -> q
    java.lang.String toString() -> toString
com.google.zxing.EncodeHintType -> com.a.a.b:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> a
    com.google.zxing.EncodeHintType CHARACTER_SET -> b
com.google.zxing.MultiFormatWriter -> com.a.a.c:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> a
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> a
com.google.zxing.Writer -> com.a.a.d:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> a
com.google.zxing.WriterException -> com.a.a.e:
com.google.zxing.common.BitArray -> com.a.a.a.a:
    int[] bits -> a
    int size -> b
    int getSize() -> a
    int getSizeInBytes() -> b
    void ensureCapacity(int) -> b
    boolean get(int) -> a
    void appendBit(boolean) -> a
    void appendBits(int,int) -> a
    void appendBitArray(com.google.zxing.common.BitArray) -> a
    void xor(com.google.zxing.common.BitArray) -> b
    void toBytes(int,byte[],int,int) -> a
    int[] makeArray(int) -> c
    java.lang.String toString() -> toString
com.google.zxing.common.BitMatrix -> com.a.a.a.b:
    int width -> a
    int height -> b
    int rowSize -> c
    int[] bits -> d
    boolean get(int,int) -> a
    void setRegion(int,int,int,int) -> a
    int getWidth() -> a
    int getHeight() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.common.CharacterSetECI -> com.a.a.a.c:
    java.util.Hashtable VALUE_TO_ECI -> a
    java.util.Hashtable NAME_TO_ECI -> b
    java.lang.String encodingName -> c
    void initialize() -> b
    void addCharacterSet(int,java.lang.String) -> a
    void addCharacterSet(int,java.lang.String[]) -> a
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> a
com.google.zxing.common.ECI -> com.a.a.a.d:
    int value -> a
    int getValue() -> a
com.google.zxing.common.reedsolomon.GF256 -> com.a.a.a.a.a:
    com.google.zxing.common.reedsolomon.GF256 QR_CODE_FIELD -> a
    com.google.zxing.common.reedsolomon.GF256 DATA_MATRIX_FIELD -> b
    int[] expTable -> c
    int[] logTable -> d
    com.google.zxing.common.reedsolomon.GF256Poly zero -> e
    com.google.zxing.common.reedsolomon.GF256Poly one -> f
    com.google.zxing.common.reedsolomon.GF256Poly getZero() -> a
    com.google.zxing.common.reedsolomon.GF256Poly buildMonomial(int,int) -> a
    int addOrSubtract(int,int) -> b
    int exp(int) -> a
    int log(int) -> b
    int inverse(int) -> c
    int multiply(int,int) -> c
com.google.zxing.common.reedsolomon.GF256Poly -> com.a.a.a.a.b:
    com.google.zxing.common.reedsolomon.GF256 field -> a
    int[] coefficients -> b
    int[] getCoefficients() -> a
    int getDegree() -> b
    boolean isZero() -> c
    int getCoefficient(int) -> a
    com.google.zxing.common.reedsolomon.GF256Poly addOrSubtract(com.google.zxing.common.reedsolomon.GF256Poly) -> a
    com.google.zxing.common.reedsolomon.GF256Poly multiply(com.google.zxing.common.reedsolomon.GF256Poly) -> b
    com.google.zxing.common.reedsolomon.GF256Poly multiplyByMonomial(int,int) -> a
    com.google.zxing.common.reedsolomon.GF256Poly[] divide(com.google.zxing.common.reedsolomon.GF256Poly) -> c
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.a.a.a.a.c:
    com.google.zxing.common.reedsolomon.GF256 field -> a
    java.util.Vector cachedGenerators -> b
    com.google.zxing.common.reedsolomon.GF256Poly buildGenerator(int) -> a
    void encode(int[],int) -> a
com.google.zxing.oned.Code128Reader -> com.a.a.b.a:
    int[][] CODE_PATTERNS -> a
com.google.zxing.oned.Code128Writer -> com.a.a.b.b:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> a
    byte[] encode(java.lang.String) -> a
com.google.zxing.oned.Code39Reader -> com.a.a.b.c:
    char[] ALPHABET -> b
    int[] CHARACTER_ENCODINGS -> a
    int ASTERISK_ENCODING -> c
com.google.zxing.oned.Code39Writer -> com.a.a.b.d:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> a
    byte[] encode(java.lang.String) -> a
    void toIntArray(int,int[]) -> a
com.google.zxing.oned.EAN13Reader -> com.a.a.b.e:
    int[] FIRST_DIGIT_ENCODINGS -> a
com.google.zxing.oned.EAN13Writer -> com.a.a.b.f:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> a
    byte[] encode(java.lang.String) -> a
com.google.zxing.oned.EAN8Writer -> com.a.a.b.g:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> a
    byte[] encode(java.lang.String) -> a
com.google.zxing.oned.ITFReader -> com.a.a.b.h:
    int[] DEFAULT_ALLOWED_LENGTHS -> b
    int[] START_PATTERN -> c
    int[] END_PATTERN_REVERSED -> d
    int[][] PATTERNS -> a
com.google.zxing.oned.ITFWriter -> com.a.a.b.i:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> a
    byte[] encode(java.lang.String) -> a
com.google.zxing.oned.OneDReader -> com.a.a.b.j:
com.google.zxing.oned.UPCEANReader -> com.a.a.b.k:
    int[] START_END_PATTERN -> b
    int[] MIDDLE_PATTERN -> c
    int[][] L_PATTERNS -> d
    int[][] L_AND_G_PATTERNS -> e
com.google.zxing.oned.UPCEANWriter -> com.a.a.b.l:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> a
    com.google.zxing.common.BitMatrix renderResult(byte[],int,int) -> a
    int appendPattern(byte[],int,int[],int) -> a
    byte[] encode(java.lang.String) -> a
com.google.zxing.qrcode.QRCodeWriter -> com.a.a.c.a:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable) -> a
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int) -> a
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.a.a.c.a.a:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> a
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> b
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> c
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> d
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> e
    int ordinal -> f
    int bits -> g
    java.lang.String name -> h
    int ordinal() -> a
    int getBits() -> b
    java.lang.String toString() -> toString
com.google.zxing.qrcode.decoder.Mode -> com.a.a.c.a.b:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> a
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> b
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> c
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> d
    com.google.zxing.qrcode.decoder.Mode BYTE -> e
    com.google.zxing.qrcode.decoder.Mode ECI -> f
    com.google.zxing.qrcode.decoder.Mode KANJI -> g
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> h
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> i
    int[] characterCountBitsForVersions -> j
    int bits -> k
    java.lang.String name -> l
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> a
    int getBits() -> a
    java.lang.String toString() -> toString
com.google.zxing.qrcode.decoder.Version -> com.a.a.c.a.c:
    int[] VERSION_DECODE_INFO -> a
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> b
    int versionNumber -> c
    int[] alignmentPatternCenters -> d
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> e
    int totalCodewords -> f
    int getVersionNumber() -> a
    int getTotalCodewords() -> b
    int getDimensionForVersion() -> c
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> a
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> a
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> d
com.google.zxing.qrcode.decoder.Version$ECB -> com.a.a.c.a.d:
    int count -> a
    int dataCodewords -> b
    int getCount() -> a
    int getDataCodewords() -> b
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.a.a.c.a.e:
    int ecCodewordsPerBlock -> a
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> b
    int getECCodewordsPerBlock() -> a
    int getNumBlocks() -> b
    int getTotalECCodewords() -> c
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> d
com.google.zxing.qrcode.encoder.BlockPair -> com.a.a.c.b.a:
    byte[] dataBytes -> a
    byte[] errorCorrectionBytes -> b
    byte[] getDataBytes() -> a
    byte[] getErrorCorrectionBytes() -> b
com.google.zxing.qrcode.encoder.ByteMatrix -> com.a.a.c.b.b:
    byte[][] bytes -> a
    int width -> b
    int height -> c
    int getHeight() -> a
    int getWidth() -> b
    byte get(int,int) -> a
    byte[][] getArray() -> c
    void set(int,int,int) -> a
    void set(int,int,boolean) -> a
    void clear(byte) -> a
    java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.a.a.c.b.c:
    int[] ALPHANUMERIC_TABLE -> a
    int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Hashtable,com.google.zxing.qrcode.encoder.QRCode) -> a
    int getAlphanumericCode(int) -> a
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> a
    boolean isOnlyDoubleByteKanji(java.lang.String) -> a
    int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void initQRCode(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.qrcode.encoder.QRCode) -> a
    void terminateBits(int,com.google.zxing.common.BitArray) -> a
    void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> a
    void interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int,com.google.zxing.common.BitArray) -> a
    byte[] generateECBytes(byte[],int) -> a
    void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> a
    void appendLengthInfo(int,int,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> a
    void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> a
    void appendNumericBytes(java.lang.String,com.google.zxing.common.BitArray) -> a
    void appendAlphanumericBytes(java.lang.String,com.google.zxing.common.BitArray) -> b
    void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> a
    void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> c
    void appendECI(com.google.zxing.common.ECI,com.google.zxing.common.BitArray) -> a
com.google.zxing.qrcode.encoder.MaskUtil -> com.a.a.c.b.d:
    int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> b
    int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> c
    int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> d
    boolean getDataMaskBit(int,int,int) -> a
    int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> a
com.google.zxing.qrcode.encoder.MatrixUtil -> com.a.a.c.b.e:
    int[][] POSITION_DETECTION_PATTERN -> a
    int[][] HORIZONTAL_SEPARATION_PATTERN -> b
    int[][] VERTICAL_SEPARATION_PATTERN -> c
    int[][] POSITION_ADJUSTMENT_PATTERN -> d
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> e
    int[][] TYPE_INFO_COORDINATES -> f
    void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void embedBasicPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void maybeEmbedVersionInfo(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> b
    void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    int findMSBSet(int) -> a
    int calculateBCHCode(int,int) -> a
    void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> a
    void makeVersionInfoBits(int,com.google.zxing.common.BitArray) -> a
    boolean isEmpty(int) -> b
    boolean isValidValue(int) -> c
    void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> b
    void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> c
    void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> b
    void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> c
    void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> d
    void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> d
    void maybeEmbedPositionAdjustmentPatterns(int,com.google.zxing.qrcode.encoder.ByteMatrix) -> c
com.google.zxing.qrcode.encoder.QRCode -> com.a.a.c.b.f:
    com.google.zxing.qrcode.decoder.Mode mode -> a
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> b
    int version -> c
    int matrixWidth -> d
    int maskPattern -> e
    int numTotalBytes -> f
    int numDataBytes -> g
    int numECBytes -> h
    int numRSBlocks -> i
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> j
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> a
    int getVersion() -> b
    int getMatrixWidth() -> c
    int getMaskPattern() -> d
    int getNumTotalBytes() -> e
    int getNumDataBytes() -> f
    int getNumRSBlocks() -> g
    com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> h
    boolean isValid() -> i
    java.lang.String toString() -> toString
    void setMode(com.google.zxing.qrcode.decoder.Mode) -> a
    void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> a
    void setVersion(int) -> a
    void setMatrixWidth(int) -> b
    void setMaskPattern(int) -> c
    void setNumTotalBytes(int) -> d
    void setNumDataBytes(int) -> e
    void setNumECBytes(int) -> f
    void setNumRSBlocks(int) -> g
    void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    boolean isValidMaskPattern(int) -> h
com.homecoolink.CallActivity -> com.homecoolink.CallActivity:
    android.content.Context mContext -> a
    com.homecoolink.utils.PhoneWatcher mPhoneWatcher -> b
    android.widget.TextView top_text -> c
    boolean isOutCall -> d
    com.homecoolink.widget.HeaderView header_img -> e
    java.lang.String callId -> f
    java.lang.String contactName -> g
    java.lang.String ipFlag -> h
    int type -> i
    java.lang.String password -> j
    boolean isRegFilter -> k
    boolean isAccept -> l
    boolean isReject -> m
    android.widget.TextView ror_tv -> n
    java.util.Timer timer -> o
    android.content.Intent intentCall -> p
    android.content.BroadcastReceiver mReceiver -> t
    android.os.Handler handler -> q
    int i_count -> r
    java.util.TimerTask task -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onHomePressed() -> a
    void startWatcher() -> i
    void initComponent() -> b
    void regFilter() -> c
    void onBackPressed() -> onBackPressed
    void onClick(android.view.View) -> onClick
    void reject() -> d
    void onDestroy() -> onDestroy
    void insertNearly() -> e
    int getActivityInfo() -> f
    void onGoBack() -> g
    void onGoFront() -> h
com.homecoolink.CallActivity$1 -> com.homecoolink.a:
    com.homecoolink.CallActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.homecoolink.CallActivity access$0(com.homecoolink.CallActivity$1) -> a
com.homecoolink.CallActivity$1$1 -> com.homecoolink.b:
    com.homecoolink.CallActivity$1 this$1 -> a
    void onClose() -> a
com.homecoolink.CallActivity$2 -> com.homecoolink.c:
    com.homecoolink.CallActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.homecoolink.CallActivity$3 -> com.homecoolink.d:
    com.homecoolink.CallActivity this$0 -> a
    void run() -> run
com.homecoolink.CallActivity$4 -> com.homecoolink.e:
    com.homecoolink.CallActivity this$0 -> a
    void onCommingCall() -> a
com.homecoolink.MonitorActivity -> com.homecoolink.MonitorActivity:
    android.content.Context mContext -> a
    boolean isRegFilter -> b
    boolean mIsCloseVoice -> c
    int type -> d
    android.widget.ImageView screenshot -> e
    android.widget.ImageView hungup -> f
    android.widget.ImageView close_voice -> g
    android.widget.ImageView send_voice -> h
    android.widget.ImageView definition_btn -> i
    android.media.AudioManager mAudioManager -> j
    int mCurrentVolume -> k
    int mMaxVolume -> l
    com.homecoolink.utils.PhoneWatcher mPhoneWatcher -> m
    android.widget.RelativeLayout control_bottom -> n
    android.widget.LinearLayout layout_voice_state -> o
    android.widget.ImageView voice_state -> p
    android.widget.TextView video_mode_hd -> q
    android.widget.TextView video_mode_sd -> r
    android.widget.TextView video_mode_ld -> s
    android.widget.TextView text_number -> t
    boolean isControlShow -> u
    boolean isReject -> v
    boolean isHD -> w
    int current_video_mode -> x
    android.widget.PopupWindow popMenu -> K
    android.os.Handler mhandler -> L
    android.view.LayoutInflater lif -> M
    android.widget.RelativeLayout btndefense -> y
    android.widget.ImageView imgdefense -> z
    android.widget.ProgressBar progress_defence -> A
    com.homecoolink.data.Contact contact -> B
    java.lang.Runnable mrunnable -> C
    android.os.Handler mHandler -> D
    android.content.BroadcastReceiver mReceiver -> N
    long exitTime -> O
    void onCreate(android.os.Bundle) -> onCreate
    void onHomePressed() -> a
    void startWatcher() -> k
    void initComponent() -> b
    void getdefensestate() -> l
    void regFilter() -> c
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void changeControl() -> d
    void updateVideoModeText(int) -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
    void onP2PViewSingleTap() -> e
    void onGoBack() -> g
    void onGoFront() -> h
    void onCaptureScreenResult(boolean) -> a
    void reject() -> i
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void access$0(com.homecoolink.MonitorActivity) -> a
    android.os.Handler access$1(com.homecoolink.MonitorActivity) -> b
com.homecoolink.MonitorActivity$1 -> com.homecoolink.f:
    com.homecoolink.MonitorActivity this$0 -> a
    void run() -> run
com.homecoolink.MonitorActivity$2 -> com.homecoolink.g:
    com.homecoolink.MonitorActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.MonitorActivity$3 -> com.homecoolink.h:
    com.homecoolink.MonitorActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.MonitorActivity$4 -> com.homecoolink.i:
    com.homecoolink.MonitorActivity this$0 -> a
    void onCommingCall() -> a
com.homecoolink.MonitorActivity$5 -> com.homecoolink.j:
    com.homecoolink.MonitorActivity this$0 -> a
    android.graphics.drawable.AnimationDrawable val$anim -> b
    boolean onPreDraw() -> onPreDraw
com.homecoolink.MonitorActivity$6 -> com.homecoolink.k:
    com.homecoolink.MonitorActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.homecoolink.P2PConnect -> com.homecoolink.l:
    java.lang.String TAG -> a
    int current_state -> c
    java.lang.String current_call_id -> d
    int currentDeviceType -> e
    boolean isAlarming -> f
    boolean isPlaying -> g
    int mode -> h
    int number -> i
    android.content.Context mContext -> b
    int getCurrent_state() -> a
    void setCurrent_state(int) -> a
    int getMode() -> b
    void setMode(int) -> b
    int getNumber() -> c
    void setNumber(int) -> c
    java.lang.String getCurrent_call_id() -> d
    void setCurrent_call_id(java.lang.String) -> a
    void setCurrentDeviceType(int) -> d
    int getCurrentDeviceType() -> e
    boolean isPlaying() -> f
    void setPlaying(boolean) -> a
    void vCalling(boolean,int) -> a
    void vReject(java.lang.String) -> b
    void vAccept() -> g
    void vConnectReady() -> h
    void vAllarming(int,int,boolean,int,int) -> a
    void vEndAllarm() -> i
com.homecoolink.P2PListener -> com.homecoolink.m:
    void vCalling(boolean,java.lang.String,int) -> a
    void vReject(int) -> a
    void vAccept() -> a
    void vConnectReady() -> b
    void vAllarming(java.lang.String,int,boolean,int,int) -> a
    void vChangeVideoMask(int) -> b
    void vRetPlayBackPos(int,int) -> a
    void vRetPlayBackStatus(int) -> c
    void vGXNotifyFlag(int) -> d
    void vRetPlaySize(int,int) -> b
    void vRetPlayNumber(int) -> e
    void vRecvAudioVideoData(byte[],int,int,long,byte[],int,long) -> a
com.homecoolink.PlayBackActivity -> com.homecoolink.PlayBackActivity:
    int mCurrentVolume -> q
    int mMaxVolume -> r
    android.media.AudioManager mAudioManager -> s
    android.widget.RelativeLayout control_bottom -> a
    boolean isControlShow -> t
    boolean mIsCloseVoice -> u
    android.widget.ImageView stopVoice -> b
    android.widget.ImageView previous -> c
    android.widget.ImageView pause -> d
    android.widget.ImageView next -> e
    android.content.Context mContext -> f
    android.widget.SeekBar seekbar -> v
    boolean isPause -> g
    boolean isRegFilter -> h
    android.widget.TextView nowTime -> i
    android.widget.TextView totalTime -> j
    boolean isScroll -> k
    boolean isReject -> l
    com.homecoolink.utils.PhoneWatcher mPhoneWatcher -> m
    android.content.BroadcastReceiver mReceiver -> w
    long exitTime -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onHomePressed() -> a
    void startWatcher() -> n
    void initComponent() -> p
    void regFilter() -> q
    void reject() -> b
    void onBackPressed() -> onBackPressed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void changeControl() -> c
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    java.lang.String convertTime(int) -> a
    int getActivityInfo() -> f
    void onP2PViewSingleTap() -> d
    void onGoBack() -> g
    void onGoFront() -> h
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.widget.SeekBar access$0(com.homecoolink.PlayBackActivity) -> a
com.homecoolink.PlayBackActivity$1 -> com.homecoolink.n:
    com.homecoolink.PlayBackActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.PlayBackActivity$2 -> com.homecoolink.o:
    com.homecoolink.PlayBackActivity this$0 -> a
    void onCommingCall() -> a
com.homecoolink.R -> com.homecoolink.p:
com.homecoolink.R$styleable -> com.homecoolink.q:
    int[] PullToRefresh -> a
    int[] RoundAngleImageView -> b
com.homecoolink.SettingListener -> com.homecoolink.r:
    java.lang.String TAG -> a
    java.lang.String currentUser -> b
    java.lang.String currentPwd -> c
    int defenceAreaNum -> d
    void ACK_vRetCheckDevicePassword(int,int) -> a
    void ACK_vRetGetNpcSettings(java.lang.String,int,int) -> a
    void ACK_vRetGetDefenceStates(java.lang.String,int,int) -> b
    void vRetGetDeviceTimeResult(java.lang.String) -> a
    void vRetSetDeviceTimeResult(int) -> a
    void ACK_vRetSetDeviceTime(int,int) -> b
    void ACK_vRetGetDeviceTime(int,int) -> c
    void ACK_vRetSetNpcSettingsVideoFormat(int,int) -> d
    void vRetSetVideoFormatResult(int) -> b
    void vRetGetVideoFormatResult(int) -> c
    void ACK_vRetSetNpcSettingsVideoVolume(int,int) -> e
    void vRetSetVolumeResult(int) -> d
    void vRetGetVideoVolumeResult(int) -> e
    void ACK_vRetSetDevicePassword(int,int) -> f
    void vRetSetDevicePasswordResult(int) -> f
    void ACK_vRetSetNpcSettingsNetType(int,int) -> g
    void vRetSetNetTypeResult(int) -> g
    void vRetGetNetTypeResult(int) -> h
    void ACK_vRetSetWifi(int,int) -> h
    void ACK_vRetGetWifiList(int,int) -> i
    void vRetWifiResult(int,int,int,int[],int[],java.lang.String[]) -> a
    void ACK_vRetSetAlarmBindId(int,int) -> j
    void ACK_vRetGetAlarmBindId(int,int) -> k
    void vRetBindAlarmIdResult(int,int,java.lang.String[]) -> a
    void ACK_vRetSetAlarmEmail(int,int) -> l
    void ACK_vRetGetAlarmEmail(int,int) -> m
    void vRetAlarmEmailResult(int,java.lang.String) -> a
    void ACK_vRetSetNpcSettingsMotion(int,int) -> n
    void vRetGetMotionResult(int) -> i
    void vRetSetMotionResult(int) -> j
    void ACK_vRetSetNpcSettingsBuzzer(int,int) -> o
    void vRetGetBuzzerResult(int) -> k
    void vRetSetBuzzerResult(int) -> l
    void ACK_vRetSetNpcSettingsRecordType(int,int) -> p
    void vRetGetRecordTypeResult(int) -> m
    void vRetSetRecordTypeResult(int) -> n
    void ACK_vRetSetNpcSettingsRecordTime(int,int) -> q
    void vRetGetRecordTimeResult(int) -> o
    void vRetSetRecordTimeResult(int) -> p
    void ACK_vRetSetNpcSettingsRecordPlanTime(int,int) -> r
    void vRetGetRecordPlanTimeResult(java.lang.String) -> b
    void vRetSetRecordPlanTimeResult(int) -> q
    void ACK_vRetSetDefenceArea(int,int) -> s
    void ACK_vRetClearDefenceAreaState(int,int) -> t
    void vRetClearDefenceAreaState(int) -> r
    void ACK_vRetGetDefenceArea(int,int) -> u
    void vRetDefenceAreaResult(int,java.util.ArrayList,int,int) -> a
    void ACK_vRetSetRemoteDefence(java.lang.String,int,int) -> c
    void ACK_vRetSetRemoteRecord(int,int) -> v
    void vRetGetRemoteDefenceResult(java.lang.String,int) -> a
    void vRetGetRemoteRecordResult(int) -> s
    void vRetSetRemoteDefenceResult(int) -> t
    void vRetSetRemoteRecordResult(int) -> u
    void ACK_vRetSetInitPassword(int,int) -> w
    void vRetSetInitPasswordResult(int) -> v
    void ACK_vRetGetDeviceVersion(int,int) -> x
    void vRetGetDeviceVersion(int,java.lang.String,int,int,int) -> a
    void ACK_vRetCheckDeviceUpdate(int,int) -> y
    void vRetCheckDeviceUpdate(int,java.lang.String,java.lang.String) -> a
    void ACK_vRetDoDeviceUpdate(int,int) -> z
    void vRetDoDeviceUpdate(int,int) -> A
    void ACK_vRetCancelDeviceUpdate(int,int) -> B
    void vRetCancelDeviceUpdate(int) -> w
    void ACK_vRetGetRecordFileList(int,int) -> C
    void vRetGetRecordFiles(java.lang.String[]) -> a
    void vRetGetFriendStatus(int,java.lang.String[],int[],int[]) -> a
    void ACK_vRetMessage(int,int) -> D
    void vRetMessage(java.lang.String,java.lang.String) -> a
    void vRetSysMessage(java.lang.String) -> c
    void vRetCustomCmd(java.lang.String,java.lang.String) -> b
    void ACK_vRetCustomCmd(int,int) -> E
    void vRetDeviceNotSupport() -> a
    void ACK_vRetSetImageReverse(int,int) -> F
    void vRetSetImageReverse(int) -> x
    void vRetGetImageReverseResult(int) -> y
    void ACK_vRetSetInfraredSwitch(int,int) -> G
    void vRetGetInfraredSwitch(int) -> z
    void vRetSetInfraredSwitch(int) -> A
    void ACK_vRetSetWiredAlarmInput(int,int) -> H
    void ACK_vRetSetWiredAlarmOut(int,int) -> I
    void ACK_vRetSetAutomaticUpgrade(int,int) -> J
    void vRetGetWiredAlarmInput(int) -> B
    void vRetGetWiredAlarmOut(int) -> C
    void vRetGetAutomaticUpgrade(int) -> D
    void vRetSetWiredAlarmInput(int) -> E
    void vRetSetWiredAlarmOut(int) -> F
    void vRetSetAutomaticUpgrade(int) -> G
    void ACK_VRetSetVisitorDevicePassword(int,int) -> K
    void vRetSetVisitorDevicePassword(int) -> H
    void ACK_vRetSetTimeZone(int,int) -> L
    void vRetGetTimeZone(int) -> I
    void vRetSetTimeZone(int) -> J
    void ACK_vRetGetSDCard(int,int) -> M
    void ACK_vRetSdFormat(int,int) -> N
    void ACK_vRetGetSensorSwitchs(int,int) -> O
    void ACK_vRetSetSensorSwitchs(int,int) -> P
    void vRetGetAudioDeviceType(int) -> K
    void vRetGetPreRecord(int) -> L
    void vRetGetSensorSwitchs(int,java.util.ArrayList) -> a
    void vRetGetSdCard(int,int,int,int) -> a
    void VRetGetUsb(int,int,int,int) -> b
    void vRetSdFormat(int) -> M
    void vRetSetGPIO(int) -> N
    void vRetSetPreRecord(int) -> O
    void vRetSetSensorSwitchs(int) -> P
    void ACK_vRetGetAlarmRecord(int,int) -> Q
    void vRetGetAlarmRecord(int,int,java.util.ArrayList) -> a
com.homecoolink.activity.AccountInfoActivity -> com.homecoolink.activity.AccountInfoActivity:
    android.content.Context mContext -> a
    android.widget.ImageView back_btn -> b
    android.widget.RelativeLayout change_3c -> c
    android.widget.RelativeLayout change_email -> d
    android.widget.RelativeLayout change_phone -> e
    android.widget.RelativeLayout modify_login_pwd -> f
    android.widget.TextView three_number_text -> g
    android.widget.TextView email_text -> h
    android.widget.TextView phone_text -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void loadAccountInfo() -> c
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    int getActivityInfo() -> f
com.homecoolink.activity.AddContactActivity -> com.homecoolink.activity.AddContactActivity:
    android.widget.TextView mNext -> d
    android.widget.ImageView mBack -> e
    android.content.Context mContext -> a
    android.widget.EditText contactId -> b
    com.homecoolink.data.Contact mContact -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void onClick(android.view.View) -> onClick
    void next() -> c
    int getActivityInfo() -> f
com.homecoolink.activity.AddContactNextActivity -> com.homecoolink.activity.AddContactNextActivity:
    android.widget.TextView mSave -> v
    android.widget.ImageView mBack -> w
    android.content.Context mContext -> a
    android.widget.EditText contactName -> b
    android.widget.EditText contactPwd -> c
    android.widget.LinearLayout layout_device_pwd -> d
    android.widget.TextView contactId -> e
    com.homecoolink.widget.HeaderView header_img -> f
    com.homecoolink.widget.NormalDialog dialog -> g
    com.homecoolink.data.Contact mSaveContact -> h
    android.widget.RelativeLayout modify_header -> i
    android.widget.LinearLayout layout_create_pwd -> j
    android.widget.EditText createPwd1 -> k
    android.widget.EditText createPwd2 -> l
    android.graphics.Bitmap tempHead -> x
    boolean isSave -> m
    boolean isCreatePassword -> n
    java.lang.String input_name -> o
    java.lang.String input_pwd -> p
    java.lang.String input_create_pwd1 -> q
    java.lang.String input_create_pwd2 -> r
    boolean isRegFilter -> s
    java.lang.String ipFlag -> t
    boolean isfactory -> u
    android.content.BroadcastReceiver mReceiver -> y
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void regFilter() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void destroyTempHead() -> d
    void save() -> e
    void sendSuccessBroadcast() -> i
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
com.homecoolink.activity.AddContactNextActivity$1 -> com.homecoolink.activity.a:
    com.homecoolink.activity.AddContactNextActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.AddWaitActicity -> com.homecoolink.activity.AddWaitActicity:
    android.widget.ImageView ivBacke -> n
    android.content.Context mContext -> o
    android.os.Handler myhandler -> a
    boolean isReceive -> b
    java.lang.String ssid -> c
    java.lang.String pwd -> d
    java.lang.Thread mThread -> e
    boolean mDone -> f
    com.homecoolink.utils.UDPHelper mHelper -> g
    byte type -> h
    int mLocalIp -> i
    com.mediatek.elian.ElianNative elain -> j
    boolean isSendWifiStop -> p
    boolean isTimerCancel -> q
    boolean isNeedSendWifi -> r
    long TimeOut -> s
    android.net.wifi.WifiManager$MulticastLock lock -> k
    java.util.Timer mTimer -> t
    int time -> u
    android.os.Handler sendWifiHandler -> v
    java.lang.Runnable stopRunnable -> l
    java.lang.Runnable mrunnable -> m
    void onCreate(android.os.Bundle) -> onCreate
    void excuteTimer() -> c
    void cancleTimer() -> d
    void sendWifi() -> e
    void stopSendWifi() -> i
    void initUI() -> j
    void listen() -> b
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
    java.lang.String getTime() -> k
    int access$0(com.homecoolink.activity.AddWaitActicity) -> a
    void access$1(com.homecoolink.activity.AddWaitActicity,int) -> a
    void access$2(com.homecoolink.activity.AddWaitActicity) -> b
    java.lang.String access$3(com.homecoolink.activity.AddWaitActicity) -> c
    void access$4(com.homecoolink.activity.AddWaitActicity) -> d
    void access$5(com.homecoolink.activity.AddWaitActicity) -> e
    android.os.Handler access$6(com.homecoolink.activity.AddWaitActicity) -> f
    boolean access$7(com.homecoolink.activity.AddWaitActicity) -> g
    android.content.Context access$8(com.homecoolink.activity.AddWaitActicity) -> h
com.homecoolink.activity.AddWaitActicity$1 -> com.homecoolink.activity.b:
    com.homecoolink.activity.AddWaitActicity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.AddWaitActicity$2 -> com.homecoolink.activity.c:
    com.homecoolink.activity.AddWaitActicity this$0 -> a
    void run() -> run
com.homecoolink.activity.AddWaitActicity$3 -> com.homecoolink.activity.d:
    com.homecoolink.activity.AddWaitActicity this$0 -> a
    void run() -> run
com.homecoolink.activity.AddWaitActicity$4 -> com.homecoolink.activity.e:
    com.homecoolink.activity.AddWaitActicity this$0 -> a
    void run() -> run
com.homecoolink.activity.AddWaitActicity$5 -> com.homecoolink.activity.f:
    com.homecoolink.activity.AddWaitActicity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.AlarmActivity -> com.homecoolink.activity.AlarmActivity:
    android.content.Context mContext -> a
    android.widget.ImageView monitor_btn -> b
    android.widget.ImageView ignore_btn -> c
    android.widget.ImageView alarm_defence_img -> d
    android.widget.TextView alarm_type_text -> e
    android.widget.ImageView alarm_img -> f
    int alarm_id -> g
    int alarm_type -> h
    int group -> i
    int item -> j
    android.widget.RelativeLayout alarm_defence_btn -> k
    boolean isSupport -> l
    android.widget.ProgressBar progress_defence -> m
    android.widget.TextView area_text -> n
    android.widget.TextView chanel_text -> o
    boolean isAlarm -> p
    boolean hasContact -> q
    com.homecoolink.data.Contact contact -> r
    android.widget.TextView alarmTime -> s
    com.homecoolink.widget.XRTextView alarm_id_text -> t
    boolean isRegFilter -> u
    android.content.BroadcastReceiver mReceiver -> w
    android.os.Handler handler -> v
    void onCreate(android.os.Bundle) -> onCreate
    void regFilter() -> a
    com.homecoolink.data.AlarmRecord insertAlarmRecord() -> b
    void loadMusicAndVibrate() -> c
    void updateImage(java.lang.String,boolean,android.widget.ImageView) -> a
    void initComponent() -> d
    void getdefensestate() -> g
    void onClick(android.view.View) -> onClick
    void ignore() -> e
    void exit() -> f
    void onStop() -> onStop
    void access$0(com.homecoolink.activity.AlarmActivity) -> a
com.homecoolink.activity.AlarmActivity$1 -> com.homecoolink.activity.g:
    com.homecoolink.activity.AlarmActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.AlarmActivity$2 -> com.homecoolink.activity.h:
    com.homecoolink.activity.AlarmActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.AlarmActivity$3 -> com.homecoolink.activity.i:
    com.homecoolink.activity.AlarmActivity this$0 -> a
    void run() -> run
com.homecoolink.activity.AlarmActivity$5 -> com.homecoolink.activity.j:
    com.homecoolink.activity.AlarmActivity this$0 -> a
    void run() -> run
com.homecoolink.activity.AlarmPushAccountActivity -> com.homecoolink.activity.AlarmPushAccountActivity:
    android.content.Context mContext -> k
    java.lang.String contactPassword -> a
    java.lang.String contactId -> b
    boolean isRegFilter -> c
    com.lib.addBar.AddBar addbar -> d
    android.widget.ProgressBar progressBar_alarmId -> e
    android.widget.RelativeLayout add_alarm_item -> f
    java.lang.String[] last_bind_data -> g
    com.homecoolink.widget.NormalDialog dialog_loading -> h
    android.widget.ImageView back_btn -> i
    android.content.BroadcastReceiver br -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void regFilter() -> c
    void onClick(android.view.View) -> onClick
    void showAlarmIdState() -> d
    int getActivityInfo() -> f
    void onDestroy() -> onDestroy
    android.content.Context access$0(com.homecoolink.activity.AlarmPushAccountActivity) -> a
com.homecoolink.activity.AlarmPushAccountActivity$1 -> com.homecoolink.activity.k:
    com.homecoolink.activity.AlarmPushAccountActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.AlarmPushAccountActivity$2 -> com.homecoolink.activity.l:
    com.homecoolink.activity.AlarmPushAccountActivity this$0 -> a
    void onChange(int) -> a
com.homecoolink.activity.AlarmPushAccountActivity$3 -> com.homecoolink.activity.m:
    com.homecoolink.activity.AlarmPushAccountActivity this$0 -> a
    void onClick(android.view.View,int) -> a
    com.homecoolink.activity.AlarmPushAccountActivity access$0(com.homecoolink.activity.AlarmPushAccountActivity$3) -> a
com.homecoolink.activity.AlarmPushAccountActivity$3$1 -> com.homecoolink.activity.n:
    com.homecoolink.activity.AlarmPushAccountActivity$3 this$1 -> a
    int val$position -> b
    void onClick() -> a
com.homecoolink.activity.AlarmRecordFromDeviceActivity -> com.homecoolink.activity.AlarmRecordFromDeviceActivity:
    com.homecoolink.data.Contact mcontact -> a
    boolean isregFiter -> b
    android.content.Context mContext -> s
    android.widget.ImageView back -> c
    android.widget.ImageView setread_btn -> d
    android.widget.ImageView setreaddisable -> e
    com.lib.pullToRefresh.PullToRefreshListView mpull_refresh_list -> f
    android.widget.ListView mlistview -> g
    com.homecoolink.adapter.AlarmRecordAdapter3 adapter -> h
    java.util.ArrayList list -> i
    java.util.ArrayList showlist -> j
    java.lang.Boolean isemptyviewseted -> k
    android.widget.TextView titleTextView -> l
    java.util.ArrayList tempremotelist -> m
    java.lang.Boolean isingeting -> n
    int page -> o
    int pagesize -> p
    com.homecoolink.widget.NormalDialog dig -> q
    android.widget.RelativeLayout layout_loading -> r
    boolean isRegFilter -> t
    void CheckNewMess() -> b
    void showloading() -> e
    void stoploading() -> i
    void GetNext() -> j
    void onCreate(android.os.Bundle) -> onCreate
    java.util.ArrayList getData() -> k
    void initComponent() -> c
    void NotifyChanged() -> d
    void INITadapter() -> l
    int getActivityInfo() -> f
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    java.util.ArrayList access$0(com.homecoolink.activity.AlarmRecordFromDeviceActivity) -> a
    void access$1(com.homecoolink.activity.AlarmRecordFromDeviceActivity) -> b
    void access$2(com.homecoolink.activity.AlarmRecordFromDeviceActivity) -> c
    void access$3(com.homecoolink.activity.AlarmRecordFromDeviceActivity) -> d
    void access$4(com.homecoolink.activity.AlarmRecordFromDeviceActivity) -> e
    android.content.Context access$5(com.homecoolink.activity.AlarmRecordFromDeviceActivity) -> f
com.homecoolink.activity.AlarmRecordFromDeviceActivity$1 -> com.homecoolink.activity.o:
    com.homecoolink.activity.AlarmRecordFromDeviceActivity this$0 -> a
    void onLastItemVisible() -> a
com.homecoolink.activity.AlarmRecordFromDeviceActivity$2 -> com.homecoolink.activity.p:
    com.homecoolink.activity.AlarmRecordFromDeviceActivity this$0 -> a
    void onRefresh(com.lib.pullToRefresh.PullToRefreshBase) -> a
com.homecoolink.activity.AlarmRecordFromDeviceActivity$3 -> com.homecoolink.activity.q:
    com.homecoolink.activity.AlarmRecordFromDeviceActivity this$0 -> a
    void onClick() -> a
com.homecoolink.activity.AlarmRecordFromDeviceActivity$GetNextTask -> com.homecoolink.activity.r:
    com.homecoolink.activity.AlarmRecordFromDeviceActivity this$0 -> a
    java.lang.String[] doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.homecoolink.activity.AlarmRecordFromDeviceActivity$GetRemoteDataTask -> com.homecoolink.activity.s:
    com.homecoolink.activity.AlarmRecordFromDeviceActivity this$0 -> a
    java.lang.String[] doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.homecoolink.activity.AlarmReordDetailActivity -> com.homecoolink.activity.AlarmReordDetailActivity:
    com.homecoolink.data.Contact contact -> a
    android.content.Context mContext -> b
    android.widget.Button monitor_btn -> c
    android.widget.Button nowvideo_btn -> d
    android.widget.TextView alarm_sj_text -> e
    android.widget.TextView alarm_sb_text -> f
    android.widget.TextView alarm_sbid_text -> g
    android.widget.TextView alarm_content_text -> h
    android.widget.TextView alarmTime_text -> i
    android.widget.ImageView alarm_img -> j
    int alarm_type -> k
    int group -> l
    int item -> m
    java.lang.String alarm_sbid -> n
    java.lang.String alarm_time -> o
    android.widget.ImageView back -> p
    android.widget.TextView alarmrecorddetail_sbdefencename -> q
    android.widget.LinearLayout isSupport -> r
    boolean isRegFilter -> t
    android.os.Handler handler -> s
    void onCreate(android.os.Bundle) -> onCreate
    void updateImage(java.lang.String,android.widget.ImageView) -> a
    void initComponent(boolean) -> a
    void onClick(android.view.View) -> onClick
    void onStop() -> onStop
com.homecoolink.activity.AlarmReordDetailActivity$1 -> com.homecoolink.activity.t:
    com.homecoolink.activity.AlarmReordDetailActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.AlarmReordVideo -> com.homecoolink.activity.AlarmReordVideo:
    android.widget.TextView dateSpinner -> a
    com.homecoolink.fragment.RecordListFragment rlFrag -> b
    com.homecoolink.fragment.LoadingFragment loadFrag -> c
    com.homecoolink.fragment.FaultFragment faultFrag -> d
    com.homecoolink.data.Contact contact -> e
    boolean receiverIsReg -> f
    java.lang.String daten -> g
    java.lang.String dvid -> h
    android.view.LayoutInflater inf -> m
    android.widget.PopupWindow datepopMenu -> i
    com.homecoolink.adapter.VideoDateAdapter da -> j
    android.widget.ImageView back -> k
    java.lang.String[] vfiles -> n
    android.content.BroadcastReceiver mReceiver -> l
    void onCreate(android.os.Bundle) -> onCreate
    void disableDate() -> d
    void bindDate() -> e
    void bindDateVal() -> i
    void SetSelectedDate(java.lang.String) -> a
    java.lang.String[] GetDateFromRecords(java.lang.String[]) -> a
    void initComponent() -> b
    java.util.List GetRecordsByDate(java.lang.String) -> b
    void showPopMenu(android.widget.PopupWindow,android.view.View) -> a
    void regFilter() -> c
    void replaceFrag(android.support.v4.app.Fragment,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void onStop() -> onStop
    void onStart() -> onStart
    int getActivityInfo() -> f
    void access$0(com.homecoolink.activity.AlarmReordVideo,java.lang.String[]) -> a
    void access$1(com.homecoolink.activity.AlarmReordVideo) -> a
com.homecoolink.activity.AlarmReordVideo$1 -> com.homecoolink.activity.u:
    com.homecoolink.activity.AlarmReordVideo this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.AlarmSetActivity -> com.homecoolink.activity.AlarmSetActivity:
    android.content.Context mContext -> a
    com.homecoolink.wheel.widget.WheelView date_seconds -> b
    android.widget.ImageView back_btn -> c
    android.widget.RelativeLayout setting_time -> d
    android.widget.TextView time_text -> e
    android.widget.RelativeLayout add_alarm_item -> f
    android.widget.RelativeLayout alarm_record -> g
    com.lib.addBar.AddBar addBar -> h
    java.util.List mList -> i
    boolean isRegFilter -> l
    com.homecoolink.widget.NormalDialog dialog -> j
    android.widget.Button save_btn -> k
    android.content.BroadcastReceiver mReceiver -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void regFilter() -> c
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
com.homecoolink.activity.AlarmSetActivity$1 -> com.homecoolink.activity.v:
    com.homecoolink.activity.AlarmSetActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.AlarmSetActivity$2 -> com.homecoolink.activity.w:
    com.homecoolink.activity.AlarmSetActivity this$0 -> a
    void onChange(int) -> a
com.homecoolink.activity.AlarmSetActivity$3 -> com.homecoolink.activity.x:
    com.homecoolink.activity.AlarmSetActivity this$0 -> a
    void onClick(android.view.View,int) -> a
    com.homecoolink.activity.AlarmSetActivity access$0(com.homecoolink.activity.AlarmSetActivity$3) -> a
com.homecoolink.activity.AlarmSetActivity$3$1 -> com.homecoolink.activity.y:
    com.homecoolink.activity.AlarmSetActivity$3 this$1 -> a
    com.homecoolink.data.AlarmMask val$alarmMask -> b
    int val$position -> c
    void onClick() -> a
com.homecoolink.activity.BaseActivity -> com.homecoolink.activity.BaseActivity:
    void onGoBack() -> g
    void onGoFront() -> h
com.homecoolink.activity.CreateQRcodeActivity -> com.homecoolink.activity.CreateQRcodeActivity:
    android.content.Context mContext -> l
    android.widget.ImageView img_qrcode -> a
    android.widget.ImageView img_back -> b
    java.lang.String ssidname -> c
    java.lang.String wifipwd -> d
    android.widget.Button bt_hear -> e
    com.homecoolink.utils.UDPHelper mHelper -> f
    com.homecoolink.widget.NormalDialog waitdialog -> g
    boolean isReceive -> h
    android.os.Handler myhandler -> m
    android.widget.Button bt_help -> i
    android.net.wifi.WifiManager$MulticastLock lock -> j
    java.lang.Runnable mrunnable -> k
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void qrcode() -> c
    void maxVoice() -> d
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
    android.content.Context access$0(com.homecoolink.activity.CreateQRcodeActivity) -> a
com.homecoolink.activity.CreateQRcodeActivity$1 -> com.homecoolink.activity.z:
    com.homecoolink.activity.CreateQRcodeActivity this$0 -> a
    void run() -> run
com.homecoolink.activity.CreateQRcodeActivity$2 -> com.homecoolink.activity.aa:
    com.homecoolink.activity.CreateQRcodeActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.DeviceUpdateActivity -> com.homecoolink.activity.DeviceUpdateActivity:
    android.content.Context mContext -> a
    android.widget.TextView content_text -> b
    android.widget.TextView button1_text -> c
    android.widget.TextView button2_text -> d
    android.widget.RelativeLayout layout_button1 -> e
    android.widget.RelativeLayout layout_button2 -> f
    android.widget.RelativeLayout yao -> g
    android.widget.LinearLayout layout_main -> h
    com.homecoolink.data.Contact mContact -> i
    android.widget.ProgressBar content_progress -> j
    boolean isRegFilter -> k
    boolean isDownloading -> l
    android.content.BroadcastReceiver mReceiver -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initCompoment() -> b
    void regFilter() -> c
    void finish() -> finish
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
    void access$0(com.homecoolink.activity.DeviceUpdateActivity) -> a
com.homecoolink.activity.DeviceUpdateActivity$1 -> com.homecoolink.activity.ab:
    com.homecoolink.activity.DeviceUpdateActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.homecoolink.activity.DeviceUpdateActivity access$0(com.homecoolink.activity.DeviceUpdateActivity$1) -> a
com.homecoolink.activity.DeviceUpdateActivity$1$1 -> com.homecoolink.activity.ac:
    com.homecoolink.activity.DeviceUpdateActivity$1 this$1 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.activity.DeviceUpdateActivity$1$2 -> com.homecoolink.activity.ad:
    com.homecoolink.activity.DeviceUpdateActivity$1 this$1 -> a
    void onClick(android.view.View) -> onClick
    com.homecoolink.activity.DeviceUpdateActivity$1 access$0(com.homecoolink.activity.DeviceUpdateActivity$1$2) -> a
com.homecoolink.activity.DeviceUpdateActivity$1$2$1 -> com.homecoolink.activity.ae:
    com.homecoolink.activity.DeviceUpdateActivity$1$2 this$2 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.activity.DeviceUpdateActivity$1$3 -> com.homecoolink.activity.af:
    com.homecoolink.activity.DeviceUpdateActivity$1 this$1 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.activity.DeviceUpdateActivity$1$4 -> com.homecoolink.activity.ag:
    com.homecoolink.activity.DeviceUpdateActivity$1 this$1 -> a
    void onClick(android.view.View) -> onClick
    com.homecoolink.activity.DeviceUpdateActivity$1 access$0(com.homecoolink.activity.DeviceUpdateActivity$1$4) -> a
com.homecoolink.activity.DeviceUpdateActivity$1$4$1 -> com.homecoolink.activity.ah:
    com.homecoolink.activity.DeviceUpdateActivity$1$4 this$2 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.activity.DeviceUpdateActivity$2 -> com.homecoolink.activity.ai:
    com.homecoolink.activity.DeviceUpdateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.activity.DeviceUpdateActivity$3 -> com.homecoolink.activity.aj:
    com.homecoolink.activity.DeviceUpdateActivity this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.homecoolink.activity.ForgetPassword -> com.homecoolink.activity.ForgetPassword:
    android.widget.ImageView back -> a
    android.widget.ImageView towskin -> b
    android.widget.ImageView oneskin -> c
    android.widget.ImageView msgRb -> d
    android.widget.ImageView emRb -> e
    android.widget.RelativeLayout clear1 -> f
    android.widget.RelativeLayout clear2 -> g
    android.widget.RelativeLayout clear3 -> h
    android.widget.LinearLayout msgll -> i
    android.widget.LinearLayout emll -> j
    android.widget.EditText phone_et1 -> k
    android.widget.EditText phoneverific_et2 -> l
    android.widget.EditText email_et3 -> m
    android.widget.Button phoneverific_btn -> n
    android.widget.Button okbtn -> o
    boolean isDialogCanel -> p
    android.content.Context context -> r
    com.homecoolink.widget.NormalDialog dialog -> q
    java.lang.String vkey -> s
    java.lang.String ID -> t
    android.os.Handler mHandler -> u
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void onClick(android.view.View) -> onClick
    void changeButton() -> a
    void access$0(com.homecoolink.activity.ForgetPassword,java.lang.String) -> a
    void access$1(com.homecoolink.activity.ForgetPassword,java.lang.String) -> b
    android.content.Context access$2(com.homecoolink.activity.ForgetPassword) -> a
    java.lang.String access$3(com.homecoolink.activity.ForgetPassword) -> b
    java.lang.String access$4(com.homecoolink.activity.ForgetPassword) -> c
    android.os.Handler access$5(com.homecoolink.activity.ForgetPassword) -> d
com.homecoolink.activity.ForgetPassword$1 -> com.homecoolink.activity.ak:
    com.homecoolink.activity.ForgetPassword this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.ForgetPassword$2 -> com.homecoolink.activity.al:
    com.homecoolink.activity.ForgetPassword this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.ForgetPassword$3 -> com.homecoolink.activity.am:
    com.homecoolink.activity.ForgetPassword this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.ForgetPassword$4 -> com.homecoolink.activity.an:
    com.homecoolink.activity.ForgetPassword this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.ForgetPassword$5 -> com.homecoolink.activity.ao:
    com.homecoolink.activity.ForgetPassword this$0 -> a
    void run() -> run
com.homecoolink.activity.ForgetPassword$CheckEmailVrifyCodeTask -> com.homecoolink.activity.ap:
    java.lang.String email -> a
    com.homecoolink.activity.ForgetPassword this$0 -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ForgetPassword$CheckPhoneVrifyCodeTask -> com.homecoolink.activity.aq:
    java.lang.String phone -> a
    java.lang.String phonecode -> b
    com.homecoolink.activity.ForgetPassword this$0 -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ForgetPassword$GetPhoneVrifyCodeTask -> com.homecoolink.activity.ar:
    java.lang.String phone -> a
    com.homecoolink.activity.ForgetPassword this$0 -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ForgetPasswordEdit -> com.homecoolink.activity.ForgetPasswordEdit:
    android.widget.ImageView back -> a
    android.widget.RelativeLayout clear1 -> b
    android.widget.RelativeLayout clear2 -> c
    android.widget.EditText password -> d
    android.widget.EditText cpassword -> e
    android.widget.Button okbtn -> f
    boolean isDialogCanel -> g
    android.content.Context context -> i
    com.homecoolink.widget.NormalDialog dialog -> h
    java.lang.String vkey -> j
    java.lang.String ID -> k
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> a
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(com.homecoolink.activity.ForgetPasswordEdit) -> a
    java.lang.String access$1(com.homecoolink.activity.ForgetPasswordEdit) -> b
    void access$2(com.homecoolink.activity.ForgetPasswordEdit,java.lang.String) -> a
    void access$3(com.homecoolink.activity.ForgetPasswordEdit,java.lang.String) -> b
    android.content.Context access$4(com.homecoolink.activity.ForgetPasswordEdit) -> c
com.homecoolink.activity.ForgetPasswordEdit$1 -> com.homecoolink.activity.as:
    com.homecoolink.activity.ForgetPasswordEdit this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.ForgetPasswordEdit$UpdatePwd -> com.homecoolink.activity.at:
    java.lang.String pwd -> a
    com.homecoolink.activity.ForgetPasswordEdit this$0 -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ForwardActivity -> com.homecoolink.activity.ForwardActivity:
    void onCreate(android.os.Bundle) -> onCreate
    int getActivityInfo() -> f
com.homecoolink.activity.ForwardDownActivity -> com.homecoolink.activity.ForwardDownActivity:
    void onCreate(android.os.Bundle) -> onCreate
    int getActivityInfo() -> f
com.homecoolink.activity.LocalDeviceListActivity -> com.homecoolink.activity.LocalDeviceListActivity:
    android.widget.ImageView mBack -> d
    com.lib.pullToRefresh.PullToRefreshListView mpull_refresh_list -> a
    android.widget.ListView mlistview -> b
    com.homecoolink.adapter.LocalDeviceListAdapter mAdapter -> e
    android.content.Context mContext -> f
    boolean isRegFilter -> c
    android.content.BroadcastReceiver mReceiver -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void regFilter() -> c
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
    com.homecoolink.adapter.LocalDeviceListAdapter access$0(com.homecoolink.activity.LocalDeviceListActivity) -> a
    android.content.Context access$1(com.homecoolink.activity.LocalDeviceListActivity) -> b
com.homecoolink.activity.LocalDeviceListActivity$1 -> com.homecoolink.activity.au:
    com.homecoolink.activity.LocalDeviceListActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.LocalDeviceListActivity$2 -> com.homecoolink.activity.av:
    com.homecoolink.activity.LocalDeviceListActivity this$0 -> a
    void onRefresh(com.lib.pullToRefresh.PullToRefreshBase) -> a
com.homecoolink.activity.LoginActivity -> com.homecoolink.activity.LoginActivity:
    android.content.Context mContext -> a
    boolean isRegFilter -> m
    android.widget.Button mLogin -> b
    android.widget.TextView mregister -> c
    android.widget.EditText mAccountPwd -> n
    android.widget.EditText mAccountName -> o
    java.lang.String mInputName -> p
    java.lang.String mInputPwd -> q
    android.widget.LinearLayout remember_pass -> d
    android.widget.RelativeLayout dialog_remember -> e
    android.widget.ImageView remember_pwd_img -> f
    android.widget.ImageView login_qq -> g
    boolean isDialogCanel -> r
    com.homecoolink.widget.NormalDialog dialog -> h
    int current_type -> i
    android.widget.TextView forget_pwd -> j
    android.widget.RelativeLayout name_clearrl -> k
    android.widget.RelativeLayout pwd_clearrl -> l
    android.content.BroadcastReceiver mReceiver -> s
    android.os.Handler mHandler -> t
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void initRememberPass() -> c
    void regFilter() -> d
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void login() -> e
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
    android.widget.EditText access$0(com.homecoolink.activity.LoginActivity) -> a
    android.widget.EditText access$1(com.homecoolink.activity.LoginActivity) -> b
    void access$2(com.homecoolink.activity.LoginActivity) -> c
    boolean access$3(com.homecoolink.activity.LoginActivity) -> d
    java.lang.String access$4(com.homecoolink.activity.LoginActivity) -> e
    java.lang.String access$5(com.homecoolink.activity.LoginActivity) -> f
    android.os.Handler access$6(com.homecoolink.activity.LoginActivity) -> g
    void access$7(com.homecoolink.activity.LoginActivity,boolean) -> a
com.homecoolink.activity.LoginActivity$1 -> com.homecoolink.activity.aw:
    com.homecoolink.activity.LoginActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.LoginActivity$2 -> com.homecoolink.activity.ax:
    com.homecoolink.activity.LoginActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.LoginActivity$3 -> com.homecoolink.activity.ay:
    com.homecoolink.activity.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.homecoolink.activity.LoginActivity$4 -> com.homecoolink.activity.az:
    com.homecoolink.activity.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.homecoolink.activity.LoginActivity$5 -> com.homecoolink.activity.ba:
    com.homecoolink.activity.LoginActivity this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.homecoolink.activity.LoginActivity$6 -> com.homecoolink.activity.bb:
    com.homecoolink.activity.LoginActivity this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.homecoolink.activity.LoginActivity$7 -> com.homecoolink.activity.bc:
    com.homecoolink.activity.LoginActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.LoginActivity$LoginTask -> com.homecoolink.activity.bd:
    java.lang.String username -> a
    java.lang.String password -> b
    com.homecoolink.activity.LoginActivity this$0 -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.LogoActivity -> com.homecoolink.activity.LogoActivity:
    android.os.Handler handler -> a
    void onCreate(android.os.Bundle) -> onCreate
    int getActivityInfo() -> f
com.homecoolink.activity.LogoActivity$1 -> com.homecoolink.activity.be:
    com.homecoolink.activity.LogoActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.MainActivity -> com.homecoolink.activity.MainActivity:
    android.content.Context mContext -> a
    android.widget.ImageView contact_img -> e
    android.widget.ImageView alarmrecord_img -> f
    android.widget.ImageView settings_img -> g
    android.widget.ImageView discover_img -> h
    android.widget.ImageView icon_new_img -> i
    android.widget.RelativeLayout contact -> j
    android.widget.RelativeLayout alarmrecord -> k
    android.widget.RelativeLayout settings -> l
    android.widget.RelativeLayout discover -> m
    boolean isRegFilter -> b
    int currFrag -> n
    android.app.AlertDialog dialog_update -> o
    java.lang.String[] fragTags -> p
    com.homecoolink.fragment.SettingFrag settingFrag -> q
    com.homecoolink.fragment.AlarmRecordFrag AlarmRecordFrag -> r
    com.homecoolink.fragment.ContactFrag contactFrag -> s
    com.homecoolink.fragment.ImageFrag imageFrag -> t
    com.homecoolink.utils.CrashHandler ch -> c
    android.os.Handler handler -> d
    android.content.BroadcastReceiver mReceiver -> u
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.RelativeLayout getMenu(int) -> a
    void CheckNewMess() -> b
    void initComponent() -> c
    void regFilter() -> d
    void connect() -> i
    boolean verifyLogin() -> j
    void onClick(android.view.View) -> onClick
    void changeIconShow() -> e
    void replaceFragment(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    int getActivityInfo() -> f
    void access$0(com.homecoolink.activity.MainActivity,boolean) -> a
    android.app.AlertDialog access$1(com.homecoolink.activity.MainActivity) -> a
    void access$2(com.homecoolink.activity.MainActivity,android.app.AlertDialog) -> a
    void access$3(com.homecoolink.activity.MainActivity,int) -> a
    com.homecoolink.fragment.ContactFrag access$4(com.homecoolink.activity.MainActivity) -> b
    void access$5(com.homecoolink.activity.MainActivity,com.homecoolink.fragment.ContactFrag) -> a
    java.lang.String[] access$6(com.homecoolink.activity.MainActivity) -> c
com.homecoolink.activity.MainActivity$1 -> com.homecoolink.activity.bf:
    long last_time -> a
    com.homecoolink.activity.MainActivity this$0 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.MainActivity$2 -> com.homecoolink.activity.bg:
    com.homecoolink.activity.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.homecoolink.activity.MainActivity access$0(com.homecoolink.activity.MainActivity$2) -> a
com.homecoolink.activity.MainActivity$2$1 -> com.homecoolink.activity.bh:
    com.homecoolink.activity.MainActivity$2 this$1 -> a
    void run() -> run
com.homecoolink.activity.MainActivity$2$2 -> com.homecoolink.activity.bi:
    com.homecoolink.activity.MainActivity$2 this$1 -> a
    void onClick() -> a
com.homecoolink.activity.MainActivity$2$3 -> com.homecoolink.activity.bj:
    com.homecoolink.activity.MainActivity$2 this$1 -> a
    void onClick(android.view.View) -> onClick
    com.homecoolink.activity.MainActivity$2 access$0(com.homecoolink.activity.MainActivity$2$3) -> a
com.homecoolink.activity.MainActivity$2$3$1 -> com.homecoolink.activity.bk:
    com.homecoolink.activity.MainActivity$2$3 this$2 -> a
    void run() -> run
com.homecoolink.activity.MainActivity$2$4 -> com.homecoolink.activity.bl:
    com.homecoolink.activity.MainActivity$2 this$1 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.activity.MainActivity$ExitTask -> com.homecoolink.activity.bm:
    com.homecoolink.entity.Account account -> a
    com.homecoolink.activity.MainActivity this$0 -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.MainActivity$GetAccountInfoTask -> com.homecoolink.activity.bn:
    com.homecoolink.activity.MainActivity this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.MainControlActivity -> com.homecoolink.activity.MainControlActivity:
    android.widget.ImageView back -> s
    android.widget.TextView contactName -> t
    com.homecoolink.widget.NormalDialog dialog -> u
    boolean isCancelCheck -> a
    boolean isCancelDoUpdate -> b
    int current_frag -> c
    java.lang.String[] fragTags -> v
    android.content.Context mContext -> d
    boolean isRegFilter -> e
    com.homecoolink.data.Contact contact -> w
    int device_type -> x
    com.homecoolink.fragment.MainControlFrag mainFrag -> f
    com.homecoolink.fragment.TimeControlFrag timeFrag -> g
    com.homecoolink.fragment.AlarmControlFrag alarmFrag -> h
    com.homecoolink.fragment.VideoControlFrag videoFrag -> i
    com.homecoolink.fragment.RecordControlFrag recordFrag -> j
    com.homecoolink.fragment.SecurityControlFrag securityFrag -> k
    com.homecoolink.fragment.NetControlFrag netFrag -> l
    com.homecoolink.fragment.DefenceAreaControlFrag defenceAreaFrag -> m
    com.homecoolink.widget.HeaderView header_img -> n
    android.widget.Button viewDeviceVersionBtn -> o
    android.widget.TextView tv_setting -> p
    android.widget.TextView tv_divnum -> q
    android.widget.ImageView account_img -> r
    android.content.BroadcastReceiver mReceiver -> y
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void regFilter() -> c
    void onClick(android.view.View) -> onClick
    void back() -> d
    boolean isReplace(int,boolean) -> a
    void replaceFragment(int,boolean,boolean) -> a
    android.support.v4.app.Fragment newFragInstance(int) -> a
    void onDestroy() -> onDestroy
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    int getActivityInfo() -> f
    void onResume() -> onResume
    void access$0(com.homecoolink.activity.MainControlActivity,com.homecoolink.data.Contact) -> a
    android.widget.TextView access$1(com.homecoolink.activity.MainControlActivity) -> a
    com.homecoolink.data.Contact access$2(com.homecoolink.activity.MainControlActivity) -> b
    com.homecoolink.widget.NormalDialog access$3(com.homecoolink.activity.MainControlActivity) -> c
    void access$4(com.homecoolink.activity.MainControlActivity,com.homecoolink.widget.NormalDialog) -> a
com.homecoolink.activity.MainControlActivity$1 -> com.homecoolink.activity.bo:
    com.homecoolink.activity.MainControlActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.MainControlActivity$2 -> com.homecoolink.activity.bp:
    com.homecoolink.activity.MainControlActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.ModifyAccountEmailActivity -> com.homecoolink.activity.ModifyAccountEmailActivity:
    android.content.Context mContext -> a
    android.widget.ImageView mBack -> b
    android.widget.EditText mEmail -> c
    android.widget.Button mNext -> d
    com.homecoolink.widget.NormalDialog dialog -> e
    android.widget.RelativeLayout dialog_input_mask -> f
    com.homecoolink.widget.MyInputDialog dialog_input -> g
    boolean isRegFilter -> h
    java.lang.String old_email -> i
    android.content.BroadcastReceiver mReceiver -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void regFilter() -> c
    void onClick(android.view.View) -> onClick
    void showInputPwd(java.lang.String) -> a
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
com.homecoolink.activity.ModifyAccountEmailActivity$1 -> com.homecoolink.activity.bq:
    com.homecoolink.activity.ModifyAccountEmailActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.ModifyAccountEmailActivity$2 -> com.homecoolink.activity.br:
    com.homecoolink.activity.ModifyAccountEmailActivity this$0 -> a
    java.lang.String val$email -> b
    void onClick() -> a
com.homecoolink.activity.ModifyAccountEmailActivity$SetAccountInfoTask -> com.homecoolink.activity.bs:
    java.lang.String password -> b
    java.lang.String email -> c
    com.homecoolink.activity.ModifyAccountEmailActivity this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ModifyAccountPhoneActivity -> com.homecoolink.activity.ModifyAccountPhoneActivity:
    android.widget.Button mNext -> g
    android.widget.RelativeLayout choose_country -> h
    android.widget.EditText phoneNum -> i
    android.widget.ImageView mBack -> j
    android.widget.TextView dfault_name -> k
    android.widget.TextView dfault_count -> l
    boolean myreceiverIsReg -> a
    boolean isDialogCanel -> b
    com.homecoolink.widget.NormalDialog dialog -> c
    com.homecoolink.widget.MyInputDialog dialog_input -> d
    android.content.Context mContext -> m
    android.widget.RelativeLayout dialog_input_mask -> e
    android.content.BroadcastReceiver mReceiver -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void regFilter() -> c
    void onClick(android.view.View) -> onClick
    void getPhoneCode() -> d
    void onDestroy() -> onDestroy
    void showInputPwd(java.lang.String,java.lang.String) -> a
    void onBackPressed() -> onBackPressed
    int getActivityInfo() -> f
    android.widget.TextView access$0(com.homecoolink.activity.ModifyAccountPhoneActivity) -> a
    android.widget.TextView access$1(com.homecoolink.activity.ModifyAccountPhoneActivity) -> b
    android.content.Context access$2(com.homecoolink.activity.ModifyAccountPhoneActivity) -> c
com.homecoolink.activity.ModifyAccountPhoneActivity$1 -> com.homecoolink.activity.bt:
    com.homecoolink.activity.ModifyAccountPhoneActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.ModifyAccountPhoneActivity$2 -> com.homecoolink.activity.bu:
    com.homecoolink.activity.ModifyAccountPhoneActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.ModifyAccountPhoneActivity$3 -> com.homecoolink.activity.bv:
    com.homecoolink.activity.ModifyAccountPhoneActivity this$0 -> a
    java.lang.String val$phone -> b
    java.lang.String val$countryCode -> c
    void onClick() -> a
com.homecoolink.activity.ModifyAccountPhoneActivity$GetPhoneCodeTask -> com.homecoolink.activity.bw:
    java.lang.String CountryCode -> a
    java.lang.String PhoneNO -> b
    com.homecoolink.activity.ModifyAccountPhoneActivity this$0 -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ModifyAccountPhoneActivity$SetAccountInfoTask -> com.homecoolink.activity.bx:
    java.lang.String password -> b
    java.lang.String phone -> c
    java.lang.String countryCode -> d
    com.homecoolink.activity.ModifyAccountPhoneActivity this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ModifyAccountPhoneActivity2 -> com.homecoolink.activity.ModifyAccountPhoneActivity2:
    java.lang.String countryCode -> e
    java.lang.String phone -> f
    android.widget.TextView phone_view -> g
    android.widget.ImageView mBack -> h
    android.widget.EditText verify_code -> i
    android.widget.Button resend -> j
    android.widget.Button mNext -> k
    boolean isDialogCanel -> a
    com.homecoolink.widget.NormalDialog dialog -> b
    com.homecoolink.widget.MyInputDialog dialog_input -> c
    android.content.Context mContext -> l
    android.widget.RelativeLayout dialog_input_mask -> d
    android.os.Handler mHandler -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void onClick(android.view.View) -> onClick
    void resendCode() -> c
    void checkCode() -> d
    void changeButton() -> e
    void showInputPwd(java.lang.String,java.lang.String,java.lang.String) -> a
    void onBackPressed() -> onBackPressed
    int getActivityInfo() -> f
    android.widget.Button access$0(com.homecoolink.activity.ModifyAccountPhoneActivity2) -> a
    android.content.Context access$1(com.homecoolink.activity.ModifyAccountPhoneActivity2) -> b
    android.os.Handler access$2(com.homecoolink.activity.ModifyAccountPhoneActivity2) -> c
com.homecoolink.activity.ModifyAccountPhoneActivity2$1 -> com.homecoolink.activity.by:
    com.homecoolink.activity.ModifyAccountPhoneActivity2 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.ModifyAccountPhoneActivity2$2 -> com.homecoolink.activity.bz:
    com.homecoolink.activity.ModifyAccountPhoneActivity2 this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.ModifyAccountPhoneActivity2$3 -> com.homecoolink.activity.ca:
    com.homecoolink.activity.ModifyAccountPhoneActivity2 this$0 -> a
    void run() -> run
com.homecoolink.activity.ModifyAccountPhoneActivity2$4 -> com.homecoolink.activity.cb:
    com.homecoolink.activity.ModifyAccountPhoneActivity2 this$0 -> a
    java.lang.String val$phone -> b
    java.lang.String val$countryCode -> c
    java.lang.String val$checkCode -> d
    void onClick() -> a
com.homecoolink.activity.ModifyAccountPhoneActivity2$GetPhoneCodeTask -> com.homecoolink.activity.cc:
    java.lang.String CountryCode -> a
    java.lang.String PhoneNO -> b
    com.homecoolink.activity.ModifyAccountPhoneActivity2 this$0 -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ModifyAccountPhoneActivity2$SetAccountInfoTask -> com.homecoolink.activity.cd:
    java.lang.String password -> b
    java.lang.String phone -> c
    java.lang.String countryCode -> d
    java.lang.String checkCode -> e
    com.homecoolink.activity.ModifyAccountPhoneActivity2 this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ModifyBoundEmailActivity -> com.homecoolink.activity.ModifyBoundEmailActivity:
    android.content.Context mContext -> a
    com.homecoolink.data.Contact mContact -> b
    android.widget.ImageView mBack -> c
    android.widget.Button mSave -> d
    android.widget.EditText mEmail -> e
    com.homecoolink.widget.NormalDialog dialog -> f
    boolean isRegFilter -> h
    java.lang.String email -> g
    android.content.BroadcastReceiver mReceiver -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void regFilter() -> c
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
com.homecoolink.activity.ModifyBoundEmailActivity$1 -> com.homecoolink.activity.ce:
    com.homecoolink.activity.ModifyBoundEmailActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.ModifyContactActivity -> com.homecoolink.activity.ModifyContactActivity:
    android.widget.TextView mSave -> k
    android.widget.ImageView mBack -> l
    com.homecoolink.widget.HeaderView header_img -> a
    android.content.Context mContext -> b
    android.widget.EditText contactName -> c
    android.widget.EditText contactPwd -> d
    android.widget.LinearLayout layout_device_pwd -> e
    android.widget.TextView contactId -> f
    com.homecoolink.data.Contact mModifyContact -> g
    com.homecoolink.widget.NormalDialog dialog -> h
    android.widget.RelativeLayout modify_header -> i
    android.graphics.Bitmap tempHead -> m
    java.lang.Boolean showpass -> n
    boolean isRegFilter -> j
    android.content.BroadcastReceiver mReceiver -> o
    void onCreate(android.os.Bundle) -> onCreate
    void regFilter() -> b
    void initCompent() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void destroyTempHead() -> d
    void onClick(android.view.View) -> onClick
    void save() -> e
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
com.homecoolink.activity.ModifyContactActivity$1 -> com.homecoolink.activity.cf:
    com.homecoolink.activity.ModifyContactActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.ModifyLoginPasswordActivity -> com.homecoolink.activity.ModifyLoginPasswordActivity:
    android.content.Context mContext -> a
    android.widget.ImageView mBack -> b
    android.widget.Button mSave -> c
    android.widget.EditText old_pwd -> d
    android.widget.EditText new_pwd -> e
    android.widget.EditText re_new_pwd -> f
    java.lang.String password_old -> g
    java.lang.String password_new -> h
    java.lang.String password_re_new -> i
    com.homecoolink.widget.NormalDialog dialog -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void onClick(android.view.View) -> onClick
    int getActivityInfo() -> f
com.homecoolink.activity.ModifyLoginPasswordActivity$ModifyLoginPasswordTask -> com.homecoolink.activity.cg:
    java.lang.String threeNum -> a
    java.lang.String sessionId -> b
    java.lang.String oldPwd -> c
    java.lang.String newPwd -> d
    java.lang.String rePwd -> e
    com.homecoolink.activity.ModifyLoginPasswordActivity this$0 -> f
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.ModifyNpcPasswordActivity -> com.homecoolink.activity.ModifyNpcPasswordActivity:
    android.content.Context mContext -> a
    com.homecoolink.data.Contact mContact -> b
    android.widget.ImageView mBack -> c
    android.widget.Button mSave -> d
    android.widget.EditText old_pwd -> e
    android.widget.EditText new_pwd -> f
    android.widget.EditText re_new_pwd -> g
    com.homecoolink.widget.NormalDialog dialog -> h
    boolean isRegFilter -> l
    java.lang.String password_old -> i
    java.lang.String password_new -> j
    java.lang.String password_re_new -> k
    android.content.BroadcastReceiver mReceiver -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void regFilter() -> c
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
com.homecoolink.activity.ModifyNpcPasswordActivity$1 -> com.homecoolink.activity.ch:
    com.homecoolink.activity.ModifyNpcPasswordActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.ModifyNpcVisitorPasswordActivity -> com.homecoolink.activity.ModifyNpcVisitorPasswordActivity:
    android.content.Context mContext -> g
    com.homecoolink.data.Contact mContact -> h
    android.widget.EditText et_pwd -> a
    android.widget.Button msave -> b
    android.widget.ImageView back_bt -> c
    boolean isRegFilter -> d
    com.homecoolink.widget.NormalDialog dialog -> e
    android.content.BroadcastReceiver br -> f
    void onCreate(android.os.Bundle) -> onCreate
    void regFilter() -> b
    void initComponent() -> c
    int getActivityInfo() -> f
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    android.content.Context access$0(com.homecoolink.activity.ModifyNpcVisitorPasswordActivity) -> a
com.homecoolink.activity.ModifyNpcVisitorPasswordActivity$1 -> com.homecoolink.activity.ci:
    com.homecoolink.activity.ModifyNpcVisitorPasswordActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.QRcodeActivity -> com.homecoolink.activity.QRcodeActivity:
    android.content.Context mContext -> i
    android.widget.Button bt_next -> a
    java.lang.String ssid -> b
    int type -> c
    android.widget.TextView tv_ssid -> d
    android.widget.EditText edit_pwd -> e
    android.widget.ImageView img_back -> f
    boolean isRegFilter -> g
    android.content.BroadcastReceiver br -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void regFilter() -> c
    void onClick(android.view.View) -> onClick
    void currentWifi() -> d
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
com.homecoolink.activity.QRcodeActivity$1 -> com.homecoolink.activity.cj:
    com.homecoolink.activity.QRcodeActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.RadarAddActivity -> com.homecoolink.activity.RadarAddActivity:
    android.content.Context mContext -> n
    java.lang.String ssid -> a
    int type -> b
    int mLocalIp -> c
    android.widget.Button bt_next -> d
    android.widget.TextView tv_ssid -> e
    android.widget.EditText edit_pwd -> f
    android.widget.ImageView back_btn -> g
    boolean bool1 -> h
    boolean bool2 -> i
    boolean bool3 -> j
    boolean bool4 -> k
    byte mAuthMode -> o
    byte AuthModeAutoSwitch -> p
    byte AuthModeOpen -> q
    byte AuthModeShared -> r
    byte AuthModeWPA -> s
    byte AuthModeWPA1PSKWPA2PSK -> t
    byte AuthModeWPA1WPA2 -> u
    byte AuthModeWPA2 -> v
    byte AuthModeWPA2PSK -> w
    byte AuthModeWPANone -> x
    byte AuthModeWPAPSK -> y
    boolean isRegFilter -> l
    android.content.BroadcastReceiver br -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void regFilter() -> c
    void currentWifi() -> d
    int getActivityInfo() -> f
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    android.content.Context access$0(com.homecoolink.activity.RadarAddActivity) -> a
com.homecoolink.activity.RadarAddActivity$1 -> com.homecoolink.activity.ck:
    com.homecoolink.activity.RadarAddActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.RadarAddFirstActivity -> com.homecoolink.activity.RadarAddFirstActivity:
    android.content.Context mContext -> c
    android.widget.Button next -> a
    android.widget.ImageView back -> b
    void onCreate(android.os.Bundle) -> onCreate
    int getActivityInfo() -> f
    void onDestroy() -> onDestroy
    android.content.Context access$0(com.homecoolink.activity.RadarAddFirstActivity) -> a
com.homecoolink.activity.RadarAddFirstActivity$1 -> com.homecoolink.activity.cl:
    com.homecoolink.activity.RadarAddFirstActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.activity.RadarAddFirstActivity$2 -> com.homecoolink.activity.cm:
    com.homecoolink.activity.RadarAddFirstActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.activity.RegisterActivity2 -> com.homecoolink.activity.RegisterActivity2:
    java.lang.String count -> e
    java.lang.String phone -> f
    java.lang.String code -> g
    android.widget.EditText email -> h
    android.widget.EditText pwd -> i
    android.widget.EditText phone_et -> j
    android.widget.EditText verific_et -> k
    android.widget.RelativeLayout clear1 -> l
    android.widget.RelativeLayout clear2 -> m
    android.widget.RelativeLayout clear3 -> n
    android.widget.RelativeLayout clear4 -> o
    android.widget.Button register -> a
    boolean isDialogCanel -> b
    android.content.Context context -> p
    com.homecoolink.widget.NormalDialog dialog -> c
    android.widget.ImageView back -> q
    android.widget.Button getCodeBtn -> r
    android.widget.TextView tip_tv -> d
    android.widget.RadioGroup rg -> s
    android.widget.LinearLayout layout_phone -> t
    android.widget.LinearLayout layout_email -> u
    android.widget.LinearLayout layout_verify -> v
    android.os.Handler mHandler -> w
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void onClick(android.view.View) -> onClick
    void register2() -> d
    void register1() -> e
    void register() -> i
    void getPhoneCode() -> j
    void changeButton() -> c
    void checkCode(com.homecoolink.activity.RegisterActivity2$RegisterTask) -> a
    int getActivityInfo() -> f
    android.widget.LinearLayout access$0(com.homecoolink.activity.RegisterActivity2) -> a
    android.widget.Button access$1(com.homecoolink.activity.RegisterActivity2) -> b
    android.content.Context access$2(com.homecoolink.activity.RegisterActivity2) -> c
    android.widget.LinearLayout access$3(com.homecoolink.activity.RegisterActivity2) -> d
    android.widget.LinearLayout access$4(com.homecoolink.activity.RegisterActivity2) -> e
    android.widget.RelativeLayout access$5(com.homecoolink.activity.RegisterActivity2) -> f
    android.widget.RelativeLayout access$6(com.homecoolink.activity.RegisterActivity2) -> g
    android.widget.RelativeLayout access$7(com.homecoolink.activity.RegisterActivity2) -> h
    android.widget.RelativeLayout access$8(com.homecoolink.activity.RegisterActivity2) -> i
    android.os.Handler access$9(com.homecoolink.activity.RegisterActivity2) -> j
com.homecoolink.activity.RegisterActivity2$1 -> com.homecoolink.activity.cn:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.activity.RegisterActivity2$10 -> com.homecoolink.activity.co:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void run() -> run
com.homecoolink.activity.RegisterActivity2$11 -> com.homecoolink.activity.cp:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.RegisterActivity2$2 -> com.homecoolink.activity.cq:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.homecoolink.activity.RegisterActivity2$3 -> com.homecoolink.activity.cr:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.homecoolink.activity.RegisterActivity2$4 -> com.homecoolink.activity.cs:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.homecoolink.activity.RegisterActivity2$5 -> com.homecoolink.activity.ct:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.homecoolink.activity.RegisterActivity2$6 -> com.homecoolink.activity.cu:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.homecoolink.activity.RegisterActivity2$7 -> com.homecoolink.activity.cv:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.RegisterActivity2$8 -> com.homecoolink.activity.cw:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.RegisterActivity2$9 -> com.homecoolink.activity.cx:
    com.homecoolink.activity.RegisterActivity2 this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.RegisterActivity2$GetPhoneCodeTask -> com.homecoolink.activity.cy:
    java.lang.String CountryCode -> a
    java.lang.String PhoneNO -> b
    com.homecoolink.activity.RegisterActivity2 this$0 -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.RegisterActivity2$RegisterTask -> com.homecoolink.activity.cz:
    java.lang.String VersionFlag -> a
    java.lang.String Email -> b
    java.lang.String CountryCode -> c
    java.lang.String PhoneNO -> d
    java.lang.String Pwd -> e
    java.lang.String RePwd -> f
    java.lang.String VerifyCode -> g
    java.lang.String IgnoreSafeWarning -> h
    com.homecoolink.activity.RegisterActivity2 this$0 -> i
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.activity.RegisterActivity2$VerifyCodeTask -> com.homecoolink.activity.da:
    java.lang.String countryCode -> a
    java.lang.String phoneNO -> b
    java.lang.String code -> c
    com.homecoolink.activity.RegisterActivity2$RegisterTask rt -> d
    com.homecoolink.activity.RegisterActivity2 this$0 -> e
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    com.homecoolink.activity.RegisterActivity2 access$0(com.homecoolink.activity.RegisterActivity2$VerifyCodeTask) -> a
com.homecoolink.activity.RegisterActivity2$VerifyCodeTask$1 -> com.homecoolink.activity.db:
    com.homecoolink.activity.RegisterActivity2$VerifyCodeTask this$1 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.activity.SearchListActivity -> com.homecoolink.activity.SearchListActivity:
    android.widget.ExpandableListView eListView -> b
    com.homecoolink.widget.SortBar sort_bar -> c
    com.homecoolink.adapter.SearchListAdapter adapter -> d
    android.content.Context mContext -> a
    java.lang.String[] data_zh -> e
    java.lang.String[] data_en -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    java.lang.String getNameByCode(android.content.Context,int) -> a
    int getActivityInfo() -> f
    com.homecoolink.adapter.SearchListAdapter access$0(com.homecoolink.activity.SearchListActivity) -> a
    android.widget.ExpandableListView access$1(com.homecoolink.activity.SearchListActivity) -> b
com.homecoolink.activity.SearchListActivity$1 -> com.homecoolink.activity.dc:
    android.view.View layoutView -> a
    android.widget.TextView text -> b
    android.widget.PopupWindow popupWindow -> c
    com.homecoolink.activity.SearchListActivity this$0 -> d
    void onTouchAssortListener(java.lang.String) -> a
    void onTouchAssortUP() -> a
com.homecoolink.activity.SettingBellRingActivity -> com.homecoolink.activity.SettingBellRingActivity:
    android.widget.Button save_btn -> a
    android.widget.ImageView back_btn -> b
    android.widget.ListView list_sys_bell -> c
    android.media.MediaPlayer player -> d
    android.widget.RelativeLayout set_sd_bell_btn -> e
    android.content.Context context -> f
    com.homecoolink.activity.SettingBellRingActivity$MyReceiver receiver -> g
    android.widget.TextView selectBell -> h
    boolean myreceiverIsReg -> i
    com.homecoolink.adapter.BellChoiceAdapter adapter -> j
    int checkedId -> k
    int selectPos -> l
    int bellType -> m
    int settingType -> n
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void initSelectState() -> c
    void registerMonitor() -> d
    void onClick(android.view.View) -> onClick
    void initSelectMusicName() -> e
    void playMusic(int) -> a
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    int getActivityInfo() -> f
com.homecoolink.activity.SettingBellRingActivity$1 -> com.homecoolink.activity.dd:
    com.homecoolink.activity.SettingBellRingActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.homecoolink.activity.SettingBellRingActivity$MyReceiver -> com.homecoolink.activity.SettingBellRingActivity$MyReceiver:
    com.homecoolink.activity.SettingBellRingActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.SettingSdBellActivity -> com.homecoolink.activity.SettingSdBellActivity:
    android.widget.Button save_btn -> a
    android.widget.ImageView back_btn -> b
    android.widget.ListView list_sd_bell -> c
    android.media.MediaPlayer player -> d
    int checkedId -> e
    int bellType -> f
    int selectPos -> g
    android.content.Context context -> h
    int settingType -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void initSelectState() -> c
    void playMusic(int) -> a
    void onClick(android.view.View) -> onClick
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
com.homecoolink.activity.SettingSdBellActivity$1 -> com.homecoolink.activity.de:
    com.homecoolink.activity.SettingSdBellActivity this$0 -> a
    com.homecoolink.adapter.BellChoiceAdapter val$adapter -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.homecoolink.activity.SettingSystemActivity -> com.homecoolink.activity.SettingSystemActivity:
    android.widget.ImageView back_btn -> a
    android.widget.RelativeLayout c_vibrate_btn -> b
    android.widget.RelativeLayout c_mute_btn -> c
    android.widget.RelativeLayout a_vibrate_btn -> d
    android.widget.RelativeLayout a_mute_btn -> e
    android.widget.RelativeLayout notify_icon_btn -> f
    android.widget.RelativeLayout auto_start_btn -> g
    android.widget.ImageView notify_icon_img -> h
    android.widget.ImageView auto_start_icon_img -> i
    android.widget.ImageView c_vibrate_img -> j
    android.widget.ImageView c_mute_img -> k
    android.widget.ImageView a_vibrate_img -> l
    android.widget.ImageView a_mute_img -> m
    android.widget.RelativeLayout set_commingRing_btn -> n
    android.widget.RelativeLayout set_allarmRing_btn -> o
    android.widget.RelativeLayout alarm_set_btn -> p
    android.widget.RelativeLayout set_allarmInterval_btn -> q
    android.widget.TextView selectedCRing -> r
    android.widget.TextView selectedARing -> s
    boolean myreceiverIsReg -> t
    com.homecoolink.activity.SettingSystemActivity$MyReceiver receiver -> u
    int c_vibrateState -> v
    int a_vibrateState -> w
    int c_muteState -> x
    int a_muteState -> y
    boolean isShowNotify -> z
    boolean isAutoStart -> A
    void onCreate(android.os.Bundle) -> onCreate
    void initCompent() -> b
    void initBtnState() -> c
    void initSelectMusicName() -> d
    void registerMonitor() -> e
    void changeCVibrate() -> i
    void changeCMute() -> j
    void changeAVibrate() -> k
    void changeAMute() -> l
    void changeIsShowNotifyIcon() -> m
    void changeIsAutoStartIcon() -> n
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
com.homecoolink.activity.SettingSystemActivity$MyReceiver -> com.homecoolink.activity.SettingSystemActivity$MyReceiver:
    com.homecoolink.activity.SettingSystemActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.activity.UnbindPhoneActivity -> com.homecoolink.activity.UnbindPhoneActivity:
    android.widget.ImageView back_btn -> a
    android.widget.Button unbind -> b
    android.content.Context mContext -> c
    com.homecoolink.widget.NormalDialog dialog -> d
    com.homecoolink.widget.MyInputDialog dialog_input -> e
    android.widget.RelativeLayout dialog_input_mask -> f
    android.widget.TextView phone_text -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initComponent() -> b
    void onClick(android.view.View) -> onClick
    void showInputPwd(java.lang.String,java.lang.String,java.lang.String) -> a
    void onBackPressed() -> onBackPressed
    int getActivityInfo() -> f
com.homecoolink.activity.UnbindPhoneActivity$1 -> com.homecoolink.activity.df:
    com.homecoolink.activity.UnbindPhoneActivity this$0 -> a
    java.lang.String val$phone -> b
    java.lang.String val$countryCode -> c
    java.lang.String val$checkCode -> d
    void onClick() -> a
com.homecoolink.activity.UnbindPhoneActivity$SetAccountInfoTask -> com.homecoolink.activity.dg:
    java.lang.String password -> b
    java.lang.String phone -> c
    java.lang.String countryCode -> d
    java.lang.String checkCode -> e
    com.homecoolink.activity.UnbindPhoneActivity this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.homecoolink.adapter.AboutPagerAdapter -> com.homecoolink.adapter.AboutPagerAdapter:
    java.util.List views -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
com.homecoolink.adapter.AlarmRecordAdapter3 -> com.homecoolink.adapter.a:
    android.content.Context mcontext -> b
    android.view.LayoutInflater mlif -> c
    java.util.ArrayList mal -> d
    boolean isdevice -> a
    java.util.HashMap contactnames -> e
    boolean isFromDevice -> f
    com.homecoolink.activity.AlarmRecordFromDeviceActivity fa -> g
    com.homecoolink.fragment.AlarmRecordFrag ff -> h
    java.lang.String GetDVName(java.lang.String) -> b
    void ChangeData(java.util.ArrayList) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setAlarmLayout(com.homecoolink.adapter.AlarmRecordAdapter3$AlarmViewHolder,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getTimeStatic(java.lang.String) -> a
    android.content.Context access$0(com.homecoolink.adapter.AlarmRecordAdapter3) -> a
    boolean access$1(com.homecoolink.adapter.AlarmRecordAdapter3) -> b
    com.homecoolink.activity.AlarmRecordFromDeviceActivity access$2(com.homecoolink.adapter.AlarmRecordAdapter3) -> c
    com.homecoolink.fragment.AlarmRecordFrag access$3(com.homecoolink.adapter.AlarmRecordAdapter3) -> d
com.homecoolink.adapter.AlarmRecordAdapter3$1 -> com.homecoolink.adapter.b:
    com.homecoolink.adapter.AlarmRecordAdapter3 this$0 -> a
    com.homecoolink.entity.AlarmRecord val$ar -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.AlarmRecordAdapter3$AlarmViewHolder -> com.homecoolink.adapter.c:
    android.widget.ImageView alarmItem_Iv1 -> b
    android.widget.ImageView alarmItem_RedSpot -> c
    android.widget.TextView alarmItem_Type -> d
    android.widget.TextView alarmItem_Dis -> e
    android.widget.TextView alarmItem_Time1 -> f
    android.widget.TextView alarmItem_Time2 -> g
    android.widget.TextView alarmItem_TypeContant -> h
    com.homecoolink.adapter.AlarmRecordAdapter3 this$0 -> a
    android.widget.TextView getAlarmItem_TypeContant() -> a
    void setAlarmItem_TypeContant(android.widget.TextView) -> a
    android.widget.ImageView getAlarmItem_Iv1() -> b
    void setAlarmItem_Iv1(android.widget.ImageView) -> a
    android.widget.ImageView getAlarmItem_RedSpot() -> c
    void setAlarmItem_RedSpot(android.widget.ImageView) -> b
    android.widget.TextView getAlarmItem_Type() -> d
    void setAlarmItem_Type(android.widget.TextView) -> b
    android.widget.TextView getAlarmItem_Dis() -> e
    void setAlarmItem_Dis(android.widget.TextView) -> c
    android.widget.TextView getAlarmItem_Time1() -> f
    void setAlarmItem_Time1(android.widget.TextView) -> d
    android.widget.TextView getAlarmItem_Time2() -> g
    void setAlarmItem_Time2(android.widget.TextView) -> e
com.homecoolink.adapter.AlarmRecordAdapter3$TitleViewHolder -> com.homecoolink.adapter.d:
    android.widget.TextView titleTv -> b
    com.homecoolink.adapter.AlarmRecordAdapter3 this$0 -> a
    android.widget.TextView getTitleTv() -> a
    void setTitleTv(android.widget.TextView) -> a
com.homecoolink.adapter.BellChoiceAdapter -> com.homecoolink.adapter.e:
    android.content.Context context -> c
    int checkedId -> a
    com.homecoolink.adapter.BellChoiceAdapter ba -> b
    java.util.ArrayList bells -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setCheckedId(int) -> a
com.homecoolink.adapter.DateNumericAdapter -> com.homecoolink.adapter.f:
    android.content.Context context -> a
    int start -> b
    int end -> c
    int getItemsCount() -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
com.homecoolink.adapter.ImageBrowserAdapter -> com.homecoolink.adapter.g:
    java.io.File[] data -> a
    android.content.Context context -> b
    com.homecoolink.fragment.ImageFrag ifrag -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void updateData() -> a
    java.io.File[] getAllScreenShot() -> b
com.homecoolink.adapter.ImageBrowserAdapter$1 -> com.homecoolink.adapter.h:
    com.homecoolink.adapter.ImageBrowserAdapter this$0 -> a
    boolean accept(java.io.File) -> accept
com.homecoolink.adapter.ImageBrowserAdapter$2 -> com.homecoolink.adapter.i:
    com.homecoolink.adapter.ImageBrowserAdapter this$0 -> a
    int val$arg0 -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.ImageBrowserAdapter$3 -> com.homecoolink.adapter.j:
    com.homecoolink.adapter.ImageBrowserAdapter this$0 -> a
    int val$arg0 -> b
    boolean onLongClick(android.view.View) -> onLongClick
    com.homecoolink.adapter.ImageBrowserAdapter access$0(com.homecoolink.adapter.ImageBrowserAdapter$3) -> a
com.homecoolink.adapter.ImageBrowserAdapter$3$1 -> com.homecoolink.adapter.k:
    com.homecoolink.adapter.ImageBrowserAdapter$3 this$1 -> a
    int val$arg0 -> b
    void onClick() -> a
com.homecoolink.adapter.ImageBrowserAdapter$4 -> com.homecoolink.adapter.l:
    com.homecoolink.adapter.ImageBrowserAdapter this$0 -> a
    boolean accept(java.io.File) -> accept
com.homecoolink.adapter.LocalDeviceListAdapter -> com.homecoolink.adapter.m:
    java.util.List datas -> a
    android.content.Context mContext -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void updateData() -> a
com.homecoolink.adapter.LocalDeviceListAdapter$1 -> com.homecoolink.adapter.n:
    com.homecoolink.adapter.LocalDeviceListAdapter this$0 -> a
    com.homecoolink.entity.LocalDevice val$localDevice -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.MainAdapter -> com.homecoolink.adapter.o:
    android.content.Context context -> a
    com.homecoolink.fragment.ContactFrag cf -> c
    android.os.Handler handler -> b
    int getCount() -> getCount
    com.homecoolink.data.Contact getItem(int) -> a
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void updateImage(java.lang.String,boolean,android.widget.ImageView) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    com.homecoolink.fragment.ContactFrag access$1(com.homecoolink.adapter.MainAdapter) -> a
com.homecoolink.adapter.MainAdapter$1 -> com.homecoolink.adapter.p:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.adapter.MainAdapter$10 -> com.homecoolink.adapter.q:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    com.homecoolink.data.Contact val$contact -> b
    int val$position -> c
    boolean onLongClick(android.view.View) -> onLongClick
    com.homecoolink.adapter.MainAdapter access$0(com.homecoolink.adapter.MainAdapter$10) -> a
com.homecoolink.adapter.MainAdapter$10$1 -> com.homecoolink.adapter.r:
    com.homecoolink.adapter.MainAdapter$10 this$1 -> a
    com.homecoolink.data.Contact val$contact -> b
    int val$position -> c
    void onClick() -> a
com.homecoolink.adapter.MainAdapter$2 -> com.homecoolink.adapter.s:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    com.homecoolink.data.Contact val$contact -> b
    void onClick(android.view.View) -> onClick
    com.homecoolink.adapter.MainAdapter access$0(com.homecoolink.adapter.MainAdapter$2) -> a
com.homecoolink.adapter.MainAdapter$2$1 -> com.homecoolink.adapter.t:
    com.homecoolink.adapter.MainAdapter$2 this$1 -> a
    android.content.Intent val$modify -> b
    void onClick() -> a
com.homecoolink.adapter.MainAdapter$3 -> com.homecoolink.adapter.u:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    com.homecoolink.data.Contact val$contact -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.MainAdapter$4 -> com.homecoolink.adapter.v:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    com.homecoolink.data.Contact val$contact -> b
    void onClick(android.view.View) -> onClick
    com.homecoolink.adapter.MainAdapter access$0(com.homecoolink.adapter.MainAdapter$4) -> a
com.homecoolink.adapter.MainAdapter$4$1 -> com.homecoolink.adapter.w:
    com.homecoolink.adapter.MainAdapter$4 this$1 -> a
    android.content.Intent val$modify -> b
    void onClick() -> a
com.homecoolink.adapter.MainAdapter$5 -> com.homecoolink.adapter.x:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    com.homecoolink.data.Contact val$contact -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.MainAdapter$6 -> com.homecoolink.adapter.y:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    com.homecoolink.data.Contact val$contact -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.MainAdapter$7 -> com.homecoolink.adapter.z:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    com.homecoolink.data.Contact val$contact -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.MainAdapter$8 -> com.homecoolink.adapter.aa:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    com.homecoolink.data.Contact val$contact -> b
    com.homecoolink.adapter.MainAdapter$ViewHolder val$holder -> c
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.MainAdapter$9 -> com.homecoolink.adapter.ab:
    com.homecoolink.adapter.MainAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.MainAdapter$ViewHolder -> com.homecoolink.adapter.ac:
    android.widget.TextView name -> b
    android.widget.TextView online_state -> c
    android.widget.LinearLayout contact_list_rightarrow -> d
    android.widget.ImageView msgCount -> e
    android.widget.ImageView editcontact -> f
    android.widget.ImageView header_icon_play -> g
    android.widget.ImageView contact_list_defaultpic -> h
    android.widget.RelativeLayout layout_defence_btn -> i
    android.widget.RelativeLayout layout_setting_btn -> j
    android.widget.ImageView image_defence_state -> k
    android.widget.ProgressBar progress_defence -> l
    android.widget.LinearLayout listmask -> m
    com.homecoolink.adapter.MainAdapter this$0 -> a
    android.widget.ImageView getcontact_list_defaultpic() -> a
    void setcontact_list_defaultpic(android.widget.ImageView) -> a
    android.widget.ImageView geteditcontact() -> b
    void seteditcontact(android.widget.ImageView) -> b
    void setMsgCount(android.widget.ImageView) -> c
    android.widget.LinearLayout getcontact_list_rightarrow() -> c
    void setcontact_list_rightarrow(android.widget.LinearLayout) -> a
    android.widget.LinearLayout getListMask() -> d
    void setListMask(android.widget.LinearLayout) -> b
    android.widget.TextView getOnline_state() -> e
    void setOnline_state(android.widget.TextView) -> a
    android.widget.TextView getName() -> f
    void setName(android.widget.TextView) -> b
    android.widget.ImageView getHeader_icon_play() -> g
    void setHeader_icon_play(android.widget.ImageView) -> d
    android.widget.RelativeLayout getLayout_defence_btn() -> h
    void setLayout_defence_btn(android.widget.RelativeLayout) -> a
    android.widget.RelativeLayout getlayout_setting_btn() -> i
    void setlayout_setting_btn(android.widget.RelativeLayout) -> b
    android.widget.ImageView getImage_defence_state() -> j
    void setImage_defence_state(android.widget.ImageView) -> e
    android.widget.ProgressBar getProgress_defence() -> k
    void setProgress_defence(android.widget.ProgressBar) -> a
com.homecoolink.adapter.RecordAdapter -> com.homecoolink.adapter.ad:
    android.content.Context context -> a
    java.util.List list -> b
    com.homecoolink.data.Contact contact -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void updateImage(java.lang.String,boolean,android.widget.ImageView) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String DoName(java.lang.String) -> a
    java.util.List getList() -> a
com.homecoolink.adapter.RecordAdapter$ViewHolder -> com.homecoolink.adapter.ae:
    android.widget.TextView record_name -> a
    android.widget.ImageView img -> b
    android.widget.ImageView playbtn -> c
    com.homecoolink.adapter.RecordAdapter this$0 -> d
    android.widget.TextView getRecord_name() -> a
    void setRecord_name(android.widget.TextView) -> a
    android.widget.ImageView getImg() -> b
    void setImg(android.widget.ImageView) -> a
    android.widget.ImageView getPlayBtn() -> c
    void setPlayBtn(android.widget.ImageView) -> b
com.homecoolink.adapter.SearchListAdapter -> com.homecoolink.adapter.af:
    java.lang.String[] data -> a
    com.homecoolink.utils.PinYinSort assort -> b
    android.content.Context context -> c
    android.view.LayoutInflater inflater -> d
    com.homecoolink.utils.LanguageComparator_CN cnSort -> e
    void sort() -> b
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    com.homecoolink.utils.PinYinSort getAssort() -> a
    android.content.Context access$0(com.homecoolink.adapter.SearchListAdapter) -> a
com.homecoolink.adapter.SearchListAdapter$1 -> com.homecoolink.adapter.ag:
    com.homecoolink.adapter.SearchListAdapter this$0 -> a
    java.lang.String[] val$info -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.VideoContactAdapter -> com.homecoolink.adapter.ah:
    android.content.Context mcontext -> b
    android.view.LayoutInflater mlif -> c
    com.homecoolink.fragment.ImageFrag ifFrag -> a
    void ChangeData() -> a
    int getCount() -> getCount
    com.homecoolink.data.Contact getItem(int) -> a
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.homecoolink.adapter.VideoContactAdapter$1 -> com.homecoolink.adapter.ai:
    com.homecoolink.adapter.VideoContactAdapter this$0 -> a
    com.homecoolink.data.Contact val$contact -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.VideoContactAdapter$ViewHolder -> com.homecoolink.adapter.aj:
    android.widget.TextView tName -> b
    com.homecoolink.adapter.VideoContactAdapter this$0 -> a
    android.widget.TextView getTName() -> a
    void setTName(android.widget.TextView) -> a
com.homecoolink.adapter.VideoDateAdapter -> com.homecoolink.adapter.ak:
    android.content.Context mcontext -> d
    android.view.LayoutInflater mlif -> e
    java.lang.String[] datesStrings -> f
    com.homecoolink.fragment.ImageFrag ifFrag -> a
    com.homecoolink.activity.AlarmReordVideo alarmv -> b
    android.view.View footerView -> c
    android.view.View getFooterView() -> a
    void setFooterView(android.view.View) -> a
    void ChangeData(java.lang.String[]) -> a
    int getCount() -> getCount
    java.lang.String getItem(int) -> a
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setDatesStrings(java.lang.String[]) -> b
    java.lang.Object getItem(int) -> getItem
com.homecoolink.adapter.VideoDateAdapter$1 -> com.homecoolink.adapter.al:
    com.homecoolink.adapter.VideoDateAdapter this$0 -> a
    java.lang.String val$dateString -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.adapter.VideoDateAdapter$ViewHolder -> com.homecoolink.adapter.am:
    android.widget.TextView tName -> b
    com.homecoolink.adapter.VideoDateAdapter this$0 -> a
    android.widget.TextView getTName() -> a
    void setTName(android.widget.TextView) -> a
com.homecoolink.adapter.WifiAdapter -> com.homecoolink.adapter.an:
    android.content.Context mContext -> a
    int iCurrentId -> b
    int iCount -> c
    int[] iType -> d
    int[] iStrength -> e
    java.lang.String[] names -> f
    com.homecoolink.fragment.NetControlFrag ncf -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void updateData(int,int,int[],int[],java.lang.String[]) -> a
com.homecoolink.adapter.WifiAdapter$1 -> com.homecoolink.adapter.ao:
    com.homecoolink.adapter.WifiAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
    com.homecoolink.adapter.WifiAdapter access$0(com.homecoolink.adapter.WifiAdapter$1) -> a
com.homecoolink.adapter.WifiAdapter$1$1 -> com.homecoolink.adapter.ap:
    com.homecoolink.adapter.WifiAdapter$1 this$1 -> a
    int val$position -> b
    void onClick() -> a
com.homecoolink.data.AlarmMask -> com.homecoolink.a.a:
    int id -> a
    java.lang.String activeUser -> b
    java.lang.String deviceId -> c
com.homecoolink.data.AlarmMaskDB -> com.homecoolink.a.b:
    android.database.sqlite.SQLiteDatabase mDBStore -> a
    java.lang.String getCreateTableString() -> a
    long insert(com.homecoolink.data.AlarmMask) -> a
    java.util.List findByActiveUserId(java.lang.String) -> a
    int deleteByActiveUserAndDeviceId(java.lang.String,java.lang.String) -> a
com.homecoolink.data.AlarmRecord -> com.homecoolink.a.c:
    int id -> a
    java.lang.String deviceId -> b
    int alarmType -> c
    java.lang.String alarmTime -> d
    java.lang.String activeUser -> e
    int group -> f
    int item -> g
    int alarmStatus -> h
com.homecoolink.data.AlarmRecordDB -> com.homecoolink.a.d:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    java.lang.String contactString -> b
    java.lang.String getCreateTableString() -> a
    long insert(com.homecoolink.data.AlarmRecord) -> a
    long inserts(java.util.ArrayList) -> a
    java.util.Date Str2Date(java.lang.String,java.lang.String) -> d
    java.lang.Boolean Exists(java.lang.String,java.lang.String,int,java.lang.String,int,int) -> a
    java.util.List findUnReadByActiveUserId(java.lang.String) -> a
    java.util.List findUnReadByDeviceId(java.lang.String,java.lang.String) -> a
    java.util.List findByGroup(java.lang.String,java.lang.String) -> b
    int deleteByDeviceId(java.lang.String,java.lang.String) -> c
    java.lang.String FormatDate(java.util.Date,java.lang.String) -> a
    int updateReadById(int) -> a
    int updateRead(java.lang.String) -> b
com.homecoolink.data.Contact -> com.homecoolink.a.e:
    int id -> a
    java.lang.String contactName -> b
    java.lang.String contactId -> c
    java.lang.String contactPassword -> d
    int contactType -> e
    int messageCount -> f
    java.lang.String activeUser -> g
    int onLineState -> h
    int defenceState -> i
    boolean isClickGetDefenceState -> j
    int compareTo(java.lang.Object) -> compareTo
com.homecoolink.data.ContactDB -> com.homecoolink.a.f:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    java.lang.String getCreateTableString() -> a
    long insert(com.homecoolink.data.Contact) -> a
    void update(com.homecoolink.data.Contact) -> b
    java.util.List findByActiveUserId(java.lang.String) -> a
    java.util.List findByActiveUserIdAndContactId(java.lang.String,java.lang.String) -> a
    int deleteByActiveUserIdAndContactId(java.lang.String,java.lang.String) -> b
com.homecoolink.data.DBHelper -> com.homecoolink.a.g:
    android.database.sqlite.SQLiteDatabase mDB -> a
    android.content.Context context -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.homecoolink.data.DataManager -> com.homecoolink.a.h:
    java.util.List findDefenceAreaNameAll(android.content.Context) -> a
    void insertDefenceAreaName(android.content.Context,com.homecoolink.data.DefenceAreaName) -> a
    void upDefenceAreaName(android.content.Context,com.homecoolink.data.DefenceAreaName) -> b
    java.lang.String getMinDefenceAreaItem(android.content.Context,java.lang.String) -> a
    void insertMessage(android.content.Context,com.homecoolink.data.Message) -> a
    java.util.List findSysMessageByActiveUser(android.content.Context,java.lang.String) -> b
    void insertSysMessage(android.content.Context,com.homecoolink.data.SysMessage) -> a
    java.util.List findAlarmMaskByActiveUser(android.content.Context,java.lang.String) -> c
    void insertAlarmMask(android.content.Context,com.homecoolink.data.AlarmMask) -> a
    void deleteAlarmMask(android.content.Context,java.lang.String,java.lang.String) -> a
    int updateAlarmRecordReadById(android.content.Context,int) -> a
    void updateAlarmRecordRead(android.content.Context,java.lang.String) -> d
    java.util.List findUnReadAlarmRecordByActiveUser(android.content.Context,java.lang.String) -> e
    java.util.List findUnReadAlarmRecordByDeviceID(android.content.Context,java.lang.String,java.lang.String) -> b
    java.util.List findAlarmRecordByGroup(android.content.Context,java.lang.String,java.lang.String) -> c
    java.lang.Boolean Exists(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String,int,int) -> a
    void insertAlarmRecords(android.content.Context,java.util.ArrayList) -> a
    void deleteAlarmRecordByDeviceId(android.content.Context,java.lang.String,java.lang.String) -> d
    void insertNearlyTell(android.content.Context,com.homecoolink.data.NearlyTell) -> a
    java.util.List findContactByActiveUser(android.content.Context,java.lang.String) -> f
    com.homecoolink.data.Contact findContactByActiveUserAndContactId(android.content.Context,java.lang.String,java.lang.String) -> e
    void insertContact(android.content.Context,com.homecoolink.data.Contact) -> a
    void updateContact(android.content.Context,com.homecoolink.data.Contact) -> b
    void deleteContactByActiveUserAndContactId(android.content.Context,java.lang.String,java.lang.String) -> f
com.homecoolink.data.DefenceAreaName -> com.homecoolink.a.i:
    java.lang.String groupI -> a
    java.lang.String groupJ -> b
    java.lang.String groupName -> c
    java.lang.String groupIJ -> d
com.homecoolink.data.DefenceAreaNameDB -> com.homecoolink.a.j:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    java.lang.String getCreateTableString() -> a
    long insert(com.homecoolink.data.DefenceAreaName) -> a
    void update(com.homecoolink.data.DefenceAreaName) -> b
    java.lang.String GetMinItem(java.lang.String) -> a
    java.util.List findDefenceAreaNameAll() -> b
com.homecoolink.data.DeviceAlarmRecordDB -> com.homecoolink.a.k:
    java.lang.String getCreateTableString() -> a
com.homecoolink.data.Message -> com.homecoolink.a.l:
    int id -> a
    java.lang.String fromId -> b
    java.lang.String toId -> c
    java.lang.String msg -> d
    java.lang.String msgTime -> e
    java.lang.String activeUser -> f
    java.lang.String msgState -> g
    java.lang.String msgFlag -> h
    int compareTo(java.lang.Object) -> compareTo
com.homecoolink.data.MessageDB -> com.homecoolink.a.m:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    java.lang.String getCreateTableString() -> a
    long insert(com.homecoolink.data.Message) -> a
com.homecoolink.data.NearlyTell -> com.homecoolink.a.n:
    java.lang.String tellId -> a
    int tellType -> b
    int tellState -> c
    java.lang.String tellTime -> d
    java.lang.String activeUser -> e
    int compareTo(java.lang.Object) -> compareTo
com.homecoolink.data.NearlyTellDB -> com.homecoolink.a.o:
    android.database.sqlite.SQLiteDatabase mDBStore -> a
    java.lang.String getCreateTableString() -> a
    long insert(com.homecoolink.data.NearlyTell) -> a
com.homecoolink.data.SharedPreferencesManager -> com.homecoolink.a.p:
    com.homecoolink.data.SharedPreferencesManager manager -> a
    com.homecoolink.data.SharedPreferencesManager getInstance() -> a
    java.lang.String getData(android.content.Context,java.lang.String,java.lang.String) -> a
    void putData(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void putLastAutoCheckUpdateTime(long,android.content.Context) -> a
    long getLastAutoCheckUpdateTime(android.content.Context) -> a
    void putIgnoreAlarmTime(android.content.Context,long) -> a
    long getIgnoreAlarmTime(android.content.Context) -> b
    void putIsAutoStart(android.content.Context,boolean) -> a
    boolean getIsAutoStart(android.content.Context,java.lang.String) -> a
    void putAlarmTimeInterval(android.content.Context,int) -> a
    int getAlarmTimeInterval(android.content.Context) -> c
    void putIsShowNotify(android.content.Context,boolean) -> b
    boolean getIsShowNotify(android.content.Context) -> d
    void putIsRememberPass(android.content.Context,boolean) -> c
    boolean getIsRememberPass(android.content.Context) -> e
    void putIsRememberPass_email(android.content.Context,boolean) -> d
    boolean getIsRememberPass_email(android.content.Context) -> f
    void putRecentLoginType(android.content.Context,int) -> b
    int getRecentLoginType(android.content.Context) -> g
    void putCVibrateState(int,android.content.Context) -> a
    int getCVibrateState(android.content.Context) -> h
    void putAVibrateState(int,android.content.Context) -> b
    int getAVibrateState(android.content.Context) -> i
    void putCSystemBellId(int,android.content.Context) -> c
    int getCSystemBellId(android.content.Context) -> j
    void putASystemBellId(int,android.content.Context) -> d
    int getASystemBellId(android.content.Context) -> k
    int getCSdBellId(android.content.Context) -> l
    void putCSdBellId(int,android.content.Context) -> e
    int getASdBellId(android.content.Context) -> m
    void putASdBellId(int,android.content.Context) -> f
    void putCBellSelectPos(int,android.content.Context) -> g
    int getCBellSelectPos(android.content.Context) -> n
    void putABellSelectPos(int,android.content.Context) -> h
    int getABellSelectPos(android.content.Context) -> o
    void putCMuteState(int,android.content.Context) -> i
    int getCMuteState(android.content.Context) -> p
    void putAMuteState(int,android.content.Context) -> j
    int getAMuteState(android.content.Context) -> q
    void putCBellType(int,android.content.Context) -> k
    int getCBellType(android.content.Context) -> r
    void putABellType(int,android.content.Context) -> l
    int getABellType(android.content.Context) -> s
com.homecoolink.data.SqlHelper -> com.homecoolink.a.q:
    java.lang.String formCreateTableSqlString(java.lang.String,java.util.HashMap) -> a
com.homecoolink.data.SysMessage -> com.homecoolink.a.r:
    int id -> a
    java.lang.String msg -> b
    java.lang.String msg_en -> c
    java.lang.String msg_time -> d
    java.lang.String activeUser -> e
    int msgType -> f
    int msgState -> g
    int compareTo(java.lang.Object) -> compareTo
com.homecoolink.data.SysMessageDB -> com.homecoolink.a.s:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    java.lang.String getCreateTableString() -> a
    long insert(com.homecoolink.data.SysMessage) -> a
    java.util.List findByActiveUserId(java.lang.String) -> a
com.homecoolink.data.SystemDataManager -> com.homecoolink.a.t:
    com.homecoolink.data.SystemDataManager manager -> a
    com.homecoolink.data.SystemDataManager getInstance() -> a
    java.util.ArrayList getSysBells(android.content.Context) -> a
    java.util.ArrayList getSdBells(android.content.Context) -> b
    java.util.HashMap findSystemBellById(android.content.Context,int) -> a
    java.util.HashMap findSdBellById(android.content.Context,int) -> b
com.homecoolink.entity.Account -> com.homecoolink.b.a:
    java.lang.String three_number -> a
    java.lang.String email -> b
    java.lang.String phone -> c
    java.lang.String sessionId -> d
    java.lang.String rCode1 -> e
    java.lang.String rCode2 -> f
    java.lang.String countryCode -> g
com.homecoolink.entity.AlarmRecord -> com.homecoolink.b.b:
    int id -> a
    java.lang.String deviceId -> b
    int alarmType -> c
    java.lang.String alarmTime -> d
    java.lang.String activeUser -> e
    int group -> f
    int item -> g
    int alarmStatus -> h
    int layoutType -> i
com.homecoolink.entity.DefenceObject -> com.homecoolink.b.c:
    android.widget.TextView tv -> a
    java.lang.String[] strings -> b
    boolean isVisible -> c
com.homecoolink.entity.LocalDevice -> com.homecoolink.b.d:
    java.lang.String contactId -> a
    int flag -> b
    int type -> c
    java.net.InetAddress address -> d
    java.lang.String getContactId() -> a
    void setContactId(java.lang.String) -> a
    int getFlag() -> b
    void setFlag(int) -> a
    int getType() -> c
    void setType(int) -> b
    void setAddress(java.net.InetAddress) -> a
    boolean equals(java.lang.Object) -> equals
com.homecoolink.fragment.AlarmControlFrag -> com.homecoolink.fragment.AlarmControlFrag:
    android.content.Context mContext -> S
    com.homecoolink.data.Contact contact -> T
    android.widget.RelativeLayout change_buzzer -> a
    android.widget.RelativeLayout change_motion -> b
    android.widget.RelativeLayout change_email -> c
    android.widget.RelativeLayout add_alarm_item -> d
    android.widget.RelativeLayout change_pir -> e
    android.widget.RelativeLayout alarm_input_switch -> f
    android.widget.RelativeLayout alarm_out_switch -> g
    android.widget.RelativeLayout shield_alarm -> h
    android.widget.LinearLayout buzzer_time -> i
    android.widget.RadioButton radio_one -> j
    android.widget.RadioButton radio_two -> k
    android.widget.RadioButton radio_three -> l
    android.widget.ProgressBar progressBar -> m
    android.widget.ProgressBar progressBar_motion -> n
    android.widget.ProgressBar progressBar_email -> o
    android.widget.ProgressBar progressBar_pir -> p
    android.widget.ProgressBar progressBar_alarm_input -> q
    android.widget.ProgressBar progressBar_alarm_out -> r
    android.widget.ProgressBar progressBar_receive_alarm -> s
    android.widget.ProgressBar progressBar_shield -> t
    android.widget.ImageView buzzer_img -> u
    android.widget.ImageView motion_img -> v
    android.widget.ImageView pir_img -> w
    android.widget.ImageView img_alarm_input -> x
    android.widget.ImageView img_alarm_out -> y
    android.widget.ImageView img_receive_alarm -> z
    android.widget.ImageView shield_img -> A
    int buzzer_switch -> B
    int motion_switch -> C
    boolean isRegFilter -> U
    android.widget.TextView email_text -> D
    com.homecoolink.widget.NormalDialog dialog_loading -> E
    java.lang.String[] last_bind_data -> F
    int cur_modify_buzzer_state -> G
    int cur_modify_motion_state -> H
    int modify_infrared_state -> I
    boolean current_infrared_state -> J
    boolean isOpenWriedAlarmInput -> K
    boolean isOpenWriedAlarmOut -> L
    boolean isReceiveAlarm -> M
    android.widget.RelativeLayout layout_alarm_switch -> N
    java.lang.String[] new_data -> O
    int max_alarm_count -> P
    boolean OpenShieldDevice -> Q
    android.widget.SeekBar seek_alarmtime -> R
    android.content.BroadcastReceiver mReceiver -> V
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void regFilter() -> a
    void onClick(android.view.View) -> onClick
    void onDestroyView() -> onDestroyView
    void updateBuzzer(int) -> a
    void showProgress() -> b
    void showBuzzerTime() -> c
    void showMotionState() -> d
    void showProgress_motion() -> e
    void showEmailState() -> f
    void showProgress_email() -> g
    void showAlarmIdState() -> h
    void showProgress_infrares_switch() -> i
    void showImg_infrared_switch() -> j
    void showProgress_wired_alarm_input() -> k
    void showImg_wired_alarm_input() -> l
    void showProgress_wired_alarm_out() -> m
    void showImg_wired_alarm_out() -> n
    void showProgress_receive_alarm() -> o
    void showImg_receive_alarm() -> p
    void onDestroy() -> onDestroy
    com.homecoolink.data.Contact access$0(com.homecoolink.fragment.AlarmControlFrag) -> a
    android.content.Context access$1(com.homecoolink.fragment.AlarmControlFrag) -> b
com.homecoolink.fragment.AlarmControlFrag$1 -> com.homecoolink.fragment.a:
    com.homecoolink.fragment.AlarmControlFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.fragment.AlarmControlFrag$2 -> com.homecoolink.fragment.b:
    com.homecoolink.fragment.AlarmControlFrag this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.homecoolink.fragment.AlarmRecordFrag -> com.homecoolink.fragment.AlarmRecordFrag:
    android.content.Context mContext -> b
    android.widget.ListView mListView -> c
    com.homecoolink.adapter.AlarmRecordAdapter3 mAdapter -> d
    android.widget.ImageView setread_btn -> e
    android.widget.ImageView setreaddisable -> f
    java.util.ArrayList al -> g
    com.lib.pullToRefresh.PullToRefreshListView mPullRefreshListView -> h
    boolean refreshEnd -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void NotifyChanged() -> a
    void CheckNewMess() -> b
    void initComponent(android.view.View) -> a
    java.util.ArrayList getData() -> c
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    java.util.ArrayList access$0(com.homecoolink.fragment.AlarmRecordFrag) -> a
    void access$1(com.homecoolink.fragment.AlarmRecordFrag,java.util.ArrayList) -> a
    java.util.ArrayList access$2(com.homecoolink.fragment.AlarmRecordFrag) -> b
    com.lib.pullToRefresh.PullToRefreshListView access$3(com.homecoolink.fragment.AlarmRecordFrag) -> c
    com.homecoolink.adapter.AlarmRecordAdapter3 access$4(com.homecoolink.fragment.AlarmRecordFrag) -> d
    android.content.Context access$5(com.homecoolink.fragment.AlarmRecordFrag) -> e
com.homecoolink.fragment.AlarmRecordFrag$1 -> com.homecoolink.fragment.c:
    com.homecoolink.fragment.AlarmRecordFrag this$0 -> a
    void onRefresh(com.lib.pullToRefresh.PullToRefreshBase) -> a
com.homecoolink.fragment.AlarmRecordFrag$2 -> com.homecoolink.fragment.d:
    com.homecoolink.fragment.AlarmRecordFrag this$0 -> a
    void onClick() -> a
com.homecoolink.fragment.AlarmRecordFrag$GetDataTask -> com.homecoolink.fragment.e:
    com.homecoolink.fragment.AlarmRecordFrag this$0 -> a
    java.lang.String[] doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.homecoolink.fragment.BaseFragment -> com.homecoolink.fragment.BaseFragment:
    boolean isRun -> a
    void onPause() -> onPause
    void onResume() -> onResume
    boolean getIsRun() -> q
com.homecoolink.fragment.ContactFrag -> com.homecoolink.fragment.ContactFrag:
    android.content.Context mContext -> h
    boolean isRegFilter -> i
    android.widget.ListView mListView -> j
    android.widget.ImageView mAddUser -> k
    com.homecoolink.adapter.MainAdapter mAdapter -> l
    com.lib.pullToRefresh.PullToRefreshListView mPullRefreshListView -> m
    boolean refreshEnd -> a
    boolean isFirstRefresh -> b
    boolean isActive -> c
    boolean isCancelLoading -> d
    android.widget.LinearLayout net_work_status_bar -> n
    android.widget.RelativeLayout local_device_bar_top -> o
    android.widget.TextView text_local_device_count -> p
    com.homecoolink.widget.NormalDialog dialog -> e
    com.homecoolink.data.Contact next_contact -> q
    boolean isOpenThread -> f
    android.view.LayoutInflater inf -> r
    android.os.Handler mHandler -> s
    android.content.BroadcastReceiver mReceiver -> g
    android.widget.PopupWindow popMenu -> t
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void CheckNewMess(android.view.View,java.lang.String) -> a
    void initComponent(android.view.View) -> a
    void regFilter() -> a
    void onClick(android.view.View) -> onClick
    void quickSetting(com.homecoolink.data.Contact) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onDestroyView() -> onDestroyView
    com.homecoolink.adapter.MainAdapter access$0(com.homecoolink.fragment.ContactFrag) -> a
    android.os.Handler access$1(com.homecoolink.fragment.ContactFrag) -> b
    android.widget.RelativeLayout access$2(com.homecoolink.fragment.ContactFrag) -> c
    android.widget.TextView access$3(com.homecoolink.fragment.ContactFrag) -> d
    android.content.Context access$4(com.homecoolink.fragment.ContactFrag) -> e
    android.widget.LinearLayout access$5(com.homecoolink.fragment.ContactFrag) -> f
    com.homecoolink.data.Contact access$6(com.homecoolink.fragment.ContactFrag) -> g
    com.lib.pullToRefresh.PullToRefreshListView access$7(com.homecoolink.fragment.ContactFrag) -> h
com.homecoolink.fragment.ContactFrag$1 -> com.homecoolink.fragment.f:
    com.homecoolink.fragment.ContactFrag this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.fragment.ContactFrag$2 -> com.homecoolink.fragment.g:
    com.homecoolink.fragment.ContactFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.homecoolink.fragment.ContactFrag access$0(com.homecoolink.fragment.ContactFrag$2) -> a
com.homecoolink.fragment.ContactFrag$2$1 -> com.homecoolink.fragment.h:
    com.homecoolink.fragment.ContactFrag$2 this$1 -> a
    void run() -> run
com.homecoolink.fragment.ContactFrag$3 -> com.homecoolink.fragment.i:
    com.homecoolink.fragment.ContactFrag this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.ContactFrag$4 -> com.homecoolink.fragment.j:
    com.homecoolink.fragment.ContactFrag this$0 -> a
    void onRefresh(com.lib.pullToRefresh.PullToRefreshBase) -> a
com.homecoolink.fragment.ContactFrag$5 -> com.homecoolink.fragment.k:
    com.homecoolink.fragment.ContactFrag this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.ContactFrag$6 -> com.homecoolink.fragment.l:
    com.homecoolink.fragment.ContactFrag this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.ContactFrag$7 -> com.homecoolink.fragment.m:
    com.homecoolink.fragment.ContactFrag this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.ContactFrag$8 -> com.homecoolink.fragment.n:
    com.homecoolink.fragment.ContactFrag this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.fragment.ContactFrag$GetDataTask -> com.homecoolink.fragment.o:
    com.homecoolink.fragment.ContactFrag this$0 -> a
    java.lang.String[] doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.homecoolink.fragment.DefenceAreaControlFrag -> com.homecoolink.fragment.DefenceAreaControlFrag:
    android.content.Context mContext -> ar
    com.homecoolink.data.Contact contact -> as
    boolean isRegFilter -> at
    android.view.LayoutInflater lif -> au
    android.widget.RelativeLayout change_defence_area1 -> a
    android.widget.RelativeLayout change_defence_area2 -> b
    android.widget.RelativeLayout change_defence_area3 -> c
    android.widget.RelativeLayout change_defence_area4 -> d
    android.widget.RelativeLayout change_defence_area5 -> e
    android.widget.RelativeLayout change_defence_area6 -> f
    android.widget.RelativeLayout change_defence_area7 -> g
    android.widget.RelativeLayout change_defence_area8 -> h
    android.widget.RelativeLayout change_defence_area9 -> i
    android.widget.LinearLayout defence_area_content1 -> j
    android.widget.LinearLayout defence_area_content2 -> k
    android.widget.LinearLayout defence_area_content3 -> l
    android.widget.LinearLayout defence_area_content4 -> m
    android.widget.LinearLayout defence_area_content5 -> n
    android.widget.LinearLayout defence_area_content6 -> o
    android.widget.LinearLayout defence_area_content7 -> p
    android.widget.LinearLayout defence_area_content8 -> q
    android.widget.LinearLayout defence_area_content9 -> r
    android.widget.ProgressBar progressBar_defence_area1 -> s
    android.widget.ProgressBar progressBar_defence_area2 -> t
    android.widget.ProgressBar progressBar_defence_area3 -> u
    android.widget.ProgressBar progressBar_defence_area4 -> v
    android.widget.ProgressBar progressBar_defence_area5 -> w
    android.widget.ProgressBar progressBar_defence_area6 -> x
    android.widget.ProgressBar progressBar_defence_area7 -> y
    android.widget.ProgressBar progressBar_defence_area8 -> z
    android.widget.ProgressBar progressBar_defence_area9 -> A
    com.homecoolink.widget.NormalDialog dialog_loading -> B
    android.widget.ImageView arrow1 -> C
    android.widget.ImageView arrow2 -> D
    android.widget.ImageView arrow3 -> E
    android.widget.ImageView arrow4 -> F
    android.widget.ImageView arrow5 -> G
    android.widget.ImageView arrow6 -> H
    android.widget.ImageView arrow7 -> I
    android.widget.ImageView arrow8 -> J
    android.widget.ImageView arrow9 -> K
    android.widget.ImageView fenge1 -> L
    android.widget.ImageView fenge2 -> M
    android.widget.ImageView fenge3 -> N
    android.widget.ImageView fenge4 -> O
    android.widget.ImageView fenge5 -> P
    android.widget.ImageView fenge6 -> Q
    android.widget.ImageView fenge7 -> R
    android.widget.ImageView fenge8 -> S
    android.widget.ImageView fenge9 -> T
    android.widget.ImageButton imgbtn1 -> U
    android.widget.ImageButton imgbtn2 -> V
    android.widget.ImageButton imgbtn3 -> W
    android.widget.ImageButton imgbtn4 -> X
    android.widget.ImageButton imgbtn5 -> Y
    android.widget.ImageButton imgbtn6 -> Z
    android.widget.ImageButton imgbtn7 -> aa
    android.widget.ImageButton imgbtn8 -> ab
    android.widget.ImageButton imgbtn9 -> ac
    int current_group -> ad
    int current_item -> ae
    int current_type -> af
    boolean is_one_active -> ag
    boolean is_two_active -> ah
    boolean is_three_active -> ai
    boolean is_four_active -> aj
    boolean is_five_active -> ak
    boolean is_six_active -> al
    boolean is_seven_active -> am
    boolean is_eight_active -> an
    boolean is_nine_active -> ao
    java.lang.String[][] totals -> av
    android.content.BroadcastReceiver mReceiver -> aw
    android.os.Handler mHandler -> ap
    boolean bl -> aq
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void regFilter() -> a
    void initData(java.util.ArrayList) -> a
    android.widget.TextView lightButton(int,int,java.lang.String) -> a
    void shrinkItem(int) -> a
    void expandItem(int) -> b
    void showDefence_area1() -> b
    void onClick(android.view.View) -> onClick
    void testA(android.widget.LinearLayout,java.lang.String) -> a
    void creatLightButton(java.lang.String) -> a
    java.lang.String getDefenceAreaContentCount(android.widget.LinearLayout) -> a
    void study(int,int) -> a
    void clear(int,int) -> b
    void onDestroyView() -> onDestroyView
    android.widget.RelativeLayout getBar(int) -> c
    android.widget.LinearLayout getContent(int) -> d
    boolean getIsActive(int) -> e
    void setActive(int,boolean) -> a
    void onDestroy() -> onDestroy
    android.content.Context access$0(com.homecoolink.fragment.DefenceAreaControlFrag) -> a
    com.homecoolink.data.Contact access$1(com.homecoolink.fragment.DefenceAreaControlFrag) -> b
com.homecoolink.fragment.DefenceAreaControlFrag$1 -> com.homecoolink.fragment.p:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void clearDivWithTag() -> a
com.homecoolink.fragment.DefenceAreaControlFrag$10 -> com.homecoolink.fragment.q:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    int val$group -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.DefenceAreaControlFrag$11 -> com.homecoolink.fragment.r:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    int val$group -> b
    boolean onLongClick(android.view.View) -> onLongClick
    com.homecoolink.fragment.DefenceAreaControlFrag access$0(com.homecoolink.fragment.DefenceAreaControlFrag$11) -> a
com.homecoolink.fragment.DefenceAreaControlFrag$11$1 -> com.homecoolink.fragment.s:
    com.homecoolink.fragment.DefenceAreaControlFrag$11 this$1 -> a
    int val$group -> b
    void onClick() -> a
com.homecoolink.fragment.DefenceAreaControlFrag$12 -> com.homecoolink.fragment.t:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    int val$group -> b
    int val$item -> c
    void onClick() -> a
com.homecoolink.fragment.DefenceAreaControlFrag$13 -> com.homecoolink.fragment.u:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    int val$group -> b
    int val$item -> c
    void onClick() -> a
com.homecoolink.fragment.DefenceAreaControlFrag$2 -> com.homecoolink.fragment.v:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.fragment.DefenceAreaControlFrag$3 -> com.homecoolink.fragment.w:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.DefenceAreaControlFrag$4 -> com.homecoolink.fragment.x:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    int val$i -> b
    int val$j -> c
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.DefenceAreaControlFrag$5 -> com.homecoolink.fragment.y:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    int val$i -> b
    int val$j -> c
    boolean onLongClick(android.view.View) -> onLongClick
com.homecoolink.fragment.DefenceAreaControlFrag$8 -> com.homecoolink.fragment.z:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    int val$i -> b
    void run() -> run
    com.homecoolink.fragment.DefenceAreaControlFrag access$0(com.homecoolink.fragment.DefenceAreaControlFrag$8) -> a
com.homecoolink.fragment.DefenceAreaControlFrag$8$1 -> com.homecoolink.fragment.aa:
    com.homecoolink.fragment.DefenceAreaControlFrag$8 this$1 -> a
    int val$i -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.DefenceAreaControlFrag$9 -> com.homecoolink.fragment.ab:
    com.homecoolink.fragment.DefenceAreaControlFrag this$0 -> a
    int val$i -> b
    android.widget.RelativeLayout val$item -> c
    void run() -> run
    com.homecoolink.fragment.DefenceAreaControlFrag access$0(com.homecoolink.fragment.DefenceAreaControlFrag$9) -> a
com.homecoolink.fragment.DefenceAreaControlFrag$9$1 -> com.homecoolink.fragment.ac:
    com.homecoolink.fragment.DefenceAreaControlFrag$9 this$1 -> a
    int val$i -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.FaultFragment -> com.homecoolink.fragment.FaultFragment:
    android.widget.TextView text -> a
    android.widget.TextView cleck_refresh -> b
    java.lang.String error_text -> c
    boolean isCanRefresh -> d
    boolean bl -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void setErrorText(java.lang.String) -> a
com.homecoolink.fragment.FaultFragment$1 -> com.homecoolink.fragment.ad:
    com.homecoolink.fragment.FaultFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.ImageFrag -> com.homecoolink.fragment.ImageFrag:
    android.widget.TextView myPhotoTab -> v
    android.widget.TextView myVideoTab -> w
    android.widget.LinearLayout ll_xuanxiang -> x
    android.widget.LinearLayout layout_2 -> y
    android.widget.LinearLayout layout_1 -> z
    java.io.File[] files -> a
    android.widget.GridView list -> b
    android.app.AlertDialog mDeleteDialog -> A
    com.homecoolink.adapter.ImageBrowserAdapter adapter -> c
    int screenWidth -> d
    int screenHeight -> e
    android.graphics.Bitmap mTempBitmap -> f
    int selectedItem -> g
    android.widget.ImageView mclear -> B
    android.widget.TextView deviceSpinner -> h
    android.widget.TextView dateSpinner -> i
    com.homecoolink.fragment.RecordListFragment rlFrag -> j
    com.homecoolink.fragment.LoadingFragment loadFrag -> k
    com.homecoolink.fragment.FaultFragment faultFrag -> l
    com.homecoolink.data.Contact contact -> m
    boolean receiverIsReg -> n
    android.view.LayoutInflater inf -> C
    android.widget.PopupWindow devicepopMenu -> o
    android.widget.PopupWindow datepopMenu -> p
    com.homecoolink.adapter.VideoContactAdapter va -> q
    com.homecoolink.adapter.VideoDateAdapter da -> r
    com.homecoolink.widget.NormalDialog dialog -> s
    android.content.BroadcastReceiver mReceiver -> t
    java.util.Date dtStart -> D
    java.lang.String[] vfiles -> u
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void regFilter() -> a
    void bindDev() -> d
    void disableDate() -> e
    void bindDate(java.lang.Object) -> a
    void bindDateVal() -> f
    void replaceFrag(android.support.v4.app.Fragment,java.lang.String) -> a
    void GetDev() -> g
    void SetSelectedDev(com.homecoolink.data.Contact) -> a
    void SetSelectedDate(java.lang.String) -> a
    java.lang.String[] GetDateFromRecords(java.lang.String[]) -> a
    java.util.List GetRecordsByDate(java.lang.String) -> b
    java.lang.String getLastItem() -> b
    void showPopMenu(android.widget.PopupWindow,android.view.View) -> a
    void onClick(android.view.View) -> onClick
    void createGalleryDialog(int) -> a
    void onStop() -> onStop
    void onStart() -> onStart
    void access$0(com.homecoolink.fragment.ImageFrag) -> a
    java.util.Date access$1() -> c
com.homecoolink.fragment.ImageFrag$1 -> com.homecoolink.fragment.ae:
    com.homecoolink.fragment.ImageFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.fragment.ImageFrag$2 -> com.homecoolink.fragment.af:
    com.homecoolink.fragment.ImageFrag this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.ImageFrag$3 -> com.homecoolink.fragment.ag:
    com.homecoolink.fragment.ImageFrag this$0 -> a
    void onClick() -> a
com.homecoolink.fragment.ImageFrag$4 -> com.homecoolink.fragment.ah:
    com.homecoolink.fragment.ImageFrag this$0 -> a
    boolean accept(java.io.File) -> accept
com.homecoolink.fragment.ImageFrag$5 -> com.homecoolink.fragment.ai:
    com.homecoolink.fragment.ImageFrag this$0 -> a
    android.view.View makeView() -> makeView
com.homecoolink.fragment.ImageFrag$6 -> com.homecoolink.fragment.aj:
    com.homecoolink.fragment.ImageFrag this$0 -> a
    android.widget.ImageSwitcher val$switcher -> b
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.homecoolink.fragment.ImageFrag$7 -> com.homecoolink.fragment.ak:
    com.homecoolink.fragment.ImageFrag this$0 -> a
    android.view.GestureDetector val$gd -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.homecoolink.fragment.LoadingFragment -> com.homecoolink.fragment.LoadingFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.homecoolink.fragment.MainControlFrag -> com.homecoolink.fragment.MainControlFrag:
    android.widget.RelativeLayout time_contrl -> a
    android.widget.RelativeLayout remote_control -> b
    android.widget.RelativeLayout alarm_control -> c
    android.widget.RelativeLayout video_control -> d
    android.widget.RelativeLayout record_control -> e
    android.widget.RelativeLayout security_control -> f
    android.widget.RelativeLayout net_control -> g
    android.widget.RelativeLayout defenceArea_control -> h
    android.widget.RelativeLayout chekc_device_update -> i
    android.content.Context mContext -> j
    com.homecoolink.data.Contact mContact -> k
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.fragment.NetControlFrag -> com.homecoolink.fragment.NetControlFrag:
    android.content.Context mContext -> s
    com.homecoolink.data.Contact contact -> t
    boolean isRegFilter -> u
    android.widget.RelativeLayout dialog_input_mask -> a
    android.widget.RelativeLayout net_type_bar -> b
    android.widget.RelativeLayout list_wifi_bar -> c
    android.widget.LinearLayout net_type_radio -> d
    android.widget.LinearLayout list_wifi_content -> e
    android.widget.ProgressBar progressBar_net_type -> f
    android.widget.ProgressBar progressBar_list_wifi -> g
    android.widget.RadioButton radio_one -> h
    android.widget.RadioButton radio_two -> i
    com.homecoolink.adapter.WifiAdapter mAdapter -> j
    com.homecoolink.widget.MyListView list -> k
    int last_net_type -> l
    int last_modify_net_type -> m
    int last_modify_wifi_type -> n
    java.lang.String last_modify_wifi_name -> o
    java.lang.String last_modify_wifi_password -> p
    com.homecoolink.widget.NormalDialog dialog_loading -> q
    com.homecoolink.widget.MyInputDialog dialog_input -> r
    android.content.BroadcastReceiver mReceiver -> v
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void regFilter() -> a
    void onClick(android.view.View) -> onClick
    void changeNetType(int) -> a
    void onDestroyView() -> onDestroyView
    void setRadioEnable(boolean) -> a
    void showProgress_net_type() -> b
    void showNetType() -> c
    void hideWiFiList() -> d
    void showProgressWiFiList() -> e
    void showWiFiList() -> f
    void showModfyWifi(int,java.lang.String) -> a
    boolean IsInputDialogShowing() -> g
    void onDestroy() -> onDestroy
    com.homecoolink.data.Contact access$0(com.homecoolink.fragment.NetControlFrag) -> a
    android.content.Context access$1(com.homecoolink.fragment.NetControlFrag) -> b
com.homecoolink.fragment.NetControlFrag$1 -> com.homecoolink.fragment.al:
    com.homecoolink.fragment.NetControlFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.fragment.NetControlFrag$2 -> com.homecoolink.fragment.am:
    com.homecoolink.fragment.NetControlFrag this$0 -> a
    com.homecoolink.widget.NormalDialog val$dialog -> b
    void onClick() -> a
com.homecoolink.fragment.NetControlFrag$3 -> com.homecoolink.fragment.an:
    com.homecoolink.fragment.NetControlFrag this$0 -> a
    com.homecoolink.widget.NormalDialog val$dialog -> b
    void onClick() -> a
com.homecoolink.fragment.NetControlFrag$4 -> com.homecoolink.fragment.ao:
    com.homecoolink.fragment.NetControlFrag this$0 -> a
    int val$type -> b
    void onClick() -> a
    com.homecoolink.fragment.NetControlFrag access$0(com.homecoolink.fragment.NetControlFrag$4) -> a
com.homecoolink.fragment.NetControlFrag$4$1 -> com.homecoolink.fragment.ap:
    com.homecoolink.fragment.NetControlFrag$4 this$1 -> a
    int val$type -> b
    void run() -> a
com.homecoolink.fragment.NetControlFrag$5 -> com.homecoolink.fragment.aq:
    com.homecoolink.fragment.NetControlFrag this$0 -> a
    int val$type -> b
    java.lang.String val$name -> c
    void onClick() -> a
com.homecoolink.fragment.RecordControlFrag -> com.homecoolink.fragment.RecordControlFrag:
    android.content.Context mContext -> F
    com.homecoolink.data.Contact contact -> G
    boolean isRegFilter -> H
    android.widget.RelativeLayout change_record_type -> a
    android.widget.RelativeLayout change_record_time -> b
    android.widget.RelativeLayout change_plan_time -> c
    android.widget.RelativeLayout change_plan_time_title -> d
    android.widget.LinearLayout record_type_radio -> e
    android.widget.LinearLayout record_time_radio -> f
    android.widget.LinearLayout time_picker -> g
    android.widget.ProgressBar progressBar_record_type -> h
    android.widget.ProgressBar progressBar_record_time -> i
    android.widget.ProgressBar progressBar_plan_time -> j
    android.widget.RadioButton radio_one -> k
    android.widget.RadioButton radio_two -> l
    android.widget.RadioButton radio_three -> m
    android.widget.RadioButton radio_one_time -> n
    android.widget.RadioButton radio_two_time -> o
    android.widget.RadioButton radio_three_time -> p
    android.widget.TextView time_text -> q
    com.homecoolink.wheel.widget.WheelView hour_from -> r
    com.homecoolink.wheel.widget.WheelView minute_from -> s
    com.homecoolink.wheel.widget.WheelView hour_to -> t
    com.homecoolink.wheel.widget.WheelView minute_to -> u
    java.lang.String cur_modify_plan_time -> v
    int cur_modify_record_type -> w
    int cur_modify_record_time -> x
    android.widget.RelativeLayout change_record -> y
    android.widget.ProgressBar progressBar_record -> z
    android.widget.ImageView record_img -> A
    android.widget.TextView record_text -> B
    int last_record -> C
    int last_modify_record -> D
    android.widget.SeekBar seek_alarmtime -> E
    android.content.BroadcastReceiver mReceiver -> I
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void initTimePicker(android.view.View) -> b
    void regFilter() -> a
    void updateRecord(int) -> a
    void updateRecordType(int) -> b
    void onClick(android.view.View) -> onClick
    void onDestroyView() -> onDestroyView
    void showRecordType() -> b
    void showProgress_record_type() -> c
    void showRecordTime() -> d
    void showPlanTime() -> e
    void showProgress_plan_time() -> f
    void showManual() -> g
    void hideRecordTime() -> h
    void hidePlanTime() -> i
    void hideManual() -> j
    void onDestroy() -> onDestroy
    void onStop() -> onStop
    void onResume() -> onResume
    android.content.Context access$0(com.homecoolink.fragment.RecordControlFrag) -> a
    com.homecoolink.data.Contact access$1(com.homecoolink.fragment.RecordControlFrag) -> b
com.homecoolink.fragment.RecordControlFrag$1 -> com.homecoolink.fragment.ar:
    com.homecoolink.fragment.RecordControlFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.fragment.RecordControlFrag$2 -> com.homecoolink.fragment.as:
    com.homecoolink.fragment.RecordControlFrag this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.homecoolink.fragment.RecordListFragment -> com.homecoolink.fragment.RecordListFragment:
    android.content.Context mContext -> a
    android.widget.GridView list_record -> b
    com.homecoolink.data.Contact contact -> c
    android.app.AlertDialog load_record -> d
    android.view.View load_view -> e
    android.view.LayoutInflater inflater -> f
    boolean isDialogShowing -> g
    com.homecoolink.adapter.RecordAdapter adapter -> h
    java.util.List list -> i
    boolean receiverIsReg -> j
    android.view.View thisView -> k
    android.content.BroadcastReceiver mReceiver -> l
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void regFilter() -> a
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onStop() -> onStop
    void onStart() -> onStart
    void setList(java.util.List) -> a
    void setUser(com.homecoolink.data.Contact) -> a
    void closeDialog() -> b
com.homecoolink.fragment.RecordListFragment$1 -> com.homecoolink.fragment.at:
    com.homecoolink.fragment.RecordListFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.fragment.RecordListFragment$2 -> com.homecoolink.fragment.au:
    com.homecoolink.fragment.RecordListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.homecoolink.fragment.RecordListFragment access$0(com.homecoolink.fragment.RecordListFragment$2) -> a
com.homecoolink.fragment.RecordListFragment$2$1 -> com.homecoolink.fragment.av:
    com.homecoolink.fragment.RecordListFragment$2 this$1 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.homecoolink.fragment.RecordListFragment$2$2 -> com.homecoolink.fragment.aw:
    com.homecoolink.fragment.RecordListFragment$2 this$1 -> a
    android.graphics.drawable.AnimationDrawable val$anim -> b
    boolean onPreDraw() -> onPreDraw
com.homecoolink.fragment.SecurityControlFrag -> com.homecoolink.fragment.SecurityControlFrag:
    android.content.Context mContext -> g
    com.homecoolink.data.Contact contact -> h
    boolean isRegFilter -> i
    android.widget.RelativeLayout change_password -> a
    android.widget.RelativeLayout change_super_password -> b
    android.widget.RelativeLayout automatic_upgrade -> c
    android.widget.ImageView img_automatic_upgrade -> d
    android.widget.ProgressBar progressBar_automatic_upgrade -> e
    boolean isOpenAutomaticUpgrade -> f
    android.content.BroadcastReceiver mReceiver -> j
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void regFilter() -> a
    void onClick(android.view.View) -> onClick
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void showImagview_automatic_upgrade() -> b
    void access$0(com.homecoolink.fragment.SecurityControlFrag,com.homecoolink.data.Contact) -> a
    com.homecoolink.data.Contact access$1(com.homecoolink.fragment.SecurityControlFrag) -> a
com.homecoolink.fragment.SecurityControlFrag$1 -> com.homecoolink.fragment.ax:
    com.homecoolink.fragment.SecurityControlFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.fragment.SettingFrag -> com.homecoolink.fragment.SettingFrag:
    android.content.Context mContext -> d
    android.widget.RelativeLayout mCheckUpdateTextView -> e
    android.widget.RelativeLayout mLogOut -> f
    android.widget.RelativeLayout mExit -> g
    android.widget.RelativeLayout center_about -> h
    android.widget.RelativeLayout sys_set -> i
    android.widget.RelativeLayout sys_msg -> j
    android.widget.RelativeLayout modify_pwd -> k
    android.widget.TextView mName -> l
    android.widget.TextView mPassport -> m
    com.cj.utils.AlwaysMarqueeTextView mPassPortStr -> n
    android.widget.ImageView account_set -> o
    boolean isRegFilter -> a
    android.os.Handler handler -> p
    boolean isCancelCheck -> q
    com.homecoolink.widget.NormalDialog dialog -> r
    android.widget.ImageView sysMsg_notify_img -> b
    android.content.BroadcastReceiver mReceiver -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void regFilter() -> a
    void onResume() -> onResume
    void loadAccountInfo() -> b
    void onClick(android.view.View) -> onClick
    void updateSysMsg() -> c
    void onDestroy() -> onDestroy
    com.homecoolink.widget.NormalDialog access$0(com.homecoolink.fragment.SettingFrag) -> a
    void access$1(com.homecoolink.fragment.SettingFrag,com.homecoolink.widget.NormalDialog) -> a
    boolean access$2(com.homecoolink.fragment.SettingFrag) -> b
    android.content.Context access$3(com.homecoolink.fragment.SettingFrag) -> c
    void access$4(com.homecoolink.fragment.SettingFrag,boolean) -> a
com.homecoolink.fragment.SettingFrag$1 -> com.homecoolink.fragment.ay:
    com.homecoolink.fragment.SettingFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.fragment.SettingFrag$2 -> com.homecoolink.fragment.az:
    com.homecoolink.fragment.SettingFrag this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.homecoolink.fragment.SettingFrag$MyHandler -> com.homecoolink.fragment.ba:
    com.homecoolink.fragment.SettingFrag this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.homecoolink.fragment.TimeControlFrag -> com.homecoolink.fragment.TimeControlFrag:
    android.content.Context mContext -> o
    com.homecoolink.data.Contact contact -> p
    boolean isRegFilter -> q
    com.homecoolink.wheel.widget.WheelView date_year -> a
    com.homecoolink.wheel.widget.WheelView date_month -> b
    com.homecoolink.wheel.widget.WheelView date_day -> c
    com.homecoolink.wheel.widget.WheelView date_hour -> d
    com.homecoolink.wheel.widget.WheelView date_minute -> e
    com.homecoolink.wheel.widget.WheelView w_urban -> f
    android.widget.RelativeLayout setting_time -> g
    android.widget.RelativeLayout setting_urban_title -> h
    android.widget.TextView time_text -> i
    android.widget.ProgressBar progressBar -> j
    java.lang.String cur_modify_time -> k
    int current_urban -> l
    android.widget.Button bt_set_timezone -> m
    boolean wheelScrolled -> r
    com.homecoolink.wheel.widget.OnWheelScrollListener scrolledListener -> n
    android.content.BroadcastReceiver mReceiver -> s
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void updateStatus() -> a
    void regFilter() -> b
    void onClick(android.view.View) -> onClick
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void access$0(com.homecoolink.fragment.TimeControlFrag,boolean) -> a
    android.content.Context access$1(com.homecoolink.fragment.TimeControlFrag) -> a
    com.homecoolink.data.Contact access$2(com.homecoolink.fragment.TimeControlFrag) -> b
com.homecoolink.fragment.TimeControlFrag$1 -> com.homecoolink.fragment.bb:
    com.homecoolink.fragment.TimeControlFrag this$0 -> a
    void onScrollingStarted(com.homecoolink.wheel.widget.WheelView) -> a
    void onScrollingFinished(com.homecoolink.wheel.widget.WheelView) -> b
com.homecoolink.fragment.TimeControlFrag$2 -> com.homecoolink.fragment.bc:
    com.homecoolink.fragment.TimeControlFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.fragment.TimeControlFrag$3 -> com.homecoolink.fragment.bd:
    com.homecoolink.fragment.TimeControlFrag this$0 -> a
    void run() -> a
com.homecoolink.fragment.VideoControlFrag -> com.homecoolink.fragment.VideoControlFrag:
    android.content.Context mContext -> q
    com.homecoolink.data.Contact contact -> r
    boolean isRegFilter -> s
    android.widget.RelativeLayout change_video_format -> a
    android.widget.RelativeLayout change_volume -> b
    android.widget.RelativeLayout video_voleme_seek -> c
    android.widget.RelativeLayout layout_reverse -> d
    android.widget.LinearLayout video_format_radio -> e
    android.widget.ProgressBar progressBar_video_format -> f
    android.widget.ProgressBar progressBar_volume -> g
    android.widget.RadioButton radio_one -> h
    android.widget.RadioButton radio_two -> i
    android.widget.SeekBar seek_volume -> j
    int cur_modify_video_format -> k
    int cur_modify_video_volume -> l
    android.widget.RelativeLayout change_image_reverse -> m
    android.widget.ImageView img_image_reverse -> n
    android.widget.ProgressBar progressbar_image_reverse -> o
    boolean isOpenReverse -> p
    android.content.BroadcastReceiver mReceiver -> t
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initComponent(android.view.View) -> a
    void regFilter() -> a
    void onClick(android.view.View) -> onClick
    void onDestroyView() -> onDestroyView
    void switchVideoVolume(int) -> a
    void switchVideoFormat(int) -> b
    void showProgress_image_reverse() -> b
    void showImageview_image_reverse() -> c
    void showVideoFormat() -> d
    void showProgress_video_format() -> e
    void showVideoVolume() -> f
    void showProgress_volume() -> g
    void onDestroy() -> onDestroy
    android.content.Context access$0(com.homecoolink.fragment.VideoControlFrag) -> a
    com.homecoolink.data.Contact access$1(com.homecoolink.fragment.VideoControlFrag) -> b
com.homecoolink.fragment.VideoControlFrag$1 -> com.homecoolink.fragment.be:
    com.homecoolink.fragment.VideoControlFrag this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.fragment.VideoControlFrag$2 -> com.homecoolink.fragment.bf:
    com.homecoolink.fragment.VideoControlFrag this$0 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.homecoolink.fragment.VideoControlFrag$3 -> com.homecoolink.fragment.bg:
    com.homecoolink.fragment.VideoControlFrag this$0 -> a
    int val$toggle -> b
    void run() -> a
com.homecoolink.fragment.VideoControlFrag$4 -> com.homecoolink.fragment.bh:
    com.homecoolink.fragment.VideoControlFrag this$0 -> a
    int val$toggle -> b
    void run() -> a
com.homecoolink.global.AccountPersist -> com.homecoolink.global.a:
    com.homecoolink.global.AccountPersist manager -> a
    java.lang.String mACCOUNTPWD -> b
    com.homecoolink.global.AccountPersist getInstance() -> a
    void setActiveAccount(android.content.Context,com.homecoolink.entity.Account) -> a
    com.homecoolink.entity.Account getActiveAccountInfo(android.content.Context) -> a
com.homecoolink.global.AutoStartReceiver -> com.homecoolink.global.AutoStartReceiver:
    android.content.Context mContext -> a
    boolean isMainActivityStart -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.homecoolink.global.FList -> com.homecoolink.global.b:
    com.homecoolink.global.FList manager -> a
    java.util.List lists -> b
    java.util.HashMap maps -> c
    java.util.List localdevices -> d
    java.util.List tempLocalDevices -> e
    android.os.Handler mHandler -> f
    com.homecoolink.global.FList getInstance() -> a
    java.util.List list() -> b
    com.homecoolink.data.Contact get(int) -> a
    void setType(java.lang.String,int) -> a
    void setState(java.lang.String,int) -> b
    void setDefenceState(java.lang.String,int) -> c
    void setIsClickGetDefenceState(java.lang.String,boolean) -> a
    int size() -> c
    void sort() -> d
    void delete(com.homecoolink.data.Contact,int,android.os.Handler) -> a
    void insert(com.homecoolink.data.Contact) -> a
    void update(com.homecoolink.data.Contact) -> b
    com.homecoolink.data.Contact isContact(java.lang.String) -> a
    void updateOnlineState() -> e
    void getDefenceState() -> f
    void searchLocalDevice() -> g
    void updateLocalDeviceWithLocalFriends() -> h
    java.util.List getLocalDevices() -> i
    java.util.List getUnsetPasswordLocalDevices() -> j
    java.util.List getSetPasswordLocalDevices() -> k
    com.homecoolink.entity.LocalDevice isContactUnSetPassword(java.lang.String) -> b
    void updateLocalDeviceFlag(java.lang.String,int) -> d
    java.util.List access$0() -> l
    java.util.List access$1() -> m
    java.util.List access$2() -> n
com.homecoolink.global.FList$1 -> com.homecoolink.global.c:
    com.homecoolink.global.FList this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.homecoolink.global.FList$2 -> com.homecoolink.global.d:
    com.homecoolink.global.FList this$0 -> a
    void run() -> run
com.homecoolink.global.MainService -> com.homecoolink.global.MainService:
    android.content.Context context -> a
    java.util.ArrayList tempremotelist -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
com.homecoolink.global.MyApp -> com.homecoolink.global.MyApp:
    com.homecoolink.global.MyApp app -> a
    boolean isActive -> b
    android.app.NotificationManager mNotificationManager -> h
    android.app.Notification mNotification -> i
    android.widget.RemoteViews cur_down_view -> j
    java.lang.String GACID -> c
    java.lang.String GACPWD -> d
    android.content.Context context -> e
    java.util.ArrayList tempremotelist -> f
    int RecordControlType -> g
    int ntifindex -> k
    void onCreate() -> onCreate
    void GetRemote(java.lang.String,java.lang.String) -> a
    void ReGetRemote() -> a
    android.app.NotificationManager getNotificationManager() -> b
    void showNotification() -> c
    void hideNotification() -> d
    void showDownNotification(int,int) -> a
    void hideDownNotification() -> e
    void showAlarmNotification(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void hideAlarmNotification() -> f
com.homecoolink.global.MyApp$1 -> com.homecoolink.global.e:
    void run() -> run
com.homecoolink.global.NpcCommon -> com.homecoolink.global.f:
    java.lang.Boolean mIsNetWorkAvailable -> c
    com.homecoolink.global.NpcCommon$NETWORK_TYPE mNetWorkType -> a
    java.lang.String mThreeNum -> b
    void setNetWorkState(boolean) -> a
    boolean verifyNetwork(android.content.Context) -> a
com.homecoolink.global.NpcCommon$NETWORK_TYPE -> com.homecoolink.global.g:
    com.homecoolink.global.NpcCommon$NETWORK_TYPE NETWORK_2GOR3G -> a
    com.homecoolink.global.NpcCommon$NETWORK_TYPE NETWORK_WIFI -> b
    com.homecoolink.global.NpcCommon$NETWORK_TYPE[] ENUM$VALUES -> c
    com.homecoolink.global.NpcCommon$NETWORK_TYPE[] values() -> values
    com.homecoolink.global.NpcCommon$NETWORK_TYPE valueOf(java.lang.String) -> valueOf
com.homecoolink.thread.DelayThread -> com.homecoolink.c.a:
    int delayTime -> a
    com.homecoolink.thread.DelayThread$OnRunListener onRunListener -> b
    void run() -> run
com.homecoolink.thread.DelayThread$OnRunListener -> com.homecoolink.c.b:
    void run() -> a
com.homecoolink.thread.MainThread -> com.homecoolink.c.c:
    com.homecoolink.thread.MainThread manager -> a
    boolean isRun -> b
    com.homecoolink.thread.MainThread$Main main -> d
    android.content.Context context -> c
    boolean isOpenThread -> e
    com.homecoolink.thread.MainThread getInstance() -> a
    void go() -> b
    void kill() -> c
    void setOpenThread(boolean) -> a
    void checkUpdate() -> d
    boolean access$0() -> e
com.homecoolink.thread.MainThread$Main -> com.homecoolink.c.d:
    com.homecoolink.thread.MainThread this$0 -> a
    void run() -> run
com.homecoolink.thread.UpdateCheckVersionThread -> com.homecoolink.c.e:
    boolean isNeedUpdate -> a
    android.os.Handler handler -> b
    void run() -> run
com.homecoolink.utils.CrashHandler -> com.homecoolink.d.a:
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> a
    com.homecoolink.utils.CrashHandler INSTANCE -> b
    android.content.Context mContext -> c
    java.util.Map infos -> d
    java.text.DateFormat formatter -> e
    com.homecoolink.utils.CrashHandler getInstance() -> a
    void init(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void collectDeviceInfo(android.content.Context) -> b
    java.lang.String saveCrashInfo2File(java.lang.Throwable) -> b
com.homecoolink.utils.CrashHandler$1 -> com.homecoolink.d.b:
    com.homecoolink.utils.CrashHandler this$0 -> a
    void run() -> run
com.homecoolink.utils.EncodingHandler -> com.homecoolink.d.c:
    android.graphics.Bitmap createQRCode(java.lang.String,int) -> a
com.homecoolink.utils.HashList -> com.homecoolink.d.d:
    java.util.List keyArr -> a
    java.util.HashMap map -> b
    com.homecoolink.utils.KeySort keySort -> c
    java.lang.Object getKey(java.lang.Object) -> a
    void sortKeyComparator(java.util.Comparator) -> a
    java.lang.Object getKeyIndex(int) -> a
    java.util.List getValueListIndex(int) -> b
    java.lang.Object getValueIndex(int,int) -> a
    int size() -> a
    boolean add(java.lang.Object) -> b
    int indexOfKey(java.lang.Object) -> c
com.homecoolink.utils.ImageUtils -> com.homecoolink.d.e:
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> a
    int getScale(android.graphics.Point,int,int) -> a
    android.graphics.Point getSize(java.lang.String) -> a
    android.graphics.Bitmap getBitmap(java.lang.String,int,int) -> a
    android.graphics.Bitmap getBitmap(java.io.File,int,int) -> a
    java.lang.String getAbsPath(android.content.Context,android.net.Uri) -> a
    void saveImg(android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
com.homecoolink.utils.KeySort -> com.homecoolink.d.f:
    java.lang.Object getKey(java.lang.Object) -> a
com.homecoolink.utils.LanguageComparator_CN -> com.homecoolink.d.g:
    int compare(java.lang.String,java.lang.String) -> a
    java.lang.String pinyin(char) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.homecoolink.utils.MusicManger -> com.homecoolink.d.h:
    com.homecoolink.utils.MusicManger manager -> a
    android.media.MediaPlayer player -> b
    android.os.Vibrator vibrator -> c
    boolean isVibrate -> d
    com.homecoolink.utils.MusicManger getInstance() -> a
    void playCommingMusic() -> b
    void playAlarmMusic() -> c
    void playMsgMusic() -> d
    void stop() -> e
    void Vibrate() -> f
    void stopVibrate() -> g
    void access$0(com.homecoolink.utils.MusicManger,boolean) -> a
    boolean access$1(com.homecoolink.utils.MusicManger) -> a
    android.os.Vibrator access$2(com.homecoolink.utils.MusicManger) -> b
    void access$3(com.homecoolink.utils.MusicManger,android.os.Vibrator) -> a
com.homecoolink.utils.MusicManger$1 -> com.homecoolink.d.i:
    com.homecoolink.utils.MusicManger this$0 -> a
    android.media.MediaPlayer val$msgPlayer -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.homecoolink.utils.MusicManger$2 -> com.homecoolink.d.j:
    com.homecoolink.utils.MusicManger this$0 -> a
    void run() -> run
com.homecoolink.utils.PhoneWatcher -> com.homecoolink.d.k:
    android.content.Context mContext -> a
    com.homecoolink.utils.PhoneWatcher$OnCommingCallListener onCommingCallListener -> b
    void startWatcher() -> a
    void stopWatcher() -> b
    void setOnCommingCallListener(com.homecoolink.utils.PhoneWatcher$OnCommingCallListener) -> a
com.homecoolink.utils.PhoneWatcher$OnCommingCallListener -> com.homecoolink.d.l:
    void onCommingCall() -> a
com.homecoolink.utils.PhoneWatcher$PhoneListener -> com.homecoolink.d.m:
    com.homecoolink.utils.PhoneWatcher this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.homecoolink.utils.PinYinSort -> com.homecoolink.d.n:
    com.homecoolink.utils.HashList hashList -> a
    java.lang.String getFirstChar(java.lang.String) -> a
    com.homecoolink.utils.HashList getHashList() -> a
com.homecoolink.utils.PinYinSort$1 -> com.homecoolink.d.o:
    com.homecoolink.utils.PinYinSort this$0 -> a
    java.lang.String getKey(java.lang.String) -> a
    java.lang.Object getKey(java.lang.Object) -> a
com.homecoolink.utils.T -> com.homecoolink.d.p:
    android.widget.Toast toast -> a
    void showShort(android.content.Context,java.lang.CharSequence) -> a
    void showShort(android.content.Context,int) -> a
    void showLong(android.content.Context,java.lang.CharSequence) -> b
com.homecoolink.utils.UDPHelper -> com.homecoolink.d.q:
    java.lang.Boolean IsThreadDisable -> a
    int port -> b
    java.net.InetAddress mInetAddress -> c
    android.os.Handler mHandler -> d
    java.net.DatagramSocket datagramSocket -> e
    void setCallBack(android.os.Handler) -> a
    void StartListen() -> a
    int bytesToInt(byte[],int) -> a
    void StopListen() -> b
com.homecoolink.utils.UDPHelper$1 -> com.homecoolink.d.r:
    com.homecoolink.utils.UDPHelper this$0 -> a
    void run() -> run
com.homecoolink.utils.Utils -> com.homecoolink.d.s:
    boolean hasDigit(java.lang.String) -> a
    java.lang.String getDefenceAreaByGroup(android.content.Context,int) -> a
    java.lang.String getResString(android.content.Context,int) -> b
    boolean isZh(android.content.Context) -> a
    void showPromptDialog(android.content.Context,int,int) -> a
    void sleepThread(long) -> a
    java.lang.String[] getDeleteAlarmIdArray(java.lang.String[],int) -> a
    java.lang.String convertDeviceTime(int,int,int,int,int) -> a
    java.lang.String convertPlanTime(int,int,int,int) -> a
    boolean isNumeric(java.lang.String) -> b
    void deleteFile(java.io.File) -> a
    int dip2px(android.content.Context,int) -> c
com.homecoolink.wheel.widget.AbstractWheelAdapter -> com.homecoolink.wheel.widget.a:
    java.util.List datasetObservers -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
com.homecoolink.wheel.widget.ItemsRange -> com.homecoolink.wheel.widget.b:
    int first -> a
    int count -> b
    int getFirst() -> a
    int getLast() -> b
    int getCount() -> c
    boolean contains(int) -> a
com.homecoolink.wheel.widget.OnWheelChangedListener -> com.homecoolink.wheel.widget.c:
    void onChanged(com.homecoolink.wheel.widget.WheelView,int,int) -> a
com.homecoolink.wheel.widget.OnWheelClickedListener -> com.homecoolink.wheel.widget.d:
    void onItemClicked(com.homecoolink.wheel.widget.WheelView,int) -> a
com.homecoolink.wheel.widget.OnWheelScrollListener -> com.homecoolink.wheel.widget.e:
    void onScrollingStarted(com.homecoolink.wheel.widget.WheelView) -> a
    void onScrollingFinished(com.homecoolink.wheel.widget.WheelView) -> b
com.homecoolink.wheel.widget.WheelRecycle -> com.homecoolink.wheel.widget.f:
    java.util.List items -> a
    java.util.List emptyItems -> b
    com.homecoolink.wheel.widget.WheelView wheel -> c
    int recycleItems(android.widget.LinearLayout,int,com.homecoolink.wheel.widget.ItemsRange) -> a
    android.view.View getItem() -> a
    android.view.View getEmptyItem() -> b
    void clearAll() -> c
    java.util.List addView(android.view.View,java.util.List) -> a
    void recycleView(android.view.View,int) -> a
    android.view.View getCachedView(java.util.List) -> a
com.homecoolink.wheel.widget.WheelScroller -> com.homecoolink.wheel.widget.g:
    com.homecoolink.wheel.widget.WheelScroller$ScrollingListener listener -> a
    android.content.Context context -> b
    android.view.GestureDetector gestureDetector -> c
    android.widget.Scroller scroller -> d
    int lastScrollY -> e
    float lastTouchedY -> f
    boolean isScrollingPerformed -> g
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> h
    int MESSAGE_SCROLL -> i
    int MESSAGE_JUSTIFY -> j
    android.os.Handler animationHandler -> k
    void scroll(int,int) -> a
    void stopScrolling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setNextMessage(int) -> a
    void clearMessages() -> c
    void justify() -> d
    void startScrolling() -> e
    void finishScrolling() -> b
    void access$0(com.homecoolink.wheel.widget.WheelScroller,int) -> a
    android.widget.Scroller access$1(com.homecoolink.wheel.widget.WheelScroller) -> a
    int access$2(com.homecoolink.wheel.widget.WheelScroller) -> b
    void access$3(com.homecoolink.wheel.widget.WheelScroller,int) -> b
    com.homecoolink.wheel.widget.WheelScroller$ScrollingListener access$4(com.homecoolink.wheel.widget.WheelScroller) -> c
    android.os.Handler access$5(com.homecoolink.wheel.widget.WheelScroller) -> d
    void access$6(com.homecoolink.wheel.widget.WheelScroller) -> e
com.homecoolink.wheel.widget.WheelScroller$1 -> com.homecoolink.wheel.widget.h:
    com.homecoolink.wheel.widget.WheelScroller this$0 -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.homecoolink.wheel.widget.WheelScroller$2 -> com.homecoolink.wheel.widget.i:
    com.homecoolink.wheel.widget.WheelScroller this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.homecoolink.wheel.widget.WheelScroller$ScrollingListener -> com.homecoolink.wheel.widget.j:
    void onScroll(int) -> a
    void onStarted() -> a
    void onFinished() -> b
    void onJustify() -> c
com.homecoolink.wheel.widget.WheelView -> com.homecoolink.wheel.widget.WheelView:
    int[] SHADOWS_COLORS -> c
    int currentItem -> d
    int visibleItems -> e
    int itemHeight -> f
    android.graphics.drawable.Drawable centerDrawable -> g
    android.graphics.drawable.GradientDrawable topShadow -> h
    android.graphics.drawable.GradientDrawable bottomShadow -> i
    com.homecoolink.wheel.widget.WheelScroller scroller -> j
    boolean isScrollingPerformed -> k
    int scrollingOffset -> l
    boolean isCyclic -> a
    android.widget.LinearLayout itemsLayout -> m
    int firstItem -> n
    com.homecoolink.wheel.widget.WheelViewAdapter viewAdapter -> o
    com.homecoolink.wheel.widget.WheelRecycle recycle -> p
    java.util.List changingListeners -> q
    java.util.List scrollingListeners -> r
    java.util.List clickingListeners -> s
    com.homecoolink.wheel.widget.WheelScroller$ScrollingListener scrollingListener -> b
    android.database.DataSetObserver dataObserver -> t
    void initData(android.content.Context) -> a
    com.homecoolink.wheel.widget.WheelViewAdapter getViewAdapter() -> a
    void setViewAdapter(com.homecoolink.wheel.widget.WheelViewAdapter) -> a
    void notifyChangingListeners(int,int) -> a
    void addScrollingListener(com.homecoolink.wheel.widget.OnWheelScrollListener) -> a
    void notifyScrollingListenersAboutStart() -> b
    void notifyScrollingListenersAboutEnd() -> c
    void notifyClickListenersAboutClick(int) -> a
    int getCurrentItem() -> d
    void setCurrentItem(int,boolean) -> a
    void setCurrentItem(int) -> b
    boolean isCyclic() -> e
    void setCyclic(boolean) -> a
    void invalidateWheel(boolean) -> b
    void initResourcesIfNecessary() -> f
    int getDesiredHeight(android.widget.LinearLayout) -> a
    int getItemHeight() -> g
    int calculateLayoutWidth(int,int) -> c
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,int) -> d
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawShadows(android.graphics.Canvas) -> a
    void drawItems(android.graphics.Canvas) -> b
    void drawCenterRect(android.graphics.Canvas) -> c
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doScroll(int) -> c
    void scroll(int,int) -> b
    com.homecoolink.wheel.widget.ItemsRange getItemsRange() -> h
    boolean rebuildItems() -> i
    void updateView() -> j
    void createItemsLayout() -> k
    void buildViewForMeasuring() -> l
    boolean addViewItem(int,boolean) -> b
    boolean isValidItemIndex(int) -> d
    android.view.View getItemView(int) -> e
    void access$0(com.homecoolink.wheel.widget.WheelView,boolean) -> a
    void access$1(com.homecoolink.wheel.widget.WheelView,int) -> a
    int access$2(com.homecoolink.wheel.widget.WheelView) -> a
    void access$3(com.homecoolink.wheel.widget.WheelView,int) -> b
    com.homecoolink.wheel.widget.WheelScroller access$4(com.homecoolink.wheel.widget.WheelView) -> b
    boolean access$5(com.homecoolink.wheel.widget.WheelView) -> c
com.homecoolink.wheel.widget.WheelView$1 -> com.homecoolink.wheel.widget.k:
    com.homecoolink.wheel.widget.WheelView this$0 -> a
    void onStarted() -> a
    void onScroll(int) -> a
    void onFinished() -> b
    void onJustify() -> c
com.homecoolink.wheel.widget.WheelView$2 -> com.homecoolink.wheel.widget.l:
    com.homecoolink.wheel.widget.WheelView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.homecoolink.wheel.widget.WheelViewAdapter -> com.homecoolink.wheel.widget.m:
    int getItemsCount() -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
com.homecoolink.widget.AlarmHeaderView -> com.homecoolink.widget.AlarmHeaderView:
com.homecoolink.widget.BounceScrollView -> com.homecoolink.widget.BounceScrollView:
    android.view.View inner -> a
    float y -> b
    android.graphics.Rect normal -> c
    boolean isCount -> d
    void onFinishInflate() -> onFinishInflate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void commOnTouchEvent(android.view.MotionEvent) -> a
    void animation() -> a
    boolean isNeedAnimation() -> b
    boolean isNeedMove() -> c
com.homecoolink.widget.HeaderView -> com.homecoolink.widget.HeaderView:
    android.graphics.Bitmap tempBitmap -> a
    void updateImage(java.lang.String,boolean) -> a
com.homecoolink.widget.MyImageView -> com.homecoolink.widget.MyImageView:
    java.lang.String mPath -> a
    android.graphics.Bitmap mBitmap -> b
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void setImageFilePath(java.lang.String) -> a
com.homecoolink.widget.MyInputDialog -> com.homecoolink.widget.a:
    com.homecoolink.widget.MyInputDialog$OnButtonOkListener onButtonOkListener -> g
    com.homecoolink.widget.MyInputDialog$OnButtonCancelListener onButtonCancelListener -> h
    java.lang.String title_str -> a
    java.lang.String btn1_str -> b
    java.lang.String btn2_str -> c
    boolean isShow -> d
    android.content.Context context -> e
    android.widget.EditText input1 -> f
    void show(android.view.View) -> a
    void setOnButtonOkListener(com.homecoolink.widget.MyInputDialog$OnButtonOkListener) -> a
    void setTitle(java.lang.String) -> a
    void setBtn1_str(java.lang.String) -> b
    void setBtn2_str(java.lang.String) -> c
    void showDialog(android.view.View) -> c
    void hideDialog(android.view.View) -> d
    void setInput1HintText(int) -> a
    java.lang.String getInput1Text() -> a
    void hide(android.view.View) -> b
    boolean isShowing() -> b
    com.homecoolink.widget.MyInputDialog$OnButtonOkListener access$0(com.homecoolink.widget.MyInputDialog) -> a
    void access$1(com.homecoolink.widget.MyInputDialog,android.view.View) -> a
    com.homecoolink.widget.MyInputDialog$OnButtonCancelListener access$2(com.homecoolink.widget.MyInputDialog) -> b
com.homecoolink.widget.MyInputDialog$1 -> com.homecoolink.widget.b:
    com.homecoolink.widget.MyInputDialog this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.homecoolink.widget.MyInputDialog$2 -> com.homecoolink.widget.c:
    com.homecoolink.widget.MyInputDialog this$0 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.MyInputDialog$3 -> com.homecoolink.widget.d:
    com.homecoolink.widget.MyInputDialog this$0 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.MyInputDialog$4 -> com.homecoolink.widget.e:
    com.homecoolink.widget.MyInputDialog this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.homecoolink.widget.MyInputDialog$5 -> com.homecoolink.widget.f:
    com.homecoolink.widget.MyInputDialog this$0 -> a
    android.widget.LinearLayout val$dialog -> b
    android.view.View val$v -> c
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.homecoolink.widget.MyInputDialog$OnButtonCancelListener -> com.homecoolink.widget.g:
    void onClick() -> a
com.homecoolink.widget.MyInputDialog$OnButtonOkListener -> com.homecoolink.widget.h:
    void onClick() -> a
com.homecoolink.widget.MyListView -> com.homecoolink.widget.MyListView:
    void onMeasure(int,int) -> onMeasure
com.homecoolink.widget.MyTextView -> com.homecoolink.widget.MyTextView:
    void onDraw(android.graphics.Canvas) -> onDraw
com.homecoolink.widget.NormalDialog -> com.homecoolink.widget.i:
    android.content.Context context -> a
    java.lang.String[] list_data -> b
    java.lang.String title_str -> c
    java.lang.String content_str -> d
    java.lang.String btn1_str -> e
    java.lang.String btn2_str -> f
    java.lang.String itemname_str -> g
    android.app.AlertDialog dialog -> h
    android.view.View rootView -> i
    com.homecoolink.widget.NormalDialog$OnButtonOkListener onButtonOkListener -> j
    com.homecoolink.widget.NormalDialog$OnButtonCancelListener onButtonCancelListener -> k
    android.content.DialogInterface$OnCancelListener onCancelListener -> l
    int style -> m
    void showDialog() -> a
    void showConnectFail() -> b
    void showReNameDialog(android.view.View) -> a
    void showLoadingDialog() -> c
    void showAboutDialog() -> d
    void showDeviceInfoDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void showLoadingDialog2() -> e
    void showNormalDialog() -> f
    void showPromptDialog() -> g
    void showQRcodehelp() -> h
    void faildDialog() -> i
    void setTitle(java.lang.String) -> a
    void setTitle(int) -> a
    void setCanceledOnTouchOutside(boolean) -> a
    void setCancelable(boolean) -> b
    void dismiss() -> j
    boolean isShowing() -> k
    void setStyle(int) -> b
    void setOnButtonOkListener(com.homecoolink.widget.NormalDialog$OnButtonOkListener) -> a
    void setOnButtonCancelListener(com.homecoolink.widget.NormalDialog$OnButtonCancelListener) -> a
    void setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> a
    com.homecoolink.widget.NormalDialog$OnButtonCancelListener access$0(com.homecoolink.widget.NormalDialog) -> a
    com.homecoolink.widget.NormalDialog$OnButtonOkListener access$1(com.homecoolink.widget.NormalDialog) -> b
com.homecoolink.widget.NormalDialog$1 -> com.homecoolink.widget.j:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$10 -> com.homecoolink.widget.k:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$11 -> com.homecoolink.widget.l:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$18 -> com.homecoolink.widget.m:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$2 -> com.homecoolink.widget.n:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$20 -> com.homecoolink.widget.o:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$21 -> com.homecoolink.widget.p:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$3 -> com.homecoolink.widget.q:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$4 -> com.homecoolink.widget.r:
    com.homecoolink.widget.NormalDialog this$0 -> a
    android.widget.EditText val$rename -> b
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.homecoolink.widget.NormalDialog$5 -> com.homecoolink.widget.s:
    com.homecoolink.widget.NormalDialog this$0 -> a
    android.widget.EditText val$rename -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$6 -> com.homecoolink.widget.t:
    com.homecoolink.widget.NormalDialog this$0 -> a
    android.widget.EditText val$rename -> b
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$7 -> com.homecoolink.widget.u:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$8 -> com.homecoolink.widget.v:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$9 -> com.homecoolink.widget.w:
    com.homecoolink.widget.NormalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.homecoolink.widget.NormalDialog$OnButtonCancelListener -> com.homecoolink.widget.x:
    void onClick() -> a
com.homecoolink.widget.NormalDialog$OnButtonOkListener -> com.homecoolink.widget.y:
    void onClick() -> a
com.homecoolink.widget.RotateLayout -> com.homecoolink.widget.RotateLayout:
    android.graphics.Matrix mForward -> a
    android.graphics.Matrix mReverse -> b
    float[] mTemp -> c
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
com.homecoolink.widget.SortBar -> com.homecoolink.widget.SortBar:
    java.lang.String[] assort -> a
    android.graphics.Paint paint -> b
    int selectIndex -> c
    com.homecoolink.widget.SortBar$OnTouchSortListener onTouchSortListener -> d
    void setOnTouchSortListener(com.homecoolink.widget.SortBar$OnTouchSortListener) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.homecoolink.widget.SortBar$OnTouchSortListener -> com.homecoolink.widget.z:
    void onTouchAssortListener(java.lang.String) -> a
    void onTouchAssortUP() -> a
com.homecoolink.widget.XRTextView -> com.homecoolink.widget.XRTextView:
    java.lang.String namespace -> a
    java.lang.String text -> b
    float textSize -> c
    float paddingLeft -> d
    float paddingRight -> e
    float marginLeft -> f
    float marginRight -> g
    int textColor -> h
    org.json.JSONArray colorIndex -> i
    android.graphics.Paint paint1 -> j
    android.graphics.Paint paintColor -> k
    float textShowWidth -> l
    float Spacing -> m
    float LineSpacing -> n
    boolean isColor(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.lib.addBar.AddBar -> com.lib.addBar.AddBar:
    int item_count -> k
    java.util.ArrayList items -> a
    android.content.Context mContext -> b
    android.widget.LinearLayout parent -> c
    android.widget.RelativeLayout$LayoutParams parent_params -> d
    com.lib.addBar.OnItemChangeListener onItemChangeListener -> e
    com.lib.addBar.OnLeftIconClickListener onLeftIconClickListener -> f
    com.lib.addBar.OnItemClickListener onItemClickListener -> g
    int max_count -> h
    boolean isVisiableArrow -> i
    android.os.Handler handler -> j
    void addItem(java.lang.String) -> a
    void changeParent(int,int) -> a
    void removeItem(int) -> a
    void removeAll() -> a
    void UpdateItemListener() -> b
    void setOnItemChangeListener(com.lib.addBar.OnItemChangeListener) -> a
    void setOnLeftIconClickListener(com.lib.addBar.OnLeftIconClickListener) -> a
    void setMax_count(int) -> b
    void setArrowVisiable(boolean) -> a
com.lib.addBar.AddBar$1 -> com.lib.addBar.a:
    com.lib.addBar.AddBar this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.lib.addBar.AddBar$2 -> com.lib.addBar.b:
    com.lib.addBar.AddBar this$0 -> a
    int val$count -> b
    int val$remainder -> c
    void run() -> run
com.lib.addBar.AddBar$3 -> com.lib.addBar.c:
    com.lib.addBar.AddBar this$0 -> a
    android.widget.RelativeLayout val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.lib.addBar.AddBar$4 -> com.lib.addBar.d:
    com.lib.addBar.AddBar this$0 -> a
    android.widget.ImageView val$left_icon -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.lib.addBar.OnItemChangeListener -> com.lib.addBar.e:
    void onChange(int) -> a
com.lib.addBar.OnItemClickListener -> com.lib.addBar.f:
    void onClick(android.view.View,int) -> a
com.lib.addBar.OnLeftIconClickListener -> com.lib.addBar.g:
    void onClick(android.view.View,int) -> a
com.lib.pullToRefresh.EmptyViewMethodAccessor -> com.lib.pullToRefresh.a:
    void setEmptyViewInternal(android.view.View) -> a
com.lib.pullToRefresh.FlipLoadingLayout -> com.lib.pullToRefresh.b:
    android.view.animation.Animation mRotateAnimation -> f
    android.view.animation.Animation mResetRotateAnimation -> g
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode -> h
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    int getDefaultDrawableResId() -> e
    float getDrawableRotationAngle() -> p
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode() -> f
com.lib.pullToRefresh.ILoadingLayout -> com.lib.pullToRefresh.c:
    void setLastUpdatedLabel(java.lang.CharSequence) -> a
com.lib.pullToRefresh.IndicatorLayout -> com.lib.pullToRefresh.d:
    android.view.animation.Animation mInAnim -> a
    android.view.animation.Animation mOutAnim -> b
    android.widget.ImageView mArrowImageView -> c
    android.view.animation.Animation mRotateAnimation -> d
    android.view.animation.Animation mResetRotateAnimation -> e
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode -> f
    boolean isVisible() -> a
    void hide() -> b
    void show() -> c
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void releaseToRefresh() -> d
    void pullToRefresh() -> e
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode() -> f
com.lib.pullToRefresh.LoadingLayout -> com.lib.pullToRefresh.e:
    android.view.animation.Interpolator ANIMATION_INTERPOLATOR -> a
    android.widget.FrameLayout mInnerLayout -> f
    android.widget.ImageView mHeaderImage -> b
    android.widget.ProgressBar mHeaderProgress -> c
    boolean mUseIntrinsicAnimation -> g
    android.widget.TextView mHeaderText -> h
    android.widget.TextView mSubHeaderText -> i
    com.lib.pullToRefresh.PullToRefreshBase$Mode mMode -> d
    com.lib.pullToRefresh.PullToRefreshBase$Orientation mScrollDirection -> e
    java.lang.CharSequence mPullLabel -> j
    java.lang.CharSequence mRefreshingLabel -> k
    java.lang.CharSequence mReleaseLabel -> l
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Orientation -> m
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode -> n
    void setHeight(int) -> a
    void setWidth(int) -> b
    int getContentSize() -> g
    void hideAllViews() -> h
    void onPull(float) -> b
    void pullToRefresh() -> i
    void refreshing() -> j
    void releaseToRefresh() -> k
    void reset() -> l
    void setLastUpdatedLabel(java.lang.CharSequence) -> a
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> b
    void showInvisibleViews() -> m
    int getDefaultDrawableResId() -> e
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    void setSubHeaderText(java.lang.CharSequence) -> b
    void setSubTextAppearance(int) -> c
    void setSubTextColor(android.content.res.ColorStateList) -> a
    void setTextAppearance(int) -> d
    void setTextColor(android.content.res.ColorStateList) -> b
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Orientation() -> n
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode() -> o
com.lib.pullToRefresh.LoadingLayoutProxy -> com.lib.pullToRefresh.f:
    java.util.HashSet mLoadingLayouts -> a
    void addLayout(com.lib.pullToRefresh.LoadingLayout) -> a
    void setLastUpdatedLabel(java.lang.CharSequence) -> a
com.lib.pullToRefresh.OverscrollHelper -> com.lib.pullToRefresh.g:
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Orientation -> a
    void overScrollBy(com.lib.pullToRefresh.PullToRefreshBase,int,int,int,int,boolean) -> a
    void overScrollBy(com.lib.pullToRefresh.PullToRefreshBase,int,int,int,int,int,boolean) -> a
    void overScrollBy(com.lib.pullToRefresh.PullToRefreshBase,int,int,int,int,int,int,float,boolean) -> a
    boolean isAndroidOverScrollEnabled(android.view.View) -> a
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Orientation() -> a
com.lib.pullToRefresh.PullToRefreshAdapterViewBase -> com.lib.pullToRefresh.PullToRefreshAdapterViewBase:
    boolean mLastItemVisible -> b
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> c
    com.lib.pullToRefresh.PullToRefreshBase$OnLastItemVisibleListener mOnLastItemVisibleListener -> d
    android.view.View mEmptyView -> e
    com.lib.pullToRefresh.IndicatorLayout mIndicatorIvTop -> f
    com.lib.pullToRefresh.IndicatorLayout mIndicatorIvBottom -> g
    boolean mShowIndicator -> h
    boolean mScrollEmptyView -> i
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode -> j
    android.widget.FrameLayout$LayoutParams convertEmptyViewLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setEmptyView(android.view.View) -> a
    void setOnLastItemVisibleListener(com.lib.pullToRefresh.PullToRefreshBase$OnLastItemVisibleListener) -> a
    void setShowIndicator(boolean) -> a
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> b
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void updateUIForMode() -> f
    void addIndicatorViews() -> D
    boolean getShowIndicatorInternal() -> E
    boolean isFirstItemVisible() -> F
    boolean isLastItemVisible() -> G
    void removeIndicatorViews() -> H
    void updateIndicatorViewsVisibility() -> I
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode() -> g
com.lib.pullToRefresh.PullToRefreshBase -> com.lib.pullToRefresh.PullToRefreshBase:
    int mTouchSlop -> b
    float mLastMotionX -> c
    float mLastMotionY -> d
    float mInitialMotionX -> e
    float mInitialMotionY -> f
    boolean mIsBeingDragged -> g
    com.lib.pullToRefresh.PullToRefreshBase$State mState -> h
    com.lib.pullToRefresh.PullToRefreshBase$Mode mMode -> i
    com.lib.pullToRefresh.PullToRefreshBase$Mode mCurrentMode -> j
    android.view.View mRefreshableView -> a
    android.widget.FrameLayout mRefreshableViewWrapper -> k
    boolean mShowViewWhileRefreshing -> l
    boolean mScrollingWhileRefreshingEnabled -> m
    boolean mFilterTouchEvents -> n
    boolean mOverScrollEnabled -> o
    boolean mLayoutVisibilityChangesEnabled -> p
    android.view.animation.Interpolator mScrollAnimationInterpolator -> q
    com.lib.pullToRefresh.PullToRefreshBase$AnimationStyle mLoadingAnimationStyle -> r
    com.lib.pullToRefresh.LoadingLayout mHeaderLayout -> s
    com.lib.pullToRefresh.LoadingLayout mFooterLayout -> t
    com.lib.pullToRefresh.PullToRefreshBase$OnRefreshListener mOnRefreshListener -> u
    com.lib.pullToRefresh.PullToRefreshBase$OnRefreshListener2 mOnRefreshListener2 -> v
    com.lib.pullToRefresh.PullToRefreshBase$OnPullEventListener mOnPullEventListener -> w
    com.lib.pullToRefresh.PullToRefreshBase$SmoothScrollRunnable mCurrentSmoothScrollRunnable -> x
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Orientation -> y
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$State -> z
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode -> A
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    com.lib.pullToRefresh.PullToRefreshBase$Mode getCurrentMode() -> h
    com.lib.pullToRefresh.ILoadingLayout getLoadingLayoutProxy() -> i
    com.lib.pullToRefresh.ILoadingLayout getLoadingLayoutProxy(boolean,boolean) -> a
    com.lib.pullToRefresh.PullToRefreshBase$Mode getMode() -> j
    android.view.View getRefreshableView() -> k
    boolean getShowViewWhileRefreshing() -> l
    com.lib.pullToRefresh.PullToRefreshBase$State getState() -> m
    boolean isPullToRefreshEnabled() -> n
    boolean isPullToRefreshOverScrollEnabled() -> o
    boolean isRefreshing() -> p
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onRefreshComplete() -> q
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setScrollingWhileRefreshingEnabled(boolean) -> c
    void setLongClickable(boolean) -> setLongClickable
    void setMode(com.lib.pullToRefresh.PullToRefreshBase$Mode) -> a
    void setOnRefreshListener(com.lib.pullToRefresh.PullToRefreshBase$OnRefreshListener) -> a
    com.lib.pullToRefresh.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> r
    void setState(com.lib.pullToRefresh.PullToRefreshBase$State,boolean[]) -> a
    void addViewInternal(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void addViewInternal(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    com.lib.pullToRefresh.LoadingLayout createLoadingLayout(android.content.Context,com.lib.pullToRefresh.PullToRefreshBase$Mode,android.content.res.TypedArray) -> a
    com.lib.pullToRefresh.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    void disableLoadingLayoutVisibilityChanges() -> s
    com.lib.pullToRefresh.LoadingLayout getFooterLayout() -> t
    int getFooterSize() -> u
    com.lib.pullToRefresh.LoadingLayout getHeaderLayout() -> v
    int getHeaderSize() -> w
    int getPullToRefreshScrollDuration() -> x
    android.widget.FrameLayout getRefreshableViewWrapper() -> y
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullEnd() -> e
    boolean isReadyForPullStart() -> d
    void onPtrRestoreInstanceState(android.os.Bundle) -> a
    void onPtrSaveInstanceState(android.os.Bundle) -> b
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> b
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void refreshLoadingViewsSize() -> z
    void refreshRefreshableViewSize(int,int) -> a
    void setHeaderScroll(int) -> a
    void smoothScrollTo(int) -> b
    void smoothScrollTo(int,com.lib.pullToRefresh.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    void updateUIForMode() -> f
    void addRefreshableView(android.content.Context,android.view.View) -> a
    void callRefreshListener() -> g
    void init(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPull() -> D
    void pullEvent() -> E
    android.widget.LinearLayout$LayoutParams getLoadingLayoutLayoutParams() -> F
    int getMaximumPullScroll() -> G
    void smoothScrollTo(int,long) -> a
    void smoothScrollTo(int,long,long,com.lib.pullToRefresh.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    android.view.animation.Interpolator access$0(com.lib.pullToRefresh.PullToRefreshBase) -> a
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Orientation() -> A
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$State() -> B
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode() -> C
    void access$4(com.lib.pullToRefresh.PullToRefreshBase) -> b
com.lib.pullToRefresh.PullToRefreshBase$1 -> com.lib.pullToRefresh.h:
    com.lib.pullToRefresh.PullToRefreshBase this$0 -> a
    void onSmoothScrollFinished() -> a
com.lib.pullToRefresh.PullToRefreshBase$2 -> com.lib.pullToRefresh.i:
    com.lib.pullToRefresh.PullToRefreshBase this$0 -> a
    void run() -> run
com.lib.pullToRefresh.PullToRefreshBase$AnimationStyle -> com.lib.pullToRefresh.j:
    com.lib.pullToRefresh.PullToRefreshBase$AnimationStyle ROTATE -> a
    com.lib.pullToRefresh.PullToRefreshBase$AnimationStyle FLIP -> b
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$AnimationStyle -> c
    com.lib.pullToRefresh.PullToRefreshBase$AnimationStyle[] ENUM$VALUES -> d
    com.lib.pullToRefresh.PullToRefreshBase$AnimationStyle getDefault() -> a
    com.lib.pullToRefresh.PullToRefreshBase$AnimationStyle mapIntToValue(int) -> a
    com.lib.pullToRefresh.LoadingLayout createLoadingLayout(android.content.Context,com.lib.pullToRefresh.PullToRefreshBase$Mode,com.lib.pullToRefresh.PullToRefreshBase$Orientation,android.content.res.TypedArray) -> a
    com.lib.pullToRefresh.PullToRefreshBase$AnimationStyle[] values() -> values
    com.lib.pullToRefresh.PullToRefreshBase$AnimationStyle valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$AnimationStyle() -> b
com.lib.pullToRefresh.PullToRefreshBase$Mode -> com.lib.pullToRefresh.k:
    com.lib.pullToRefresh.PullToRefreshBase$Mode DISABLED -> a
    com.lib.pullToRefresh.PullToRefreshBase$Mode PULL_FROM_START -> b
    com.lib.pullToRefresh.PullToRefreshBase$Mode PULL_FROM_END -> c
    com.lib.pullToRefresh.PullToRefreshBase$Mode BOTH -> d
    com.lib.pullToRefresh.PullToRefreshBase$Mode MANUAL_REFRESH_ONLY -> e
    com.lib.pullToRefresh.PullToRefreshBase$Mode PULL_DOWN_TO_REFRESH -> f
    com.lib.pullToRefresh.PullToRefreshBase$Mode PULL_UP_TO_REFRESH -> g
    int mIntValue -> h
    com.lib.pullToRefresh.PullToRefreshBase$Mode[] ENUM$VALUES -> i
    com.lib.pullToRefresh.PullToRefreshBase$Mode mapIntToValue(int) -> a
    com.lib.pullToRefresh.PullToRefreshBase$Mode getDefault() -> a
    boolean permitsPullToRefresh() -> b
    boolean showHeaderLoadingLayout() -> c
    boolean showFooterLoadingLayout() -> d
    int getIntValue() -> e
    com.lib.pullToRefresh.PullToRefreshBase$Mode[] values() -> values
    com.lib.pullToRefresh.PullToRefreshBase$Mode valueOf(java.lang.String) -> valueOf
com.lib.pullToRefresh.PullToRefreshBase$OnLastItemVisibleListener -> com.lib.pullToRefresh.l:
    void onLastItemVisible() -> a
com.lib.pullToRefresh.PullToRefreshBase$OnPullEventListener -> com.lib.pullToRefresh.m:
    void onPullEvent(com.lib.pullToRefresh.PullToRefreshBase,com.lib.pullToRefresh.PullToRefreshBase$State,com.lib.pullToRefresh.PullToRefreshBase$Mode) -> a
com.lib.pullToRefresh.PullToRefreshBase$OnRefreshListener -> com.lib.pullToRefresh.n:
    void onRefresh(com.lib.pullToRefresh.PullToRefreshBase) -> a
com.lib.pullToRefresh.PullToRefreshBase$OnRefreshListener2 -> com.lib.pullToRefresh.o:
    void onPullDownToRefresh(com.lib.pullToRefresh.PullToRefreshBase) -> a
    void onPullUpToRefresh(com.lib.pullToRefresh.PullToRefreshBase) -> b
com.lib.pullToRefresh.PullToRefreshBase$OnSmoothScrollFinishedListener -> com.lib.pullToRefresh.p:
    void onSmoothScrollFinished() -> a
com.lib.pullToRefresh.PullToRefreshBase$Orientation -> com.lib.pullToRefresh.q:
    com.lib.pullToRefresh.PullToRefreshBase$Orientation VERTICAL -> a
    com.lib.pullToRefresh.PullToRefreshBase$Orientation HORIZONTAL -> b
    com.lib.pullToRefresh.PullToRefreshBase$Orientation[] ENUM$VALUES -> c
    com.lib.pullToRefresh.PullToRefreshBase$Orientation[] values() -> values
    com.lib.pullToRefresh.PullToRefreshBase$Orientation valueOf(java.lang.String) -> valueOf
com.lib.pullToRefresh.PullToRefreshBase$SmoothScrollRunnable -> com.lib.pullToRefresh.r:
    android.view.animation.Interpolator mInterpolator -> b
    int mScrollToY -> c
    int mScrollFromY -> d
    long mDuration -> e
    com.lib.pullToRefresh.PullToRefreshBase$OnSmoothScrollFinishedListener mListener -> f
    boolean mContinueRunning -> g
    long mStartTime -> h
    int mCurrentY -> i
    com.lib.pullToRefresh.PullToRefreshBase this$0 -> a
    void run() -> run
    void stop() -> a
com.lib.pullToRefresh.PullToRefreshBase$State -> com.lib.pullToRefresh.s:
    com.lib.pullToRefresh.PullToRefreshBase$State RESET -> a
    com.lib.pullToRefresh.PullToRefreshBase$State PULL_TO_REFRESH -> b
    com.lib.pullToRefresh.PullToRefreshBase$State RELEASE_TO_REFRESH -> c
    com.lib.pullToRefresh.PullToRefreshBase$State REFRESHING -> d
    com.lib.pullToRefresh.PullToRefreshBase$State MANUAL_REFRESHING -> e
    com.lib.pullToRefresh.PullToRefreshBase$State OVERSCROLLING -> f
    int mIntValue -> g
    com.lib.pullToRefresh.PullToRefreshBase$State[] ENUM$VALUES -> h
    com.lib.pullToRefresh.PullToRefreshBase$State mapIntToValue(int) -> a
    int getIntValue() -> a
    com.lib.pullToRefresh.PullToRefreshBase$State[] values() -> values
    com.lib.pullToRefresh.PullToRefreshBase$State valueOf(java.lang.String) -> valueOf
com.lib.pullToRefresh.PullToRefreshListView -> com.lib.pullToRefresh.PullToRefreshListView:
    com.lib.pullToRefresh.LoadingLayout mHeaderLoadingView -> b
    com.lib.pullToRefresh.LoadingLayout mFooterLoadingView -> c
    android.widget.FrameLayout mLvFooterLoadingFrame -> d
    boolean mListViewExtrasEnabled -> e
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode -> f
    com.lib.pullToRefresh.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> r
    void onRefreshing(boolean) -> b
    void onReset() -> c
    com.lib.pullToRefresh.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> b
    android.widget.ListView createListView(android.content.Context,android.util.AttributeSet) -> b
    android.widget.ListView createRefreshableView(android.content.Context,android.util.AttributeSet) -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    android.widget.FrameLayout access$1(com.lib.pullToRefresh.PullToRefreshListView) -> a
    int[] $SWITCH_TABLE$com$lib$pullToRefresh$PullToRefreshBase$Mode() -> D
com.lib.pullToRefresh.PullToRefreshListView$InternalListView -> com.lib.pullToRefresh.t:
    boolean mAddedLvFooter -> b
    com.lib.pullToRefresh.PullToRefreshListView this$0 -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> a
com.lib.pullToRefresh.PullToRefreshListView$InternalListViewSDK9 -> com.lib.pullToRefresh.u:
    com.lib.pullToRefresh.PullToRefreshListView this$0 -> b
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.lib.pullToRefresh.RotateLoadingLayout -> com.lib.pullToRefresh.v:
    android.view.animation.Animation mRotateAnimation -> f
    android.graphics.Matrix mHeaderImageMatrix -> g
    float mRotationPivotX -> h
    float mRotationPivotY -> i
    boolean mRotateDrawableWhilePulling -> j
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void refreshingImpl() -> b
    void resetImpl() -> d
    void resetImageRotation() -> f
    void pullToRefreshImpl() -> a
    void releaseToRefreshImpl() -> c
    int getDefaultDrawableResId() -> e
com.lib.pullToRefresh.Utils -> com.lib.pullToRefresh.w:
    void warnDeprecation(java.lang.String,java.lang.String) -> a
com.lib.pullToRefresh.ViewCompat -> com.lib.pullToRefresh.x:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
com.lib.pullToRefresh.ViewCompat$SDK16 -> com.lib.pullToRefresh.y:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
com.lib.slideexpandable.AbstractSlideExpandableListAdapter -> com.lib.slideexpandable.AbstractSlideExpandableListAdapter:
    android.view.View lastOpen -> a
    android.view.View lastToggle -> c
    int lastOpenPosition -> d
    int animationDuration -> e
    java.util.BitSet openItems -> f
    android.util.SparseIntArray viewHeights -> g
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getExpandToggleButton(android.view.View) -> a
    android.view.View getExpandableView(android.view.View) -> b
    int getAnimationDuration() -> a
    void enableFor(android.view.View,int) -> a
    void enableFor(android.view.View,android.view.View,int) -> a
    void updateExpandable(android.view.View,int) -> b
    void animateView(android.view.View,int) -> c
    android.os.Parcelable onSaveInstanceState(android.os.Parcelable) -> a
    void onRestoreInstanceState(com.lib.slideexpandable.AbstractSlideExpandableListAdapter$SavedState) -> a
    java.util.BitSet readBitSet(android.os.Parcel) -> b
    void writeBitSet(android.os.Parcel,java.util.BitSet) -> b
    void access$0(android.os.Parcel,java.util.BitSet) -> a
    java.util.BitSet access$1(android.os.Parcel) -> a
    java.util.BitSet access$2(com.lib.slideexpandable.AbstractSlideExpandableListAdapter) -> a
    int access$3(com.lib.slideexpandable.AbstractSlideExpandableListAdapter) -> b
    android.view.View access$4(com.lib.slideexpandable.AbstractSlideExpandableListAdapter) -> c
    void access$5(com.lib.slideexpandable.AbstractSlideExpandableListAdapter,android.view.View,int) -> a
    void access$6(com.lib.slideexpandable.AbstractSlideExpandableListAdapter,android.view.View) -> a
    void access$7(com.lib.slideexpandable.AbstractSlideExpandableListAdapter,android.view.View) -> b
    void access$8(com.lib.slideexpandable.AbstractSlideExpandableListAdapter,int) -> a
com.lib.slideexpandable.AbstractSlideExpandableListAdapter$1 -> com.lib.slideexpandable.a:
    com.lib.slideexpandable.AbstractSlideExpandableListAdapter this$0 -> a
    android.view.View val$target -> b
    int val$position -> c
    android.view.View val$button -> d
    void onClick(android.view.View) -> onClick
com.lib.slideexpandable.AbstractSlideExpandableListAdapter$1$1 -> com.lib.slideexpandable.b:
    com.lib.slideexpandable.AbstractSlideExpandableListAdapter$1 this$1 -> a
    android.view.View val$view -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.lib.slideexpandable.AbstractSlideExpandableListAdapter$SavedState -> com.lib.slideexpandable.AbstractSlideExpandableListAdapter$SavedState:
    java.util.BitSet openItems -> a
    int lastOpenPosition -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.lib.slideexpandable.AbstractSlideExpandableListAdapter$SavedState$1 -> com.lib.slideexpandable.c:
    com.lib.slideexpandable.AbstractSlideExpandableListAdapter$SavedState createFromParcel(android.os.Parcel) -> a
    com.lib.slideexpandable.AbstractSlideExpandableListAdapter$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.lib.slideexpandable.ActionSlideExpandableListView -> com.lib.slideexpandable.ActionSlideExpandableListView:
    com.lib.slideexpandable.ActionSlideExpandableListView$OnActionClickListener listener -> b
    com.lib.slideexpandable.ActionSlideExpandableListView$OnItemClickListener onItemClickListener -> a
    int[] buttonIds -> c
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$4(com.lib.slideexpandable.ActionSlideExpandableListView) -> a
    com.lib.slideexpandable.ActionSlideExpandableListView$OnActionClickListener access$5(com.lib.slideexpandable.ActionSlideExpandableListView) -> b
com.lib.slideexpandable.ActionSlideExpandableListView$1 -> com.lib.slideexpandable.d:
    com.lib.slideexpandable.ActionSlideExpandableListView this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.lib.slideexpandable.ActionSlideExpandableListView access$0(com.lib.slideexpandable.ActionSlideExpandableListView$1) -> a
com.lib.slideexpandable.ActionSlideExpandableListView$1$1 -> com.lib.slideexpandable.e:
    com.lib.slideexpandable.ActionSlideExpandableListView$1 this$1 -> a
    android.view.View val$listView -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.lib.slideexpandable.ActionSlideExpandableListView$OnActionClickListener -> com.lib.slideexpandable.f:
    void onClick(android.view.View,android.view.View,int) -> a
com.lib.slideexpandable.ActionSlideExpandableListView$OnItemClickListener -> com.lib.slideexpandable.g:
    void OnClick(int,int) -> a
com.lib.slideexpandable.ExpandCollapseAnimation -> com.lib.slideexpandable.h:
    android.view.View mAnimatedView -> a
    int mEndHeight -> b
    int mType -> c
    android.widget.LinearLayout$LayoutParams mLayoutParams -> d
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.lib.slideexpandable.SlideExpandableListAdapter -> com.lib.slideexpandable.i:
    int toggle_button_id -> a
    int expandable_view_id -> c
    android.view.View getExpandToggleButton(android.view.View) -> a
    android.view.View getExpandableView(android.view.View) -> b
com.lib.slideexpandable.SlideExpandableListView -> com.lib.slideexpandable.SlideExpandableListView:
    com.lib.slideexpandable.SlideExpandableListAdapter adapter -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.lib.slideexpandable.WrapperListAdapterImpl -> com.lib.slideexpandable.j:
    android.widget.ListAdapter wrapped -> b
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.mediatek.elian.ElianNative -> com.mediatek.elian.ElianNative:
    int InitSmartConnection(java.lang.String,int,int) -> InitSmartConnection
    int StartSmartConnection(java.lang.String,java.lang.String,java.lang.String,byte) -> StartSmartConnection
    int StopSmartConnection() -> StopSmartConnection
com.p2p.core.BaseCallActivity -> com.p2p.core.BaseCallActivity:
com.p2p.core.BaseCoreActivity -> com.p2p.core.BaseCoreActivity:
    boolean isGoExit -> a
    java.util.HashMap activity_stack -> E
    com.p2p.core.utils.HomeWatcher mHomeWatcher -> F
    void onStackChange() -> b
    void onStop() -> onStop
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    int getActivityInfo() -> f
    void isGoExit(boolean) -> b
    void onHomePressed() -> a
    void onHomeLongPressed() -> o
    void onGoBack() -> g
    void onGoFront() -> h
com.p2p.core.BaseMonitorActivity -> com.p2p.core.BaseMonitorActivity:
    int MSG_SHOW_CAPTURERESULT -> a
    int mVideoFrameRate -> G
    int MINX -> b
    int MINY -> c
    int USR_CMD_OPTION_PTZ_TURN_LEFT -> d
    int USR_CMD_OPTION_PTZ_TURN_RIGHT -> e
    int USR_CMD_OPTION_PTZ_TURN_UP -> f
    int USR_CMD_OPTION_PTZ_TURN_DOWN -> g
    com.p2p.core.P2PView pView -> H
    boolean isBaseRegFilter -> I
    boolean isFullScreen -> J
    android.content.BroadcastReceiver baseReceiver -> h
    android.os.Handler mHandler -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initP2PView(int) -> b
    void baseRegFilter() -> b
    void setMute(boolean) -> c
    void captureScreen() -> j
    void onDestroy() -> onDestroy
    void onP2PViewSingleTap() -> e
    void onCaptureScreenResult(boolean) -> a
com.p2p.core.BaseMonitorActivity$1 -> com.p2p.core.a:
    com.p2p.core.BaseMonitorActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.p2p.core.BaseMonitorActivity access$0(com.p2p.core.BaseMonitorActivity$1) -> a
com.p2p.core.BaseMonitorActivity$1$1 -> com.p2p.core.b:
    com.p2p.core.BaseMonitorActivity$1 this$1 -> a
    com.p2p.core.MediaPlayer val$mPlayer -> b
    void run() -> run
com.p2p.core.BaseMonitorActivity$2 -> com.p2p.core.c:
    com.p2p.core.BaseMonitorActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.p2p.core.BaseMonitorActivity$CaptureListener -> com.p2p.core.d:
    android.os.Handler mSubHandler -> a
    com.p2p.core.BaseMonitorActivity this$0 -> b
    void vCaptureResult(int) -> a
com.p2p.core.BaseMonitorActivity$GestureListener -> com.p2p.core.e:
    com.p2p.core.BaseMonitorActivity this$0 -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> b
    boolean onDoubleTap(android.view.MotionEvent) -> c
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
com.p2p.core.BaseP2PView -> com.p2p.core.BaseP2PView:
    int start_Top -> b
    int start_Right -> c
    int start_Bottom -> d
    int start_Left -> e
    int start_x -> f
    int start_y -> g
    int current_x -> h
    int current_y -> i
    float beforeLenght -> j
    float afterLenght -> k
    float scale_temp -> l
    int iTouchUp -> m
    com.p2p.core.BaseP2PView$MODE mode -> a
    boolean isControl_V -> n
    boolean isControl_H -> o
    boolean isScaleAnim -> p
    void setVideoScale(int,int,float) -> a
    boolean MovePicture(int,int) -> a
    void StopMoving() -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onTouchDown(android.view.MotionEvent) -> a
    void onPointerDown(android.view.MotionEvent) -> b
    boolean onTouchMove(android.view.MotionEvent) -> c
    float getDistance(android.view.MotionEvent) -> d
    int getCenterX(android.view.MotionEvent) -> e
    int getCenterY(android.view.MotionEvent) -> f
com.p2p.core.BaseP2PView$MODE -> com.p2p.core.f:
    com.p2p.core.BaseP2PView$MODE NONE -> a
    com.p2p.core.BaseP2PView$MODE DRAG -> b
    com.p2p.core.BaseP2PView$MODE ZOOM -> c
    com.p2p.core.BaseP2PView$MODE[] ENUM$VALUES -> d
    com.p2p.core.BaseP2PView$MODE[] values() -> values
    com.p2p.core.BaseP2PView$MODE valueOf(java.lang.String) -> valueOf
com.p2p.core.BasePlayBackActivity -> com.p2p.core.BasePlayBackActivity:
    int mVideoFrameRate -> a
    com.p2p.core.P2PView pView -> n
    boolean isBaseRegFilter -> o
    boolean isFullScreen -> p
    android.content.BroadcastReceiver baseReceiver -> b
    void onCreate(android.os.Bundle) -> onCreate
    void baseRegFilter() -> e
    void initP2PView(int) -> b
    void onDestroy() -> onDestroy
    void pausePlayBack() -> i
    void startPlayBack() -> j
    boolean previous() -> k
    boolean next() -> l
    void jump(int) -> c
    void onP2PViewSingleTap() -> d
    int access$0() -> m
com.p2p.core.BasePlayBackActivity$1 -> com.p2p.core.g:
    com.p2p.core.BasePlayBackActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.p2p.core.BasePlayBackActivity access$0(com.p2p.core.BasePlayBackActivity$1) -> a
com.p2p.core.BasePlayBackActivity$1$1 -> com.p2p.core.h:
    com.p2p.core.BasePlayBackActivity$1 this$1 -> a
    com.p2p.core.MediaPlayer val$mPlayer -> b
    void run() -> run
com.p2p.core.BasePlayBackActivity$GestureListener -> com.p2p.core.i:
    com.p2p.core.BasePlayBackActivity this$0 -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> b
    boolean onDoubleTap(android.view.MotionEvent) -> c
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
com.p2p.core.BaseVideoActivity -> com.p2p.core.BaseVideoActivity:
    int mVideoFrameRate -> a
    int MINX -> e
    int MINY -> f
    int USR_CMD_OPTION_PTZ_TURN_LEFT -> g
    int USR_CMD_OPTION_PTZ_TURN_RIGHT -> h
    int USR_CMD_OPTION_PTZ_TURN_UP -> i
    int USR_CMD_OPTION_PTZ_TURN_DOWN -> j
    com.p2p.core.P2PView pView -> b
    boolean isBaseRegFilter -> c
    boolean isFullScreen -> d
    android.content.BroadcastReceiver baseReceiver -> k
    void onCreate(android.os.Bundle) -> onCreate
    void baseRegFilter() -> b
    void onDestroy() -> onDestroy
com.p2p.core.BaseVideoActivity$1 -> com.p2p.core.j:
    com.p2p.core.BaseVideoActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.p2p.core.BaseVideoActivity access$0(com.p2p.core.BaseVideoActivity$1) -> a
com.p2p.core.BaseVideoActivity$1$1 -> com.p2p.core.k:
    com.p2p.core.BaseVideoActivity$1 this$1 -> a
    com.p2p.core.MediaPlayer val$mPlayer -> b
    void run() -> run
com.p2p.core.GestureDetector -> com.p2p.core.l:
    int mBiggerTouchSlopSquare -> b
    int mTouchSlopSquare -> c
    int mDoubleTapSlopSquare -> d
    int mMinimumFlingVelocity -> e
    int mMaximumFlingVelocity -> f
    int LONGPRESS_TIMEOUT -> g
    int TAP_TIMEOUT -> h
    int DOUBLE_TAP_TIMEOUT -> i
    android.os.Handler mHandler -> j
    com.p2p.core.GestureDetector$OnGestureListener mListener -> k
    com.p2p.core.GestureDetector$OnDoubleTapListener mDoubleTapListener -> l
    boolean mStillDown -> m
    boolean mInLongPress -> n
    boolean mAlwaysInTapRegion -> o
    boolean mAlwaysInBiggerTapRegion -> p
    android.view.MotionEvent mCurrentDownEvent -> q
    android.view.MotionEvent mPreviousUpEvent -> r
    boolean mIsDoubleTapping -> s
    float mLastMotionY -> t
    float mLastMotionX -> u
    boolean mIsLongpressEnabled -> v
    boolean mIgnoreMultitouch -> w
    android.view.VelocityTracker mVelocityTracker -> x
    com.p2p.core.GestureDetector$OnZoomInListener mOnZoomInListener -> a
    void init(android.content.Context,boolean) -> a
    void setOnDoubleTapListener(com.p2p.core.GestureDetector$OnDoubleTapListener) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void cancel() -> a
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> a
    void dispatchLongPress() -> b
    void setOnZoomInListener(com.p2p.core.GestureDetector$OnZoomInListener) -> a
    com.p2p.core.GestureDetector$OnGestureListener access$0(com.p2p.core.GestureDetector) -> a
    android.view.MotionEvent access$1(com.p2p.core.GestureDetector) -> b
    void access$2(com.p2p.core.GestureDetector) -> c
    com.p2p.core.GestureDetector$OnDoubleTapListener access$3(com.p2p.core.GestureDetector) -> d
    boolean access$4(com.p2p.core.GestureDetector) -> e
com.p2p.core.GestureDetector$GestureHandler -> com.p2p.core.m:
    com.p2p.core.GestureDetector this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.p2p.core.GestureDetector$OnDoubleTapListener -> com.p2p.core.n:
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> a
    boolean onDoubleTap(android.view.MotionEvent) -> c
    boolean onDoubleTapEvent(android.view.MotionEvent) -> d
com.p2p.core.GestureDetector$OnGestureListener -> com.p2p.core.o:
    boolean onDown(android.view.MotionEvent) -> e
    void onShowPress(android.view.MotionEvent) -> f
    boolean onSingleTapUp(android.view.MotionEvent) -> b
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> b
    void onLongPress(android.view.MotionEvent) -> g
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
com.p2p.core.GestureDetector$OnZoomInListener -> com.p2p.core.p:
    void onZoom(android.view.MotionEvent) -> a
com.p2p.core.GestureDetector$SimpleOnGestureListener -> com.p2p.core.q:
    boolean onSingleTapUp(android.view.MotionEvent) -> b
    void onLongPress(android.view.MotionEvent) -> g
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> b
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    void onShowPress(android.view.MotionEvent) -> f
    boolean onDown(android.view.MotionEvent) -> e
    boolean onDoubleTap(android.view.MotionEvent) -> c
    boolean onDoubleTapEvent(android.view.MotionEvent) -> d
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> a
com.p2p.core.MediaPlayer -> com.p2p.core.MediaPlayer:
    com.p2p.core.MediaPlayer manager -> i
    com.p2p.core.P2PInterface.IP2P p2pInterface -> j
    com.p2p.core.P2PInterface.ISetting settingInterface -> k
    android.content.Context mContext -> l
    boolean isMute -> a
    boolean isSendAudio -> b
    boolean mScreenOnWhilePlaying -> m
    com.p2p.core.MediaPlayer$ICapture mCapture -> n
    android.media.AudioRecord mAudioRecord -> o
    int mCpuVersion -> p
    int mNativeContext -> mNativeContext
    int iAudioDataInputNs -> c
    long AudioTrackPTSBegin -> d
    boolean fgdoPlayInit -> e
    boolean fgdoRecordInit -> f
    javax.microedition.khronos.egl.EGLContext mEGLContext -> q
    javax.microedition.khronos.egl.EGLSurface mEGLSurface -> r
    javax.microedition.khronos.egl.EGLDisplay mEGLDisplay -> s
    javax.microedition.khronos.egl.EGLConfig mEGLConfig -> t
    int mGLMajor -> u
    int mGLMinor -> v
    javax.microedition.khronos.egl.EGL10 mEgl -> w
    java.lang.Thread mAudioThread -> x
    android.media.AudioTrack mAudioTrack -> y
    long timeStart -> g
    int frame -> h
    java.lang.Object showView -> z
    com.p2p.core.MediaPlayer getInstance() -> getInstance
    void setCaptureListener(com.p2p.core.MediaPlayer$ICapture) -> setCaptureListener
    void setP2PInterface(com.p2p.core.P2PInterface.IP2P) -> setP2PInterface
    void setSettingInterface(com.p2p.core.P2PInterface.ISetting) -> setSettingInterface
    void setIsSendAudio(boolean) -> setIsSendAudio
    int getConvertAckResult(int) -> getConvertAckResult
    void postEventFromNative(java.lang.Object,int,int,int,int,java.lang.String) -> postEventFromNative
    void openAudioTrack() -> openAudioTrack
    void openAudioRecord() -> openAudioRecord
    int setAudioBuffer(byte[],int,int[]) -> setAudioBuffer
    void getAudioBuffer(byte[],int,int[]) -> getAudioBuffer
    void RecvAVData(byte[],int,int,long,byte[],int,long) -> RecvAVData
    void setDisplay(android.view.SurfaceView) -> setDisplay
    void init(int,int,int) -> init
    void start(int) -> start
    void stop() -> stop
    void pause() -> pause
    void setScreenOnWhilePlaying(boolean) -> setScreenOnWhilePlaying
    void _setVideoSurface(android.view.SurfaceView) -> _setVideoSurface
    void _SetMute(boolean) -> _SetMute
    void _CaptureScreen() -> _CaptureScreen
    void _SetRecvAVDataEnable(boolean) -> _SetRecvAVDataEnable
    void _InitSession(int,int,int) -> _InitSession
    void _StartPlaying(int,int) -> _StartPlaying
    void _StartSending(int) -> _StartSending
    void _PauseSession() -> _PauseSession
    void _StopSession() -> _StopSession
    boolean _isPlaying() -> _isPlaying
    int _FillVideoRawFrame(byte[],int,int,int,int) -> _FillVideoRawFrame
    void native_init(int) -> native_init
    void native_setup(java.lang.Object) -> native_setup
    int native_p2p_connect(int,int,int,int,byte[],int[]) -> native_p2p_connect
    int native_p2p_call(long,int,int,int,byte[],byte[]) -> native_p2p_call
    void native_p2p_accpet() -> native_p2p_accpet
    void native_p2p_hungup() -> native_p2p_hungup
    void native_p2p_control(int) -> native_p2p_control
    void native_p2p_disconnect() -> native_p2p_disconnect
    void nativeInit(java.lang.Object) -> nativeInit
    void nativeQuit() -> nativeQuit
    void nativePause() -> nativePause
    void nativeResume() -> nativeResume
    void onNativeResize(int,int,int) -> onNativeResize
    void onNativeKeyDown(int) -> onNativeKeyDown
    void onNativeKeyUp(int) -> onNativeKeyUp
    void onNativeTouch(int,int,int,float,float,float) -> onNativeTouch
    void onNativeAccel(float,float,float) -> onNativeAccel
    void nativeRunAudioThread() -> nativeRunAudioThread
    void release() -> release
    void reset() -> reset
    void nativeInitPlayBack() -> nativeInitPlayBack
    void testFunction(int,int) -> testFunction
    boolean createGLContext(int,int) -> createGLContext
    void flipBuffers() -> flipBuffers
    java.lang.Object audioInit(int,boolean,boolean,int) -> audioInit
    void audioWriteShortBuffer(short[]) -> audioWriteShortBuffer
    void audioWriteByteBuffer(byte[]) -> audioWriteByteBuffer
    void audioQuit() -> audioQuit
    void audioStartThread() -> audioStartThread
    boolean initEGL(int,int) -> initEGL
    void setEglView(java.lang.Object) -> setEglView
    void flipEGL() -> flipEGL
    boolean createEGLContext() -> createEGLContext
    boolean createEGLSurface() -> createEGLSurface
    void ReleaseOpenGL() -> ReleaseOpenGL
    int iSetNPCSettings(int,int,int,int,int) -> iSetNPCSettings
    int iGetNPCSettings(int,int,int) -> iGetNPCSettings
    void vRetNPCSettings(int,int,int[],int[],int) -> vRetNPCSettings
    void vRetFriendsStatus(int,int[],byte[],byte[]) -> vRetFriendsStatus
    void vRetMessage(int,int,byte[]) -> vRetMessage
    int iGetFriendsStatus(int[],int) -> iGetFriendsStatus
    int iSendMesgToFriend(int,int,byte[],int) -> iSendMesgToFriend
    int iGetRecFiles(int,int,int,int,int) -> iGetRecFiles
    void vRetRecordFilesList(int,int,byte[]) -> vRetRecordFilesList
    int iRecFilePlayingControl(int,int) -> iRecFilePlayingControl
    int iLocalVideoControl(int) -> iLocalVideoControl
    void vRetPlayingStatus(int) -> vRetPlayingStatus
    void vRetPlayingPos(int,int) -> vRetPlayingPos
    void vRetPlayingSize(int,int) -> vRetPlayingSize
    void vRetPlayingNumber(int) -> vRetPlayingNumber
    int iSetNPCDateTime(int,int,int,int) -> iSetNPCDateTime
    int iGetNPCDateTime(int,int,int) -> iGetNPCDateTime
    int iGetNPCEmail(int,int,int) -> iGetNPCEmail
    int iSetNPCEmail(int,int,int,byte[],int) -> iSetNPCEmail
    void vRetEmail(int,int,byte[],int) -> vRetEmail
    int iGetNPCWifiList(int,int,int) -> iGetNPCWifiList
    int iSetNPCWifi(int,int,int,int,byte[],int,byte[],int) -> iSetNPCWifi
    void vRetNPCWifiList(int,int,int,int[],int[],byte[],int) -> vRetNPCWifiList
    int iGetAlarmCodeStatus(int,int,int) -> iGetAlarmCodeStatus
    int iSetAlarmCodeStatus(int,int,int,int,int,int[],int[]) -> iSetAlarmCodeStatus
    void vRetAlarmCodeStatus(int,int,int,byte[],int) -> vRetAlarmCodeStatus
    int iGetBindAlarmId(int,int,int) -> iGetBindAlarmId
    int iSetBindAlarmId(int,int,int,int,int[]) -> iSetBindAlarmId
    void vRetBindAlarmId(int,int,int,int[],int) -> vRetBindAlarmId
    void vRetDeviceNotSupport(int) -> vRetDeviceNotSupport
    void ChangeScreenSize(int,int,int) -> ChangeScreenSize
    int ZoomView(int,int,float) -> ZoomView
    int MoveView(int,int) -> MoveView
    int iSetInitPassword(int,int,int,int) -> iSetInitPassword
    void vRetInitPassword(int,int) -> vRetInitPassword
    void vRetAlarm(int,int,int,int,int) -> vRetAlarm
    void vRetNPCTime(int,int) -> vRetNPCTime
    int iSendCmdToFriend(int,int,int,byte[],int) -> iSendCmdToFriend
    void vRetCustomCmd(int,int,byte[]) -> vRetCustomCmd
    int iSetVideoMode(int) -> iSetVideoMode
    void checkDeviceUpdate(int,int,int) -> checkDeviceUpdate
    void vRetCheckDeviceUpdate(int,int,int,int) -> vRetCheckDeviceUpdate
    void doDeviceUpdate(int,int,int) -> doDeviceUpdate
    void vRetDoDeviceUpdate(int,int,int) -> vRetDoDeviceUpdate
    void cancelDeviceUpdate(int,int,int) -> cancelDeviceUpdate
    void vRetCancelDeviceUpdate(int,int) -> vRetCancelDeviceUpdate
    int iSendCtlCmd(int,int) -> iSendCtlCmd
    void getDeviceVersion(int,int,int) -> getDeviceVersion
    void vRetGetDeviceVersion(int,int,int,int,int,int) -> vRetGetDeviceVersion
    void setBindFlag(int) -> setBindFlag
    void vGXNotifyFlag(int) -> vGXNotifyFlag
    int iClearAlarmCodeGroup(int,int,int,int) -> iClearAlarmCodeGroup
    void vRetClearAlarmCodeGroup(int,int) -> vRetClearAlarmCodeGroup
    int iExtendedCmd(int,int,int,byte[],int) -> iExtendedCmd
    void vRetExtenedCmd(int,byte[],int) -> vRetExtenedCmd
    void vSendWiFiCmd(int,byte[],int,byte[],int) -> vSendWiFiCmd
    void RetNewSystemMessage(int,int) -> RetNewSystemMessage
    void SetSystemMessageIndex(int,int) -> SetSystemMessageIndex
    int bytesToInt(byte[],int) -> bytesToInt
com.p2p.core.MediaPlayer$ICapture -> com.p2p.core.r:
    void vCaptureResult(int) -> a
com.p2p.core.P2PHandler -> com.p2p.core.s:
    java.lang.String TAG -> a
    int MSG_ID_SETTING_DEVICE_TIME -> b
    int MSG_ID_GETTING_DEVICE_TIME -> c
    int MSG_ID_GETTING_NPC_SETTINGS -> d
    int MSG_ID_SET_REMOTE_DEFENCE -> e
    int MSG_ID_SET_REMOTE_RECORD -> f
    int MSG_ID_SETTING_NPC_SETTINGS_VIDEO_FORMAT -> g
    int MSG_ID_SETTING_NPC_SETTINGS_VIDEO_VOLUME -> h
    int MSG_ID_SETTING_NPC_SETTINGS_BUZZER -> i
    int MSG_ID_SETTING_NPC_SETTINGS_MOTION -> j
    int MSG_ID_SETTING_NPC_SETTINGS_RECORD_TYPE -> k
    int MSG_ID_SETTING_NPC_SETTINGS_RECORD_TIME -> l
    int MSG_ID_SETTING_NPC_SETTINGS_RECORD_PLAN_TIME -> m
    int MSG_ID_SETTING_NPC_SETTINGS_NET_TYPE -> n
    int MSG_ID_SETTING_ALARM_EMAIL -> o
    int MSG_ID_GETTING_ALARM_EMAIL -> p
    int MSG_ID_SETTING_ALARM_BIND_ID -> q
    int MSG_ID_GETTING_ALARM_BIND_ID -> r
    int MSG_ID_SETTING_INIT_PASSWORD -> s
    int MSG_ID_SETTING_DEVICE_PASSWORD -> t
    int MSG_ID_CHECK_DEVICE_PASSWORD -> u
    int MSG_ID_SETTING_DEFENCEAREA -> v
    int MSG_ID_GETTING_DEFENCEAREA -> w
    int MSG_ID_SETTING_WIFI -> x
    int MSG_ID_GETTING_WIFI_LIST -> y
    int MSG_ID_GETTING_RECORD_FILE_LIST -> z
    int MSG_ID_SEND_MESSAGE -> A
    int MSG_ID_SEND_CUSTOM_CMD -> B
    int MSG_ID_CHECK_DEVICE_UPDATE -> C
    int MSG_ID_CANCEL_DEVICE_UPDATE -> D
    int MSG_ID_DO_DEVICE_UPDATE -> E
    int MSG_ID_GET_DEFENCE_STATE -> F
    int MSG_ID_GET_DEVICE_VERSION -> G
    int MSG_ID_CLEAR_DEFENCE_GROUP -> H
    int MESG_ID_STTING_PIC_REVERSE -> I
    int MESG_ID_STTING_IR_ALARM_EN -> J
    int MESG_STTING_ID_EXTLINE_ALARM_IN_EN -> K
    int MESG_STTING_ID_EXTLINE_ALARM_OUT_EN -> L
    int MESG_STTING_ID_SECUPGDEV -> M
    int MESG_STTING_ID_GUEST_PASSWD -> N
    int MESG_STTING_ID_TIMEZONE -> O
    int MESG_GET_SD_CARD_CAPACITY -> P
    int MESG_SD_CARD_FORMAT -> Q
    int MESG_SET_GPIO -> R
    int MESG_SET_GPI1_0 -> S
    int MESG_SET_PRE_RECORD -> T
    int MESG_GET_DEFENCE_AREA_SWITCH -> U
    int MESG_SET_DEFENCE_AREA_SWITCH -> V
    int MESG_GET_ALARM_RECORD -> W
    com.p2p.core.P2PHandler manager -> X
    int[] regionCode -> Y
    com.p2p.core.P2PHandler getInstance() -> a
    void p2pInit(android.content.Context,com.p2p.core.P2PInterface.IP2P,com.p2p.core.P2PInterface.ISetting) -> a
    boolean p2pConnect(java.lang.String,int,int) -> a
    void p2pDisconnect() -> b
    void getWifiList(java.lang.String,java.lang.String) -> a
    void setWifi(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> a
    void getNpcSettings(java.lang.String,java.lang.String) -> b
    void getDefenceStates(java.lang.String,java.lang.String) -> c
    void checkPassword(java.lang.String,java.lang.String) -> d
    void getDefenceArea(java.lang.String,java.lang.String) -> e
    void setRemoteDefence(java.lang.String,java.lang.String,int) -> a
    void setRemoteRecord(java.lang.String,java.lang.String,int) -> b
    void setDeviceTime(java.lang.String,java.lang.String,java.lang.String) -> a
    void getDeviceTime(java.lang.String,java.lang.String) -> f
    void setVideoVolume(java.lang.String,java.lang.String,int) -> c
    void setVideoFormat(java.lang.String,java.lang.String,int) -> d
    void setRecordType(java.lang.String,java.lang.String,int) -> e
    void setRecordTime(java.lang.String,java.lang.String,int) -> f
    void setRecordPlanTime(java.lang.String,java.lang.String,java.lang.String) -> b
    void setDefenceAreaState(java.lang.String,java.lang.String,int,int,int) -> a
    void clearDefenceAreaState(java.lang.String,java.lang.String,int) -> g
    void setNetType(java.lang.String,java.lang.String,int) -> h
    void setBindAlarmId(java.lang.String,java.lang.String,int,java.lang.String[]) -> a
    void getBindAlarmId(java.lang.String,java.lang.String) -> g
    void setAlarmEmail(java.lang.String,java.lang.String,java.lang.String) -> c
    void getAlarmEmail(java.lang.String,java.lang.String) -> h
    void setBuzzer(java.lang.String,java.lang.String,int) -> i
    void setMotion(java.lang.String,java.lang.String,int) -> j
    void setInitPassword(java.lang.String,java.lang.String) -> i
    void setDevicePassword(java.lang.String,java.lang.String,java.lang.String) -> d
    void setDeviceVisitorPassword(java.lang.String,java.lang.String,java.lang.String) -> e
    void getFriendStatus(java.lang.String[]) -> a
    void getRecordFiles(java.lang.String,java.lang.String,java.util.Date,java.util.Date) -> a
    void openAudioAndStartPlaying() -> c
    void reject() -> d
    boolean call(java.lang.String,java.lang.String,boolean,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void playbackConnect(java.lang.String,java.lang.String,java.lang.String,int) -> a
    int setVideoMode(int) -> a
    void checkDeviceUpdate(java.lang.String,java.lang.String) -> j
    void doDeviceUpdate(java.lang.String,java.lang.String) -> k
    void cancelDeviceUpdate(java.lang.String,java.lang.String) -> l
    void getDeviceVersion(java.lang.String,java.lang.String) -> m
    void setImageReverse(java.lang.String,java.lang.String,int) -> k
    void setInfraredSwitch(java.lang.String,java.lang.String,int) -> l
    void setWiredAlarmInput(java.lang.String,java.lang.String,int) -> m
    void setWiredAlarmOut(java.lang.String,java.lang.String,int) -> n
    void setAutomaticUpgrade(java.lang.String,java.lang.String,int) -> o
    void setTimeZone(java.lang.String,java.lang.String,int) -> p
    void getAlarmRecord(java.lang.String,java.lang.String) -> n
com.p2p.core.P2PInterface.IP2P -> com.p2p.core.a.a:
    void vCalling(boolean,java.lang.String,int) -> a
    void vReject(int) -> a
    void vAccept() -> a
    void vConnectReady() -> b
    void vAllarming(java.lang.String,int,boolean,int,int) -> a
    void vChangeVideoMask(int) -> b
    void vRetPlayBackPos(int,int) -> a
    void vRetPlayBackStatus(int) -> c
    void vGXNotifyFlag(int) -> d
    void vRetPlaySize(int,int) -> b
    void vRetPlayNumber(int) -> e
    void vRecvAudioVideoData(byte[],int,int,long,byte[],int,long) -> a
com.p2p.core.P2PInterface.ISetting -> com.p2p.core.a.b:
    void ACK_vRetSetDeviceTime(int,int) -> b
    void ACK_vRetGetDeviceTime(int,int) -> c
    void ACK_vRetGetNpcSettings(java.lang.String,int,int) -> a
    void ACK_vRetSetRemoteDefence(java.lang.String,int,int) -> c
    void ACK_vRetSetRemoteRecord(int,int) -> v
    void ACK_vRetSetNpcSettingsVideoFormat(int,int) -> d
    void ACK_vRetSetNpcSettingsVideoVolume(int,int) -> e
    void ACK_vRetSetNpcSettingsBuzzer(int,int) -> o
    void ACK_vRetSetNpcSettingsMotion(int,int) -> n
    void ACK_vRetSetNpcSettingsRecordType(int,int) -> p
    void ACK_vRetSetNpcSettingsRecordTime(int,int) -> q
    void ACK_vRetSetNpcSettingsRecordPlanTime(int,int) -> r
    void ACK_vRetSetNpcSettingsNetType(int,int) -> g
    void ACK_vRetSetAlarmEmail(int,int) -> l
    void ACK_vRetGetAlarmEmail(int,int) -> m
    void ACK_vRetSetAlarmBindId(int,int) -> j
    void ACK_vRetGetAlarmBindId(int,int) -> k
    void ACK_vRetSetInitPassword(int,int) -> w
    void ACK_vRetSetDevicePassword(int,int) -> f
    void ACK_vRetCheckDevicePassword(int,int) -> a
    void ACK_vRetSetWifi(int,int) -> h
    void ACK_vRetGetWifiList(int,int) -> i
    void ACK_vRetSetDefenceArea(int,int) -> s
    void ACK_vRetGetDefenceArea(int,int) -> u
    void ACK_vRetGetRecordFileList(int,int) -> C
    void ACK_vRetMessage(int,int) -> D
    void ACK_vRetCustomCmd(int,int) -> E
    void ACK_vRetGetDeviceVersion(int,int) -> x
    void ACK_vRetCheckDeviceUpdate(int,int) -> y
    void ACK_vRetDoDeviceUpdate(int,int) -> z
    void ACK_vRetCancelDeviceUpdate(int,int) -> B
    void ACK_vRetClearDefenceAreaState(int,int) -> t
    void ACK_vRetGetDefenceStates(java.lang.String,int,int) -> b
    void ACK_vRetSetImageReverse(int,int) -> F
    void ACK_vRetSetInfraredSwitch(int,int) -> G
    void ACK_vRetSetWiredAlarmInput(int,int) -> H
    void ACK_vRetSetWiredAlarmOut(int,int) -> I
    void ACK_vRetSetAutomaticUpgrade(int,int) -> J
    void ACK_VRetSetVisitorDevicePassword(int,int) -> K
    void ACK_vRetSetTimeZone(int,int) -> L
    void ACK_vRetGetSDCard(int,int) -> M
    void ACK_vRetSdFormat(int,int) -> N
    void ACK_vRetGetSensorSwitchs(int,int) -> O
    void ACK_vRetSetSensorSwitchs(int,int) -> P
    void ACK_vRetGetAlarmRecord(int,int) -> Q
    void vRetGetRemoteDefenceResult(java.lang.String,int) -> a
    void vRetGetRemoteRecordResult(int) -> s
    void vRetGetBuzzerResult(int) -> k
    void vRetGetMotionResult(int) -> i
    void vRetGetVideoFormatResult(int) -> c
    void vRetGetRecordTypeResult(int) -> m
    void vRetGetRecordTimeResult(int) -> o
    void vRetGetNetTypeResult(int) -> h
    void vRetGetVideoVolumeResult(int) -> e
    void vRetGetRecordPlanTimeResult(java.lang.String) -> b
    void vRetGetImageReverseResult(int) -> y
    void vRetGetInfraredSwitch(int) -> z
    void vRetGetWiredAlarmInput(int) -> B
    void vRetGetWiredAlarmOut(int) -> C
    void vRetGetAutomaticUpgrade(int) -> D
    void vRetGetTimeZone(int) -> I
    void vRetGetAudioDeviceType(int) -> K
    void vRetGetPreRecord(int) -> L
    void vRetGetSensorSwitchs(int,java.util.ArrayList) -> a
    void vRetGetAlarmRecord(int,int,java.util.ArrayList) -> a
    void vRetSetRemoteDefenceResult(int) -> t
    void vRetSetRemoteRecordResult(int) -> u
    void vRetSetBuzzerResult(int) -> l
    void vRetSetMotionResult(int) -> j
    void vRetSetVideoFormatResult(int) -> b
    void vRetSetRecordTypeResult(int) -> n
    void vRetSetRecordTimeResult(int) -> p
    void vRetSetNetTypeResult(int) -> g
    void vRetSetVolumeResult(int) -> d
    void vRetSetRecordPlanTimeResult(int) -> q
    void vRetSetDeviceTimeResult(int) -> a
    void vRetGetDeviceTimeResult(java.lang.String) -> a
    void vRetAlarmEmailResult(int,java.lang.String) -> a
    void vRetWifiResult(int,int,int,int[],int[],java.lang.String[]) -> a
    void vRetDefenceAreaResult(int,java.util.ArrayList,int,int) -> a
    void vRetBindAlarmIdResult(int,int,java.lang.String[]) -> a
    void vRetSetInitPasswordResult(int) -> v
    void vRetSetDevicePasswordResult(int) -> f
    void vRetGetFriendStatus(int,java.lang.String[],int[],int[]) -> a
    void vRetGetRecordFiles(java.lang.String[]) -> a
    void vRetMessage(java.lang.String,java.lang.String) -> a
    void vRetSysMessage(java.lang.String) -> c
    void vRetCustomCmd(java.lang.String,java.lang.String) -> b
    void vRetGetDeviceVersion(int,java.lang.String,int,int,int) -> a
    void vRetCheckDeviceUpdate(int,java.lang.String,java.lang.String) -> a
    void vRetDoDeviceUpdate(int,int) -> A
    void vRetCancelDeviceUpdate(int) -> w
    void vRetDeviceNotSupport() -> a
    void vRetClearDefenceAreaState(int) -> r
    void vRetSetImageReverse(int) -> x
    void vRetSetInfraredSwitch(int) -> A
    void vRetSetWiredAlarmInput(int) -> E
    void vRetSetWiredAlarmOut(int) -> F
    void vRetSetAutomaticUpgrade(int) -> G
    void vRetSetVisitorDevicePassword(int) -> H
    void vRetSetTimeZone(int) -> J
    void vRetGetSdCard(int,int,int,int) -> a
    void VRetGetUsb(int,int,int,int) -> b
    void vRetSdFormat(int) -> M
    void vRetSetGPIO(int) -> N
    void vRetSetPreRecord(int) -> O
    void vRetSetSensorSwitchs(int) -> P
com.p2p.core.P2PView -> com.p2p.core.P2PView:
    android.content.Context mContext -> b
    com.p2p.core.MediaPlayer mPlayer -> c
    int mWidth -> l
    int mHeight -> m
    boolean isInitScreen -> d
    com.p2p.core.GestureDetector mGestureDetector -> e
    int deviceType -> f
    int mWindowWidth -> g
    int mWindowHeight -> h
    int fgFullScreen -> i
    com.p2p.core.GestureDetector$OnZoomInListener zoomInListener -> j
    android.view.SurfaceHolder$Callback mSHCallback -> k
    void vSetWindow() -> g
    void updateScreenOrientation() -> b
    void setCallBack() -> c
    void setGestureDetector(com.p2p.core.GestureDetector) -> a
    void setDeviceType(int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void fullScreen() -> d
    void halfScreen() -> e
    void release() -> f
    void setVideoScale(int,int,float) -> a
    boolean MovePicture(int,int) -> a
    void StopMoving() -> a
    void access$0(com.p2p.core.P2PView,int) -> a
    void access$1(com.p2p.core.P2PView,int) -> b
    int access$2(com.p2p.core.P2PView) -> a
    int access$3(com.p2p.core.P2PView) -> b
com.p2p.core.P2PView$1 -> com.p2p.core.t:
    com.p2p.core.P2PView this$0 -> a
    void onZoom(android.view.MotionEvent) -> a
com.p2p.core.P2PView$2 -> com.p2p.core.u:
    com.p2p.core.P2PView this$0 -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.p2p.core.ViewConfiguration -> com.p2p.core.v:
    float SCROLL_FRICTION -> a
    int mEdgeSlop -> b
    int mFadingEdgeLength -> c
    int mMinimumFlingVelocity -> d
    int mMaximumFlingVelocity -> e
    int mScrollbarSize -> f
    int mTouchSlop -> g
    int mPagingTouchSlop -> h
    int mDoubleTapSlop -> i
    int mWindowTouchSlop -> j
    int mMaximumDrawingCacheSize -> k
    android.util.SparseArray sConfigurations -> l
    com.p2p.core.ViewConfiguration get(android.content.Context) -> a
    int getLongPressTimeout() -> a
    int getTapTimeout() -> b
    int getDoubleTapTimeout() -> c
    int getTouchSlop() -> d
    int getScaledTouchSlop() -> e
    int getDoubleTapSlop() -> f
    int getScaledDoubleTapSlop() -> g
    int getMinimumFlingVelocity() -> h
    int getScaledMinimumFlingVelocity() -> i
    int getMaximumFlingVelocity() -> j
    int getScaledMaximumFlingVelocity() -> k
com.p2p.core.global.AlarmRecord -> com.p2p.core.b.a:
    java.lang.String alarmTime -> a
    int alarmType -> b
    java.lang.String alarmChannel -> c
com.p2p.core.global.Constants -> com.p2p.core.b.b:
com.p2p.core.global.Constants$MsgSection -> com.p2p.core.b.c:
    int MSG_ID_SETTING_DEVICE_TIME -> a
    int MSG_ID_GETTING_DEVICE_TIME -> b
    int MSG_ID_GETTING_NPC_SETTINGS -> c
    int MSG_ID_SET_REMOTE_DEFENCE -> d
    int MSG_ID_SET_REMOTE_RECORD -> e
    int MSG_ID_SETTING_NPC_SETTINGS_VIDEO_FORMAT -> f
    int MSG_ID_SETTING_NPC_SETTINGS_VIDEO_VOLUME -> g
    int MSG_ID_SETTING_NPC_SETTINGS_BUZZER -> h
    int MSG_ID_SETTING_NPC_SETTINGS_MOTION -> i
    int MSG_ID_SETTING_NPC_SETTINGS_RECORD_TYPE -> j
    int MSG_ID_SETTING_NPC_SETTINGS_RECORD_TIME -> k
    int MSG_ID_SETTING_NPC_SETTINGS_RECORD_PLAN_TIME -> l
    int MSG_ID_SETTING_NPC_SETTINGS_NET_TYPE -> m
    int MSG_ID_SETTING_ALARM_EMAIL -> n
    int MSG_ID_GETTING_ALARM_EMAIL -> o
    int MSG_ID_SETTING_ALARM_BIND_ID -> p
    int MSG_ID_GETTING_ALARM_BIND_ID -> q
    int MSG_ID_SETTING_INIT_PASSWORD -> r
    int MSG_ID_SETTING_DEVICE_PASSWORD -> s
    int MSG_ID_CHECK_DEVICE_PASSWORD -> t
    int MSG_ID_SETTING_DEFENCEAREA -> u
    int MSG_ID_GETTING_DEFENCEAREA -> v
    int MSG_ID_SETTING_WIFI -> w
    int MSG_ID_GETTING_WIFI_LIST -> x
    int MSG_ID_GETTING_RECORD_FILE_LIST -> y
    int MSG_ID_SEND_MESSAGE -> z
    int MSG_ID_SEND_CUSTOM_CMD -> A
    int MSG_ID_CHECK_DEVICE_UPDATE -> B
    int MSG_ID_CANCEL_DEVICE_UPDATE -> C
    int MSG_ID_DO_DEVICE_UPDATE -> D
    int MSG_ID_GET_DEFENCE_STATE -> E
    int MSG_ID_GET_DEVICE_VERSION -> F
    int MSG_ID_CLEAR_DEFENCE_GROUP -> G
    int MESG_ID_STTING_PIC_REVERSE -> H
    int MESG_ID_STTING_IR_ALARM_EN -> I
    int MESG_STTING_ID_EXTLINE_ALARM_IN_EN -> J
    int MESG_STTING_ID_EXTLINE_ALARM_OUT_EN -> K
    int MESG_STTING_ID_SECUPGDEV -> L
    int MESG_STTING_ID_GUEST_PASSWD -> M
    int MESG_STTING_ID_TIMEZONE -> N
    int MESG_GET_SD_CARD_CAPACITY -> O
    int MESG_SD_CARD_FORMAT -> P
    int MESG_SET_GPIO -> Q
    int MESG_SET_GPI1_0 -> R
    int MESG_SET_PRE_RECORD -> S
    int MESG_GET_DEFENCE_AREA_SWITCH -> T
    int MESG_SET_DEFENCE_AREA_SWITCH -> U
    int MESG_GET_ALARM_RECORD -> V
com.p2p.core.network.GetAccountInfoResult -> com.p2p.core.c.a:
    java.lang.String email -> a
    java.lang.String countryCode -> b
    java.lang.String phone -> c
    java.lang.String error_code -> d
    void init(org.json.JSONObject) -> a
com.p2p.core.network.LoginResult -> com.p2p.core.c.b:
    java.lang.String contactId -> a
    java.lang.String rCode1 -> b
    java.lang.String rCode2 -> c
    java.lang.String phone -> d
    java.lang.String email -> e
    java.lang.String sessionId -> f
    java.lang.String countryCode -> g
    java.lang.String error_code -> h
    void init(org.json.JSONObject) -> a
com.p2p.core.network.ModifyLoginPasswordResult -> com.p2p.core.c.c:
    java.lang.String error_code -> a
    java.lang.String sessionId -> b
    void init(org.json.JSONObject) -> a
com.p2p.core.network.NetManager -> com.p2p.core.c.d:
    java.lang.String CURRENT_SERVER -> a
    java.lang.String LOGIN_URL -> b
    java.lang.String GETPHONE_CODE_URL -> c
    java.lang.String VERIFY_CODE_URL -> d
    java.lang.String REGISTER_URL -> e
    java.lang.String ACCOUNT_INFO_URL -> f
    java.lang.String ALARM_RECORD_LIST_URL -> g
    java.lang.String EXIT_APPLICATION_URL -> h
    java.lang.String MODIFY_LOGIN_PASSWORD_URL -> i
    java.lang.String BIND_DEVICE_ACCOUNT -> j
    java.lang.String SEARCH_BIND_DEVICE_ACCOUNT -> k
    java.lang.String REMOVE_BIND_DEVICE_ACCOUNT -> l
    java.lang.String DEVICE_LIST_URL -> m
    java.lang.String MODIFY_NIKE_NAME -> n
    java.lang.String ALARM_MSSAGE_URL -> o
    int reconnect_count -> p
    java.lang.String[] servers -> q
    boolean isInit -> r
    com.p2p.core.network.NetManager manager -> s
    android.content.Context mContext -> t
    com.p2p.core.network.NetManager getInstance(android.content.Context) -> a
    void initServer() -> a
    void randomServer() -> b
    void updateUrl(java.lang.String) -> a
    java.lang.String doPost(java.util.List,java.lang.String) -> a
    org.json.JSONObject getAccountInfo(java.lang.String,java.lang.String) -> a
    org.json.JSONObject modifyLoginPassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int setAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    org.json.JSONObject login(java.lang.String,java.lang.String) -> b
    int getPhoneCode(java.lang.String,java.lang.String) -> c
    int verifyPhoneCode(java.lang.String,java.lang.String,java.lang.String) -> a
    org.json.JSONObject register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    int exit_application(java.lang.String,java.lang.String) -> d
    com.p2p.core.network.RegisterResult createRegisterResult(org.json.JSONObject) -> a
    com.p2p.core.network.GetAccountInfoResult createGetAccountInfoResult(org.json.JSONObject) -> b
    com.p2p.core.network.ModifyLoginPasswordResult createModifyLoginPasswordResult(org.json.JSONObject) -> c
    com.p2p.core.network.LoginResult createLoginResult(org.json.JSONObject) -> d
com.p2p.core.network.RegisterResult -> com.p2p.core.c.e:
    java.lang.String contactId -> a
    java.lang.String error_code -> b
    void init(org.json.JSONObject) -> a
com.p2p.core.update.UpdateManager -> com.p2p.core.d.a:
    boolean isDowning -> a
    java.lang.String version_server -> b
    com.p2p.core.update.UpdateManager manager -> c
    com.p2p.core.update.UpdateManager getInstance() -> a
    boolean getIsDowning() -> b
    void cancelDown() -> c
    boolean checkUpdate() -> d
    java.lang.String getUpdateDescription() -> e
    java.lang.String getUpdateDescription_en() -> f
    void downloadApk(android.os.Handler,java.lang.String,java.lang.String) -> a
com.p2p.core.utils.HomeWatcher -> com.p2p.core.e.a:
    android.content.Context mContext -> a
    android.content.IntentFilter mFilter -> b
    com.p2p.core.utils.OnHomePressedListener mListener -> c
    com.p2p.core.utils.HomeWatcher$InnerRecevier mRecevier -> d
    boolean isRegister -> e
    void setOnHomePressedListener(com.p2p.core.utils.OnHomePressedListener) -> a
    void startWatch() -> a
    void stopWatch() -> b
    com.p2p.core.utils.OnHomePressedListener access$0(com.p2p.core.utils.HomeWatcher) -> a
com.p2p.core.utils.HomeWatcher$InnerRecevier -> com.p2p.core.e.b:
    java.lang.String SYSTEM_DIALOG_REASON_KEY -> a
    java.lang.String SYSTEM_DIALOG_REASON_GLOBAL_ACTIONS -> b
    java.lang.String SYSTEM_DIALOG_REASON_RECENT_APPS -> c
    java.lang.String SYSTEM_DIALOG_REASON_HOME_KEY -> d
    com.p2p.core.utils.HomeWatcher this$0 -> e
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.p2p.core.utils.MD5 -> com.p2p.core.e.c:
    byte[] PADDING -> a
    long[] state -> c
    long[] count -> d
    byte[] buffer -> e
    java.lang.String digestHexStr -> b
    byte[] digest -> f
    java.lang.String getMD5ofStr(java.lang.String) -> a
    void md5Init() -> a
    long F(long,long,long) -> a
    long G(long,long,long) -> b
    long H(long,long,long) -> c
    long I(long,long,long) -> d
    long FF(long,long,long,long,long,long,long) -> a
    long GG(long,long,long,long,long,long,long) -> b
    long HH(long,long,long,long,long,long,long) -> c
    long II(long,long,long,long,long,long,long) -> d
    void md5Update(byte[],int) -> a
    void md5Final() -> b
    void md5Memcpy(byte[],byte[],int,int,int) -> a
    void md5Transform(byte[]) -> a
    void Encode(byte[],long[],int) -> a
    void Decode(long[],byte[],int) -> a
    long b2iu(byte) -> a
    java.lang.String byteHEX(byte) -> b
com.p2p.core.utils.MyUtils -> com.p2p.core.e.d:
    boolean isNumeric(java.lang.String) -> a
    int getCPUVesion() -> a
    boolean isZh(android.content.Context) -> a
    java.lang.String convertPlanTime(int) -> a
    int convertPlanTime(java.lang.String) -> b
    int dip2px(android.content.Context,int) -> a
    java.lang.String convertDeviceTime(int) -> b
    java.lang.String getBitProcessingVersion() -> b
    java.lang.String getVersion() -> c
    java.util.HashMap parseXml(java.io.InputStream) -> a
com.p2p.core.utils.OnHomePressedListener -> com.p2p.core.e.e:
    void onHomePressed() -> a
    void onHomeLongPressed() -> o
com.p2p.shake.ShakeData -> com.p2p.a.a:
    int cmd -> a
    int error_code -> b
    int leftlength -> c
    int rightCount -> d
    int id -> e
    int type -> f
    int flag -> g
    java.lang.String name -> h
    byte[] getBytes(com.p2p.shake.ShakeData) -> a
    com.p2p.shake.ShakeData getShakeData(java.nio.ByteBuffer) -> a
    int getCmd() -> a
    void setCmd(int) -> a
    int getLeftlength() -> b
    void setLeftlength(int) -> b
    int getRightCount() -> c
    void setRightCount(int) -> c
    int getError_code() -> d
    void setError_code(int) -> d
    int getId() -> e
    void setId(int) -> e
    java.lang.String getName() -> f
    int getType() -> g
    void setType(int) -> f
    int getFlag() -> h
    void setFlag(int) -> g
com.p2p.shake.ShakeData$Cmd -> com.p2p.a.b:
    int[] getCmds() -> a
com.p2p.shake.ShakeManager -> com.p2p.a.c:
    com.p2p.shake.ShakeManager manager -> b
    com.p2p.shake.ShakeThread shakeThread -> c
    long searchTime -> d
    android.os.Handler handler -> a
    com.p2p.shake.ShakeManager getInstance() -> a
    void setHandler(android.os.Handler) -> a
    void setSearchTime(long) -> a
    boolean shaking() -> b
    void stopShaking() -> c
com.p2p.shake.ShakeThread -> com.p2p.a.d:
    int SEND_TIMES -> a
    int port -> b
    boolean isRun -> c
    java.net.DatagramSocket server -> d
    java.net.DatagramSocket broadcast -> e
    java.nio.channels.Selector selector -> f
    java.nio.channels.DatagramChannel channel -> g
    android.os.Handler handler -> h
    void setSearchTime(long) -> a
    void setHandler(android.os.Handler) -> a
    void run() -> run
    void killThread() -> a
    java.net.DatagramSocket access$0(com.p2p.shake.ShakeThread) -> a
    void access$1(com.p2p.shake.ShakeThread,java.net.DatagramSocket) -> a
    boolean access$2(com.p2p.shake.ShakeThread) -> b
    int access$3(com.p2p.shake.ShakeThread) -> c
com.p2p.shake.ShakeThread$1 -> com.p2p.a.e:
    com.p2p.shake.ShakeThread this$0 -> a
    void run() -> run
net.sourceforge.pinyin4j.ChineseToPinyinResource -> a.a.a.a:
    java.util.Properties unicodeToHanyuPinyinTable -> a
    void setUnicodeToHanyuPinyinTable(java.util.Properties) -> a
    java.util.Properties getUnicodeToHanyuPinyinTable() -> b
    void initializeResource() -> c
    java.lang.String[] getHanyuPinyinStringArray(char) -> a
    boolean isValidRecord(java.lang.String) -> a
    java.lang.String getHanyuPinyinRecordFromChar(char) -> b
    net.sourceforge.pinyin4j.ChineseToPinyinResource getInstance() -> a
net.sourceforge.pinyin4j.ChineseToPinyinResource$1 -> a.a.a.b:
net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder -> a.a.a.c:
    net.sourceforge.pinyin4j.ChineseToPinyinResource theInstance -> a
net.sourceforge.pinyin4j.PinyinHelper -> a.a.a.d:
    java.lang.String[] toHanyuPinyinStringArray(char) -> a
    java.lang.String[] getUnformattedHanyuPinyinStringArray(char) -> b
net.sourceforge.pinyin4j.ResourceHelper -> a.a.a.e:
    java.lang.Class class$net$sourceforge$pinyin4j$ResourceHelper -> a
    java.io.BufferedInputStream getResourceInputStream(java.lang.String) -> a
    java.lang.Class class$(java.lang.String) -> b
